// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220412123536_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "fc80d00c-604e-42cc-bc5c-8689671971b7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1a0686a3-6e6e-4fa5-ab8c-d5b7db467426",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "ADqrhNBzHv5Xn72jGD2ZKuIMtlDlIHreNM8+ZljPV/3cRG4wCzQEf+eHh65UKCsuvg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bfdd7bbb-41c0-4de7-aa59-78de9a8e3506",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "5dd7d960-1035-4f49-a64c-65601a54f81c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44688d93-7b0c-4b8e-9f37-7d8b468bc227",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Helen_Orn@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Helen",
                            LastName = "Orn",
                            LockoutEnabled = false,
                            NormalizedEmail = "HELEN_ORN@HOTMAIL.COM",
                            NormalizedUserName = "HELEN_ORN@HOTMAIL.COM",
                            PasswordHash = "AJvkL43S4AdA/ns9DGx0752GCxwvKNF8unRZoSHzFEoDztphJKdSLsHnH9TnNMYOow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f105802-dc97-4455-9980-509e67c78af9",
                            TwoFactorEnabled = false,
                            UserName = "Helen_Orn@hotmail.com"
                        },
                        new
                        {
                            Id = "7f61ead1-2e40-491b-a56c-c9b94e12d7f2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a3da8095-e256-4c04-98e8-0173188ef38f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Adrian.Maggio@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Adrian",
                            LastName = "Maggio",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADRIAN.MAGGIO@GMAIL.COM",
                            NormalizedUserName = "ADRIAN.MAGGIO@GMAIL.COM",
                            PasswordHash = "AJOmC4fUPUqh/60c4Zkc+463j8LD5O8BHlBhUG2ibtK6+QLMT0idQtsYdrkjCNc34A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d38abed2-33d5-42b4-97ac-54c6b8dae2bc",
                            TwoFactorEnabled = false,
                            UserName = "Adrian.Maggio@gmail.com"
                        },
                        new
                        {
                            Id = "1671bf5b-88a7-41aa-924b-30b88454d8ce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "96917c41-6514-43f1-b87d-5e4eda3ceaf9",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Suzanne_Waters@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Suzanne",
                            LastName = "Waters",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUZANNE_WATERS@HOTMAIL.COM",
                            NormalizedUserName = "SUZANNE_WATERS@HOTMAIL.COM",
                            PasswordHash = "ABkc7/s+9XSKToXeB+gGS1yCMlweacnPxNTbuJj8S16yVVLadYfR0V0byZ59Uq67Rg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ea20a57b-d7d1-4425-b14b-d35e757a5e9d",
                            TwoFactorEnabled = false,
                            UserName = "Suzanne_Waters@hotmail.com"
                        },
                        new
                        {
                            Id = "f756ced7-3ef9-412a-94dc-60bfa7d21f7f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76caaeec-411e-4ae8-93f7-f743ee0e1db9",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alicia_Johns32@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alicia",
                            LastName = "Johns",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALICIA_JOHNS32@GMAIL.COM",
                            NormalizedUserName = "ALICIA_JOHNS32@GMAIL.COM",
                            PasswordHash = "AMp+z4Ux2tObc/l5tmkvVZmJ+bP+HuA8TM7AneGuUqKJmED7lXTxNuuyycCTSMWkXQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ce34f7ce-9c2d-41af-bbcc-b8747e3def50",
                            TwoFactorEnabled = false,
                            UserName = "Alicia_Johns32@gmail.com"
                        },
                        new
                        {
                            Id = "045901b2-e6b5-4d10-a3d9-304b61fea438",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3bca9aac-59d7-4160-ad93-05893bbb561b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ruth.King@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruth",
                            LastName = "King",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUTH.KING@HOTMAIL.COM",
                            NormalizedUserName = "RUTH.KING@HOTMAIL.COM",
                            PasswordHash = "AP07gakmG0h6ytlkHOtyEmmbzly24WpqTLVeUOpGYswRSGlhPkMq0YDvQcq6FqGPQw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "01f00c27-79fb-409c-8e9d-be39cd3438d0",
                            TwoFactorEnabled = false,
                            UserName = "Ruth.King@hotmail.com"
                        },
                        new
                        {
                            Id = "2a81cd22-95e4-4f88-994c-07f4b22d14b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a67e8944-3b16-4753-9924-e67b3091e604",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Forrest_Baumbach15@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Forrest",
                            LastName = "Baumbach",
                            LockoutEnabled = false,
                            NormalizedEmail = "FORREST_BAUMBACH15@HOTMAIL.COM",
                            NormalizedUserName = "FORREST_BAUMBACH15@HOTMAIL.COM",
                            PasswordHash = "AP6dVhvG0whYeAhEPKdiUQZODP/rSlXCJ4rvQVlUvaKDDeqBdDKOOoDphvdgmIlgcw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1de45cb2-ab5b-4b87-a8df-281b9e9ee413",
                            TwoFactorEnabled = false,
                            UserName = "Forrest_Baumbach15@hotmail.com"
                        },
                        new
                        {
                            Id = "d9328fea-c2d5-4961-9d35-a537d2aee8e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5791468a-e95f-4ff2-a3db-f0c909870445",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Frank.Corwin@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Frank",
                            LastName = "Corwin",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRANK.CORWIN@YAHOO.COM",
                            NormalizedUserName = "FRANK.CORWIN@YAHOO.COM",
                            PasswordHash = "AL4lE5NQ19cM2BnT/AocVOCd1vEn5mcfJOkj+g9ItsLTu1rXAqQ5IrwYjSVao44LhA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "99a927b2-61ff-4c60-baf2-eb615731cef2",
                            TwoFactorEnabled = false,
                            UserName = "Frank.Corwin@yahoo.com"
                        },
                        new
                        {
                            Id = "49bd90aa-aecf-40a9-96c1-63348daaa649",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "802d537e-f57f-4714-855d-93f3577534e0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eunice96@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Eunice",
                            LastName = "Marquardt",
                            LockoutEnabled = false,
                            NormalizedEmail = "EUNICE96@YAHOO.COM",
                            NormalizedUserName = "EUNICE96@YAHOO.COM",
                            PasswordHash = "AOWCcENYkha3SGq6gPDnRS4uLOjPIsIp8BNAJa1XFQjaQl5fhAfaO6nbvhLLJIrZHA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3de5506e-5be4-416c-be2a-c2b7619de041",
                            TwoFactorEnabled = false,
                            UserName = "Eunice96@yahoo.com"
                        },
                        new
                        {
                            Id = "d72443b1-e09d-407b-a89f-aa9eb12d68bb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b880537-b6c0-4d55-ae7c-869cd8343a2e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Myra_Sanford@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Myra",
                            LastName = "Sanford",
                            LockoutEnabled = false,
                            NormalizedEmail = "MYRA_SANFORD@GMAIL.COM",
                            NormalizedUserName = "MYRA_SANFORD@GMAIL.COM",
                            PasswordHash = "AO3+7C+48cTzC2gF0FlIzurah1D7Irs4q7S37FGniRRPlbyRK9S5zSC82BebbOEi+w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e6380da2-5d10-4dd9-ab39-96ce1d6398bc",
                            TwoFactorEnabled = false,
                            UserName = "Myra_Sanford@gmail.com"
                        },
                        new
                        {
                            Id = "b3a1be30-48a3-409c-aaa0-f2e642334fa7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "93327f02-7a26-4320-80dc-10f40e80a05f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jordan_Ryan27@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jordan",
                            LastName = "Ryan",
                            LockoutEnabled = false,
                            NormalizedEmail = "JORDAN_RYAN27@HOTMAIL.COM",
                            NormalizedUserName = "JORDAN_RYAN27@HOTMAIL.COM",
                            PasswordHash = "AIaRKjslYM1L2yGepa4vOXmBh60no8D3TKuW+SHqTzWM+Ozic3KZ2MBTTQalQsisOg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "238bd70a-4625-4b2d-b438-4c2df341af59",
                            TwoFactorEnabled = false,
                            UserName = "Jordan_Ryan27@hotmail.com"
                        },
                        new
                        {
                            Id = "fb83e155-239d-4d8c-bceb-c36f15d4dcbe",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9714278-4043-4c53-8fce-749f60188350",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "June44@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "June",
                            LastName = "Nienow",
                            LockoutEnabled = false,
                            NormalizedEmail = "JUNE44@HOTMAIL.COM",
                            NormalizedUserName = "JUNE44@HOTMAIL.COM",
                            PasswordHash = "AFMbHL7LBaF0BA9ncbesMVmj8kr21qXHVIqufGWSbbHCn0DHGdwCcbc/mz8gjOlAMg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b404a75c-9293-4e48-be37-cedfcb2ce70d",
                            TwoFactorEnabled = false,
                            UserName = "June44@hotmail.com"
                        },
                        new
                        {
                            Id = "6bec7dc0-6d0e-48f8-ba7f-ff825d9abf83",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "19fe22a3-7b1c-46f9-b0fb-11dfd92fa030",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Gina55@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gina",
                            LastName = "Kertzmann",
                            LockoutEnabled = false,
                            NormalizedEmail = "GINA55@HOTMAIL.COM",
                            NormalizedUserName = "GINA55@HOTMAIL.COM",
                            PasswordHash = "AKnSO8LOltlucfYcKKxGGdCrNUmSE5VKPlysMB9LvYp+bjTeTykIYY14sUj5MvWtNg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ed09aca-42b7-4dc8-b79c-b7247b49c85c",
                            TwoFactorEnabled = false,
                            UserName = "Gina55@hotmail.com"
                        },
                        new
                        {
                            Id = "f823fce0-0cd0-4afb-be80-dcee68b9adc0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5acd6a98-752a-4659-b21e-57bf6bc2f9f3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Thelma32@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Thelma",
                            LastName = "Marquardt",
                            LockoutEnabled = false,
                            NormalizedEmail = "THELMA32@GMAIL.COM",
                            NormalizedUserName = "THELMA32@GMAIL.COM",
                            PasswordHash = "AFroGv+55KyItUvP7620/micTByWoAlsDSOJ+dh3Y3eUQXAfaz4xmzyB8CltKA0jjw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1438c15e-1df0-46df-85dd-8dbc5d554eb5",
                            TwoFactorEnabled = false,
                            UserName = "Thelma32@gmail.com"
                        },
                        new
                        {
                            Id = "ea7342fc-e1ef-47a6-a220-fa9135c30a2b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d66e2388-4773-4faa-aed8-7dd75e52e922",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Priscilla.Rempel53@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Priscilla",
                            LastName = "Rempel",
                            LockoutEnabled = false,
                            NormalizedEmail = "PRISCILLA.REMPEL53@YAHOO.COM",
                            NormalizedUserName = "PRISCILLA.REMPEL53@YAHOO.COM",
                            PasswordHash = "AK0GUEom260WriwkOtw6CNKb05fPIVnHXGda/Jy8NeTebyFxZ6qTjvMimWOMHfVqPQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0907eee6-2e63-4ad2-8529-ef606bc12467",
                            TwoFactorEnabled = false,
                            UserName = "Priscilla.Rempel53@yahoo.com"
                        },
                        new
                        {
                            Id = "0673e3a9-d62c-4a0d-b1d7-73caa081fa50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "224646a4-8e10-4274-b4af-a68d1c63b27b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Abel63@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Abel",
                            LastName = "Reynolds",
                            LockoutEnabled = false,
                            NormalizedEmail = "ABEL63@GMAIL.COM",
                            NormalizedUserName = "ABEL63@GMAIL.COM",
                            PasswordHash = "AF21KRnfa5N5MMUKPXs8pS/jSWS4Rb2iCLN6TiWNfSsnyifS7j5jdG7k62PW8UYDxw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "545e2960-0c13-4467-a83a-511189e5f999",
                            TwoFactorEnabled = false,
                            UserName = "Abel63@gmail.com"
                        },
                        new
                        {
                            Id = "95492ce8-841a-43a2-84b2-f683ce1ee634",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f107305-a9b8-4772-9c9e-412340cb9944",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ella49@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ella",
                            LastName = "Beatty",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELLA49@HOTMAIL.COM",
                            NormalizedUserName = "ELLA49@HOTMAIL.COM",
                            PasswordHash = "ADO07q45qHPrN2l7TlQmu2Ep9Pc1tCyp2ajWPYhsKppBTqh/VhK4aIawizFR+GTccQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f277efd8-79c2-4404-97eb-3fbf4be68d3a",
                            TwoFactorEnabled = false,
                            UserName = "Ella49@hotmail.com"
                        },
                        new
                        {
                            Id = "05de0c15-001d-4963-aa3f-c631a0b63182",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "74935187-7b30-4eee-9d9c-4831f9380334",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lauren.Heller21@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lauren",
                            LastName = "Heller",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAUREN.HELLER21@GMAIL.COM",
                            NormalizedUserName = "LAUREN.HELLER21@GMAIL.COM",
                            PasswordHash = "AP+nxTPRJlpLo/tTf29AQdyryzvaDL37mMxWlZ8Zb6AanrgPgrrAXz30NxOIieM+8g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3263953e-a630-4f98-a9ad-f94b9f4bf3de",
                            TwoFactorEnabled = false,
                            UserName = "Lauren.Heller21@gmail.com"
                        },
                        new
                        {
                            Id = "631bcd2a-a888-465d-92fa-cdd3917538c1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "203fcc04-85fa-4633-a456-067f42757cbb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Heather.Wuckert@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Heather",
                            LastName = "Wuckert",
                            LockoutEnabled = false,
                            NormalizedEmail = "HEATHER.WUCKERT@YAHOO.COM",
                            NormalizedUserName = "HEATHER.WUCKERT@YAHOO.COM",
                            PasswordHash = "AObiueT6qTmStl/n+bLXj91/NWnnokE9OXtv5f10gsU26jUruli/3rV0XWzs2SXcZQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "988443ba-9b2e-41bf-9c0b-15e78c380a6d",
                            TwoFactorEnabled = false,
                            UserName = "Heather.Wuckert@yahoo.com"
                        },
                        new
                        {
                            Id = "ade1fbf6-b4ba-4a1f-8da6-704f1a23b72b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "40fc4e99-7ab1-4a37-b51a-7ccb0ef2ce88",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "James_Stanton77@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "James",
                            LastName = "Stanton",
                            LockoutEnabled = false,
                            NormalizedEmail = "JAMES_STANTON77@HOTMAIL.COM",
                            NormalizedUserName = "JAMES_STANTON77@HOTMAIL.COM",
                            PasswordHash = "ANa94RpOkXtWjDJgJM7mj4MASy/+jEeqOqj9KUBUuEuzKwF6by4Phk4p1uZlUg2bVw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7121ff4a-34fd-4958-b4e5-2e0ff5aeb2e5",
                            TwoFactorEnabled = false,
                            UserName = "James_Stanton77@hotmail.com"
                        },
                        new
                        {
                            Id = "420027fa-8a44-4d72-bbc1-b8b76f020096",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6e48482-a5c2-4dbc-a0c5-171af5f3be15",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sheri_Gaylord@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sheri",
                            LastName = "Gaylord",
                            LockoutEnabled = false,
                            NormalizedEmail = "SHERI_GAYLORD@HOTMAIL.COM",
                            NormalizedUserName = "SHERI_GAYLORD@HOTMAIL.COM",
                            PasswordHash = "AB3CnTCTL36cafJ10J5x2oQIqpfheIlrJ4WY7q3Uagu7cLPIHSpLTvSgfXEuvZQs6w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4d8a97f7-6923-4126-bba6-66f9509e2a2b",
                            TwoFactorEnabled = false,
                            UserName = "Sheri_Gaylord@hotmail.com"
                        },
                        new
                        {
                            Id = "7d2ef3c4-df55-4165-8bcf-947a2511565f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1ff9c69-87af-475c-b50d-7706a62c0aed",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nathan20@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Nathan",
                            LastName = "Stamm",
                            LockoutEnabled = false,
                            NormalizedEmail = "NATHAN20@YAHOO.COM",
                            NormalizedUserName = "NATHAN20@YAHOO.COM",
                            PasswordHash = "APqKiG9Eoge9lvWvqOipAxGInAFrY6Pi9OhmN/wmqj5frxAI0civL1qQQWLaS3ol4g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b6a80bf-6828-4d97-bd29-24538c34c39c",
                            TwoFactorEnabled = false,
                            UserName = "Nathan20@yahoo.com"
                        },
                        new
                        {
                            Id = "da28e3a2-2e42-4656-a04c-30cd132b13a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "318380b9-9d01-4a40-b701-ca17aaeaec9a",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wallace50@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wallace",
                            LastName = "Murphy",
                            LockoutEnabled = false,
                            NormalizedEmail = "WALLACE50@GMAIL.COM",
                            NormalizedUserName = "WALLACE50@GMAIL.COM",
                            PasswordHash = "AIo+K0HghpPSzC+jnbNPR1OWhleDjItvJlR5Hlz/4OU8BrdUSfd/el9wXCa1+xJGrQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f044a89-a7f8-491c-8973-4a30ceba5ff9",
                            TwoFactorEnabled = false,
                            UserName = "Wallace50@gmail.com"
                        },
                        new
                        {
                            Id = "71014e4a-276d-485f-b4f9-171836360e62",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "541d676a-79f6-4eee-8fd4-12aee381ca50",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Terry47@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Terry",
                            LastName = "Senger",
                            LockoutEnabled = false,
                            NormalizedEmail = "TERRY47@HOTMAIL.COM",
                            NormalizedUserName = "TERRY47@HOTMAIL.COM",
                            PasswordHash = "AKYGAARvBN5M94K0JBF4BdvlGFzacVzLSzEkZNXmJtFQK8pifXp6407aoDsbGB5B9A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f2f648d-cb39-44a2-9b1a-6600c5ad7426",
                            TwoFactorEnabled = false,
                            UserName = "Terry47@hotmail.com"
                        },
                        new
                        {
                            Id = "78253540-e3da-48a3-9397-8f92b611add5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb2d3742-5dd3-421d-90d1-5a8ca54c8d74",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rosalie7@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rosalie",
                            LastName = "Ritchie",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSALIE7@GMAIL.COM",
                            NormalizedUserName = "ROSALIE7@GMAIL.COM",
                            PasswordHash = "AEADoLET/TYNjYosj3ut+5/Ad/VfcPKyrab5N2o7wo+1Wq+1mIGYKc1MX5Mzgftr2g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "afd547f5-60b2-4f98-9787-0664036b5a57",
                            TwoFactorEnabled = false,
                            UserName = "Rosalie7@gmail.com"
                        },
                        new
                        {
                            Id = "bccbf7f9-4692-4c99-b4fa-039ff3ac9acb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e1f4d6d8-ded0-4c97-ac5c-7bdf64ffc75e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Carmen31@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Carmen",
                            LastName = "Nienow",
                            LockoutEnabled = false,
                            NormalizedEmail = "CARMEN31@HOTMAIL.COM",
                            NormalizedUserName = "CARMEN31@HOTMAIL.COM",
                            PasswordHash = "ACGZVbqMMRcZL2WAy9r6GXCS9P6T6q3iiigsEPgX0TBWVlw/OCQnRboiB5NKex1zuw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bcc08cb9-8806-4f3d-adb5-50a931442d4b",
                            TwoFactorEnabled = false,
                            UserName = "Carmen31@hotmail.com"
                        },
                        new
                        {
                            Id = "72bb2a5a-37a9-459c-a44a-1c5ffcf3f25a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "937935e4-7d5d-4114-9138-bead85ee84ec",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anthony_Corkery@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anthony",
                            LastName = "Corkery",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANTHONY_CORKERY@HOTMAIL.COM",
                            NormalizedUserName = "ANTHONY_CORKERY@HOTMAIL.COM",
                            PasswordHash = "ACR86D4Ylu6/h3ohtvgGDxaERs75KMWLYgakkPggf5+GYa8U//n9TkIxiv8ngUeaIw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0571f9d9-1ee8-4b8b-8778-4c5d00ef9932",
                            TwoFactorEnabled = false,
                            UserName = "Anthony_Corkery@hotmail.com"
                        },
                        new
                        {
                            Id = "0e0376f3-e53d-4124-8891-1a154f6306d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5dbf8048-f290-4d29-9c7d-8f610353f612",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Janie_Feil16@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Janie",
                            LastName = "Feil",
                            LockoutEnabled = false,
                            NormalizedEmail = "JANIE_FEIL16@GMAIL.COM",
                            NormalizedUserName = "JANIE_FEIL16@GMAIL.COM",
                            PasswordHash = "ADdrnpayjqljCbEPfoS4YSM7kJS9qFTj8WSlmVclN4ttsJIYKAwwv01q9L+B5jdbiA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4f6b6275-41ee-4de9-a8b0-66cf2892d25d",
                            TwoFactorEnabled = false,
                            UserName = "Janie_Feil16@gmail.com"
                        },
                        new
                        {
                            Id = "b77dbdfd-3760-426c-94e6-93e0084c5475",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f79b27c-308e-480a-84b4-ae07cf70d1b1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Christina.Stracke77@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Christina",
                            LastName = "Stracke",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHRISTINA.STRACKE77@GMAIL.COM",
                            NormalizedUserName = "CHRISTINA.STRACKE77@GMAIL.COM",
                            PasswordHash = "AFi15HQ+VoKVDpjeq4VtRdzhtndOJjN6U/NgxH7TKBzW6Hm+bP5GrDPH9vARCyohfg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ae597662-a325-46bc-9c4e-4995e817d0be",
                            TwoFactorEnabled = false,
                            UserName = "Christina.Stracke77@gmail.com"
                        },
                        new
                        {
                            Id = "6aa57f41-b80c-4db1-a0ca-3be90c92d757",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0708a933-f20c-469b-a270-5ca0c6b46bc7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dorothy12@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dorothy",
                            LastName = "Bartoletti",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOROTHY12@GMAIL.COM",
                            NormalizedUserName = "DOROTHY12@GMAIL.COM",
                            PasswordHash = "APsv2hBRgdBztpZeEJEynezgVS6HNfh6PgucVjJnFsOfxZC2VDSA/vduwo/KPfr+uA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b0611de-4826-4922-bc82-156f57f23378",
                            TwoFactorEnabled = false,
                            UserName = "Dorothy12@gmail.com"
                        },
                        new
                        {
                            Id = "526499a4-da0f-4ecc-8349-374cddc8ee87",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e56b7041-a6e0-4feb-a6c6-1e7b0e8f2144",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Todd_Larson@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Todd",
                            LastName = "Larson",
                            LockoutEnabled = false,
                            NormalizedEmail = "TODD_LARSON@GMAIL.COM",
                            NormalizedUserName = "TODD_LARSON@GMAIL.COM",
                            PasswordHash = "ADwHq/UmVLXQoAx5z1LsjBo2scVhydamXWNLH0lLN46+BsFsAJWtPhbyAENotmiHhw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e6814d2-7fa8-4905-98a8-bb1b95158579",
                            TwoFactorEnabled = false,
                            UserName = "Todd_Larson@gmail.com"
                        },
                        new
                        {
                            Id = "194cd3b8-0428-4200-b389-28a517042651",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e7282f96-39e8-4fa2-8d6e-2223e9742f79",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jessie_Koss@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jessie",
                            LastName = "Koss",
                            LockoutEnabled = false,
                            NormalizedEmail = "JESSIE_KOSS@HOTMAIL.COM",
                            NormalizedUserName = "JESSIE_KOSS@HOTMAIL.COM",
                            PasswordHash = "ANH15W4eusg/W1PSbjLuO1UT6a4LM2OsmHU/l6kiqyQ3Cgp6wwvEgEIvJSYT6civDA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e64d5af1-8cfa-4852-a9d0-769e9283ca6b",
                            TwoFactorEnabled = false,
                            UserName = "Jessie_Koss@hotmail.com"
                        },
                        new
                        {
                            Id = "35fcdaad-8538-4294-bc58-01b84ab7b57f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "904d843a-c03c-4da2-8477-d78a86d208e9",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Duane60@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Duane",
                            LastName = "Mayer",
                            LockoutEnabled = false,
                            NormalizedEmail = "DUANE60@HOTMAIL.COM",
                            NormalizedUserName = "DUANE60@HOTMAIL.COM",
                            PasswordHash = "AJ87KJqaktVBJoaSOzFzFf1MdokdxanOs6ILEC/lNffF++T98AFxnk7haaoqT19EDA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0279dae2-4533-49e0-ac33-7c7e1564dd72",
                            TwoFactorEnabled = false,
                            UserName = "Duane60@hotmail.com"
                        },
                        new
                        {
                            Id = "ea805a6b-7f70-4725-a90a-882f8a5ba7e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ae16dec-9cb4-47e0-8c03-b0953b176e7b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ruben.Renner50@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruben",
                            LastName = "Renner",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUBEN.RENNER50@GMAIL.COM",
                            NormalizedUserName = "RUBEN.RENNER50@GMAIL.COM",
                            PasswordHash = "AJAUsu3bvAJ+qrOvHiLMm3YVZWmZxCj1GgiTrtY3YUTp5DTgQliHhu4+U4oM81w2oA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5c02c05-1b2e-4b9f-8f3d-8a3f50b56549",
                            TwoFactorEnabled = false,
                            UserName = "Ruben.Renner50@gmail.com"
                        },
                        new
                        {
                            Id = "c856561d-8afd-407d-9716-2b97926137bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c846cae2-e66b-43b8-82cd-84dee07e8d15",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Van87@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Van",
                            LastName = "Olson",
                            LockoutEnabled = false,
                            NormalizedEmail = "VAN87@GMAIL.COM",
                            NormalizedUserName = "VAN87@GMAIL.COM",
                            PasswordHash = "AMO7pFEE1FxpwlgL+C72MLGr3mhr4o9xvFfTDbD3Kc6PYkusTWH+IMuvdXky9cvVdA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b0f28347-ebca-4c4a-afff-617f3d6007d5",
                            TwoFactorEnabled = false,
                            UserName = "Van87@gmail.com"
                        },
                        new
                        {
                            Id = "4e0f7e63-8ee5-49f3-b504-70d63f0248f4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e1868cbc-6348-4b8f-bfe1-250258cfbcf8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Terrance84@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Terrance",
                            LastName = "Treutel",
                            LockoutEnabled = false,
                            NormalizedEmail = "TERRANCE84@GMAIL.COM",
                            NormalizedUserName = "TERRANCE84@GMAIL.COM",
                            PasswordHash = "AO5LWaO4Zu8drLStC+2n61TkOO28RTTuuj4/rLJmKz8Rx3ZZhWQmLsbY0jtZg2LRyQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4df8b896-27d8-46a8-aded-7eca66498ec3",
                            TwoFactorEnabled = false,
                            UserName = "Terrance84@gmail.com"
                        },
                        new
                        {
                            Id = "b2a6c8bc-0c16-4853-bb9b-d2367d5d80ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a0c150ee-e464-40e1-838e-9062806618bd",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Margarita_Marquardt@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Margarita",
                            LastName = "Marquardt",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARGARITA_MARQUARDT@HOTMAIL.COM",
                            NormalizedUserName = "MARGARITA_MARQUARDT@HOTMAIL.COM",
                            PasswordHash = "ANcWfFCAkyixeAzR+DAWB5UusdZMlz0aenqfCNHGs+tTYjcvd/z2zYb0ZSlLqe9VfA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b36c3ad9-379f-4ff9-805e-729ef625fc17",
                            TwoFactorEnabled = false,
                            UserName = "Margarita_Marquardt@hotmail.com"
                        },
                        new
                        {
                            Id = "d1f937e2-9636-4e34-ae03-8f519c74f6b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3e132e8a-e77e-44c9-ae63-7be7ec185aaa",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Irma19@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Irma",
                            LastName = "Bogisich",
                            LockoutEnabled = false,
                            NormalizedEmail = "IRMA19@YAHOO.COM",
                            NormalizedUserName = "IRMA19@YAHOO.COM",
                            PasswordHash = "ACzPqpCLPt/Sb1MKGtrPHaY3GackWtieLQa/plb5xUARpSTRu5UaPpODpwaBOVj54w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fbdd3d55-6b48-443a-af7a-7eb7b1471123",
                            TwoFactorEnabled = false,
                            UserName = "Irma19@yahoo.com"
                        },
                        new
                        {
                            Id = "ef47c999-718f-46f6-bb26-821a17acf8bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8f94715e-b136-48e2-ba07-df4098d21e8d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Flora35@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Flora",
                            LastName = "Cartwright",
                            LockoutEnabled = false,
                            NormalizedEmail = "FLORA35@YAHOO.COM",
                            NormalizedUserName = "FLORA35@YAHOO.COM",
                            PasswordHash = "AD2KF82r41Ek2pAFZc3zLPBmoJ+suGsTtHO7lPq9Eqn2IBcpt6YWp9MyOW5zJ6MuoQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8fc714a-93e0-4ea8-ab22-33311243b96b",
                            TwoFactorEnabled = false,
                            UserName = "Flora35@yahoo.com"
                        },
                        new
                        {
                            Id = "aa076299-5538-4c74-b5d9-213c86b95b92",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dff779aa-ed3e-4b33-b79f-66e638ea9e99",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Guy_Reichert@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Guy",
                            LastName = "Reichert",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUY_REICHERT@YAHOO.COM",
                            NormalizedUserName = "GUY_REICHERT@YAHOO.COM",
                            PasswordHash = "AKRAMSW8NAw/INMFnPkD2pXp3xyDBZhZQxmEXwEz1Tr8wBtopWcr4rzUfO5zjf2PqQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "badb30e1-c9f0-44d0-948a-bd0d45eb6b6c",
                            TwoFactorEnabled = false,
                            UserName = "Guy_Reichert@yahoo.com"
                        },
                        new
                        {
                            Id = "bcba45ac-8b10-421d-bbfc-9f84693c5543",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "200332ef-f220-410b-a5a9-0294503acac8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jesus77@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jesus",
                            LastName = "Lakin",
                            LockoutEnabled = false,
                            NormalizedEmail = "JESUS77@GMAIL.COM",
                            NormalizedUserName = "JESUS77@GMAIL.COM",
                            PasswordHash = "ADT2cHOTPWGEzzhJJkdSWY0XSVF6rnPvTAuzPCXmb4IX1CffDBLKHh8Pbtxx2nFJow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a638d8e6-6ec5-4b3d-9454-a06f5ef4f613",
                            TwoFactorEnabled = false,
                            UserName = "Jesus77@gmail.com"
                        },
                        new
                        {
                            Id = "c2e88d4c-2e17-46bc-a803-d3626368b987",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5c32e270-b8ef-4091-b4fe-701a8af1554f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Geneva41@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Geneva",
                            LastName = "Marquardt",
                            LockoutEnabled = false,
                            NormalizedEmail = "GENEVA41@YAHOO.COM",
                            NormalizedUserName = "GENEVA41@YAHOO.COM",
                            PasswordHash = "AO5OpcGRV+QAhaJbTQSdz4B82y0Ese2dA7AnubV1i1Ro6xm9DtY9hq3YlQl6vKJKvA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8926c62f-2510-482e-8a26-d1917fabde51",
                            TwoFactorEnabled = false,
                            UserName = "Geneva41@yahoo.com"
                        },
                        new
                        {
                            Id = "35a0908c-b318-4161-a36b-815b51965b43",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8dd2fbbe-9876-47b0-bf0c-980d0502fc12",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Toni.Jacobs72@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Toni",
                            LastName = "Jacobs",
                            LockoutEnabled = false,
                            NormalizedEmail = "TONI.JACOBS72@GMAIL.COM",
                            NormalizedUserName = "TONI.JACOBS72@GMAIL.COM",
                            PasswordHash = "AC5jaB5I+iNusVY3PefsNitiwWbHXA/ZgcFBYB+290f3Vfy8iycmCLFO5BVKsLPCVg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "08d5a068-e859-4c5e-a0a2-7d219d474252",
                            TwoFactorEnabled = false,
                            UserName = "Toni.Jacobs72@gmail.com"
                        },
                        new
                        {
                            Id = "db17ac3c-c23e-4133-88be-64f5fed9f8c2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91b71d0f-fda1-43e7-b8a8-25f0ef9d3366",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kate_Halvorson@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Kate",
                            LastName = "Halvorson",
                            LockoutEnabled = false,
                            NormalizedEmail = "KATE_HALVORSON@YAHOO.COM",
                            NormalizedUserName = "KATE_HALVORSON@YAHOO.COM",
                            PasswordHash = "AGPpEzD591X/YKWWBPqkfKOEWDOG6unhhFjQNU2XmL/HSLMtEz9P73SuRCXHP2uTxA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dced23c7-6649-491a-ac7e-34801f5edb62",
                            TwoFactorEnabled = false,
                            UserName = "Kate_Halvorson@yahoo.com"
                        },
                        new
                        {
                            Id = "59eeb20f-0799-474a-bc79-98166a917f14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7df99027-8cce-4836-8701-149430189384",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rachael_Leannon@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rachael",
                            LastName = "Leannon",
                            LockoutEnabled = false,
                            NormalizedEmail = "RACHAEL_LEANNON@HOTMAIL.COM",
                            NormalizedUserName = "RACHAEL_LEANNON@HOTMAIL.COM",
                            PasswordHash = "AK2eFsmrdBH3OsWzLypwMyRMxyxZ6EhYrY18YsHbuu3H5/DJErP2Z5B3OCRh0cj9EQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87b64627-3543-4c1c-adb2-7cdb07b4aaa0",
                            TwoFactorEnabled = false,
                            UserName = "Rachael_Leannon@hotmail.com"
                        },
                        new
                        {
                            Id = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d8207bc8-36e9-4553-9ffa-ff9f4643337b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ida_Ruecker@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Ida",
                            LastName = "Ruecker",
                            LockoutEnabled = false,
                            NormalizedEmail = "IDA_RUECKER@YAHOO.COM",
                            NormalizedUserName = "IDA_RUECKER@YAHOO.COM",
                            PasswordHash = "AIZsmzu2SxtkGpc09XU0gNmDBafEc9mwMceboCufFmEhGQzy2jiFdptjbwpBP6dcOA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a5175ba1-02dd-4474-8633-c7d2a5272d72",
                            TwoFactorEnabled = false,
                            UserName = "Ida_Ruecker@yahoo.com"
                        },
                        new
                        {
                            Id = "89141d1c-1ff6-41e1-8a07-27114f05aabc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eec3ab34-23b0-446e-9ce8-6b7ca476cc41",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tina.Zieme@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Tina",
                            LastName = "Zieme",
                            LockoutEnabled = false,
                            NormalizedEmail = "TINA.ZIEME@YAHOO.COM",
                            NormalizedUserName = "TINA.ZIEME@YAHOO.COM",
                            PasswordHash = "APh5Kds1TOB0l9qVGNQdAdJJ5xZ8SDJ6NwqH9jjvPH2a7dOyygsof5JOp1eCMeinMA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "25f33451-ba8d-4ee4-803e-32a6e38c66aa",
                            TwoFactorEnabled = false,
                            UserName = "Tina.Zieme@yahoo.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "4436 Gutmann Viaduct, Jarodton, Portugal",
                            Email = "Joanna54@hotmail.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "5dd7d960-1035-4f49-a64c-65601a54f81c",
                            DepartmentID = 4,
                            Email = "Helen_Orn@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Helen",
                            HourlyRate = 20.7868209810866140m,
                            IdentificationNumber = "4094",
                            IsActive = true,
                            LastName = "Orn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 25, 15, 9, 44, 99, DateTimeKind.Unspecified).AddTicks(5220),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "7f61ead1-2e40-491b-a56c-c9b94e12d7f2",
                            DepartmentID = 4,
                            Email = "Adrian.Maggio@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Adrian",
                            HourlyRate = 26.129202212267180m,
                            IdentificationNumber = "3782",
                            IsActive = true,
                            LastName = "Maggio",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 29, 12, 35, 48, 231, DateTimeKind.Unspecified).AddTicks(8708),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "1671bf5b-88a7-41aa-924b-30b88454d8ce",
                            DepartmentID = 4,
                            Email = "Suzanne_Waters@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Suzanne",
                            HourlyRate = 24.945367921583990m,
                            IdentificationNumber = "8632",
                            IsActive = true,
                            LastName = "Waters",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 3, 25, 6, 19, 3, 60, DateTimeKind.Unspecified).AddTicks(2562),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "f756ced7-3ef9-412a-94dc-60bfa7d21f7f",
                            DepartmentID = 4,
                            Email = "Alicia_Johns32@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alicia",
                            HourlyRate = 21.166174361093980m,
                            IdentificationNumber = "4820",
                            IsActive = true,
                            LastName = "Johns",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 11, 12, 15, 19, 6, 758, DateTimeKind.Unspecified).AddTicks(341),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "045901b2-e6b5-4d10-a3d9-304b61fea438",
                            DepartmentID = 4,
                            Email = "Ruth.King@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ruth",
                            HourlyRate = 20.04682548811977050m,
                            IdentificationNumber = "3771",
                            IsActive = true,
                            LastName = "King",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 1, 8, 11, 9, 47, 549, DateTimeKind.Unspecified).AddTicks(3471),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "2a81cd22-95e4-4f88-994c-07f4b22d14b4",
                            DepartmentID = 4,
                            Email = "Forrest_Baumbach15@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Forrest",
                            HourlyRate = 20.2664008505020290m,
                            IdentificationNumber = "3304",
                            IsActive = true,
                            LastName = "Baumbach",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2019, 2, 19, 23, 6, 32, 333, DateTimeKind.Unspecified).AddTicks(9263),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "d9328fea-c2d5-4961-9d35-a537d2aee8e1",
                            DepartmentID = 4,
                            Email = "Frank.Corwin@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Frank",
                            HourlyRate = 20.1489123935573330m,
                            IdentificationNumber = "1498",
                            IsActive = true,
                            LastName = "Corwin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2021, 1, 9, 0, 34, 46, 595, DateTimeKind.Unspecified).AddTicks(1241),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "49bd90aa-aecf-40a9-96c1-63348daaa649",
                            DepartmentID = 1,
                            Email = "Eunice96@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Eunice",
                            HourlyRate = 27.875614263059390m,
                            IdentificationNumber = "6764",
                            IsActive = true,
                            LastName = "Marquardt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 7, 30, 4, 23, 16, 768, DateTimeKind.Unspecified).AddTicks(3609),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "d72443b1-e09d-407b-a89f-aa9eb12d68bb",
                            DepartmentID = 1,
                            Email = "Myra_Sanford@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Myra",
                            HourlyRate = 20.08356103677468420m,
                            IdentificationNumber = "1765",
                            IsActive = true,
                            LastName = "Sanford",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 7, 25, 6, 40, 15, 693, DateTimeKind.Unspecified).AddTicks(1905),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "b3a1be30-48a3-409c-aaa0-f2e642334fa7",
                            DepartmentID = 1,
                            Email = "Jordan_Ryan27@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jordan",
                            HourlyRate = 27.310395998559140m,
                            IdentificationNumber = "2479",
                            IsActive = true,
                            LastName = "Ryan",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 7, 16, 22, 15, 2, 948, DateTimeKind.Unspecified).AddTicks(804),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "fb83e155-239d-4d8c-bceb-c36f15d4dcbe",
                            DepartmentID = 1,
                            Email = "June44@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "June",
                            HourlyRate = 21.801148528140570m,
                            IdentificationNumber = "8766",
                            IsActive = true,
                            LastName = "Nienow",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 4, 23, 24, 1, 899, DateTimeKind.Unspecified).AddTicks(9591),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "6bec7dc0-6d0e-48f8-ba7f-ff825d9abf83",
                            DepartmentID = 1,
                            Email = "Gina55@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Gina",
                            HourlyRate = 26.108181684328330m,
                            IdentificationNumber = "2325",
                            IsActive = true,
                            LastName = "Kertzmann",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 27, 3, 25, 26, 506, DateTimeKind.Unspecified).AddTicks(4395),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "f823fce0-0cd0-4afb-be80-dcee68b9adc0",
                            DepartmentID = 1,
                            Email = "Thelma32@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Thelma",
                            HourlyRate = 21.264176900155920m,
                            IdentificationNumber = "8151",
                            IsActive = true,
                            LastName = "Marquardt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 18, 1, 56, 54, 571, DateTimeKind.Unspecified).AddTicks(6858),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "ea7342fc-e1ef-47a6-a220-fa9135c30a2b",
                            DepartmentID = 1,
                            Email = "Priscilla.Rempel53@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Priscilla",
                            HourlyRate = 20.1275551366282420m,
                            IdentificationNumber = "2916",
                            IsActive = true,
                            LastName = "Rempel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 2, 14, 5, 8, 6, 234, DateTimeKind.Unspecified).AddTicks(4977),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "0673e3a9-d62c-4a0d-b1d7-73caa081fa50",
                            DepartmentID = 1,
                            Email = "Abel63@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Abel",
                            HourlyRate = 29.192401426468230m,
                            IdentificationNumber = "6371",
                            IsActive = true,
                            LastName = "Reynolds",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 3, 28, 0, 12, 29, 388, DateTimeKind.Unspecified).AddTicks(2741),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "95492ce8-841a-43a2-84b2-f683ce1ee634",
                            DepartmentID = 1,
                            Email = "Ella49@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ella",
                            HourlyRate = 24.74720865243450m,
                            IdentificationNumber = "7624",
                            IsActive = true,
                            LastName = "Beatty",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 8, 17, 23, 47, 13, 946, DateTimeKind.Unspecified).AddTicks(7449),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "05de0c15-001d-4963-aa3f-c631a0b63182",
                            DepartmentID = 1,
                            Email = "Lauren.Heller21@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lauren",
                            HourlyRate = 21.602168503032140m,
                            IdentificationNumber = "3764",
                            IsActive = true,
                            LastName = "Heller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 3, 14, 7, 22, 44, 45, DateTimeKind.Unspecified).AddTicks(3094),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "631bcd2a-a888-465d-92fa-cdd3917538c1",
                            DepartmentID = 1,
                            Email = "Heather.Wuckert@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Heather",
                            HourlyRate = 24.922303503808710m,
                            IdentificationNumber = "8111",
                            IsActive = true,
                            LastName = "Wuckert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 1, 29, 19, 4, 3, 763, DateTimeKind.Unspecified).AddTicks(8022),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "ade1fbf6-b4ba-4a1f-8da6-704f1a23b72b",
                            DepartmentID = 3,
                            Email = "James_Stanton77@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "James",
                            HourlyRate = 23.666020884954380m,
                            IdentificationNumber = "6438",
                            IsActive = true,
                            LastName = "Stanton",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 15, 8, 48, 30, 721, DateTimeKind.Unspecified).AddTicks(8128),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "420027fa-8a44-4d72-bbc1-b8b76f020096",
                            DepartmentID = 3,
                            Email = "Sheri_Gaylord@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sheri",
                            HourlyRate = 25.237705011497120m,
                            IdentificationNumber = "5626",
                            IsActive = true,
                            LastName = "Gaylord",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 17, 1, 54, 5, 682, DateTimeKind.Unspecified).AddTicks(2026),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "7d2ef3c4-df55-4165-8bcf-947a2511565f",
                            DepartmentID = 3,
                            Email = "Nathan20@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Nathan",
                            HourlyRate = 21.146503245060570m,
                            IdentificationNumber = "5491",
                            IsActive = true,
                            LastName = "Stamm",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 15, 17, 15, 38, 476, DateTimeKind.Unspecified).AddTicks(7734),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "da28e3a2-2e42-4656-a04c-30cd132b13a4",
                            DepartmentID = 3,
                            Email = "Wallace50@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wallace",
                            HourlyRate = 27.378935142131030m,
                            IdentificationNumber = "9120",
                            IsActive = true,
                            LastName = "Murphy",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 25, 18, 39, 38, 841, DateTimeKind.Unspecified).AddTicks(987),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "71014e4a-276d-485f-b4f9-171836360e62",
                            DepartmentID = 3,
                            Email = "Terry47@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Terry",
                            HourlyRate = 29.25541631842750m,
                            IdentificationNumber = "1367",
                            IsActive = true,
                            LastName = "Senger",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 30, 19, 28, 20, 874, DateTimeKind.Unspecified).AddTicks(1708),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "78253540-e3da-48a3-9397-8f92b611add5",
                            DepartmentID = 3,
                            Email = "Rosalie7@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rosalie",
                            HourlyRate = 27.34738476916560m,
                            IdentificationNumber = "9941",
                            IsActive = true,
                            LastName = "Ritchie",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 6, 20, 28, 26, 69, DateTimeKind.Unspecified).AddTicks(492),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "bccbf7f9-4692-4c99-b4fa-039ff3ac9acb",
                            DepartmentID = 3,
                            Email = "Carmen31@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Carmen",
                            HourlyRate = 28.168016415167610m,
                            IdentificationNumber = "9688",
                            IsActive = true,
                            LastName = "Nienow",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 8, 13, 21, 35, 10, 578, DateTimeKind.Unspecified).AddTicks(9263),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "72bb2a5a-37a9-459c-a44a-1c5ffcf3f25a",
                            DepartmentID = 3,
                            Email = "Anthony_Corkery@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anthony",
                            HourlyRate = 26.589826679131870m,
                            IdentificationNumber = "2325",
                            IsActive = true,
                            LastName = "Corkery",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 11, 22, 8, 46, 4, 319, DateTimeKind.Unspecified).AddTicks(5099),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "0e0376f3-e53d-4124-8891-1a154f6306d4",
                            DepartmentID = 3,
                            Email = "Janie_Feil16@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Janie",
                            HourlyRate = 21.351232436183480m,
                            IdentificationNumber = "6206",
                            IsActive = true,
                            LastName = "Feil",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 4, 15, 0, 49, 38, 223, DateTimeKind.Unspecified).AddTicks(6805),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "b77dbdfd-3760-426c-94e6-93e0084c5475",
                            DepartmentID = 3,
                            Email = "Christina.Stracke77@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Christina",
                            HourlyRate = 24.149962339620090m,
                            IdentificationNumber = "6003",
                            IsActive = true,
                            LastName = "Stracke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 9, 18, 21, 24, 11, 217, DateTimeKind.Unspecified).AddTicks(2272),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "6aa57f41-b80c-4db1-a0ca-3be90c92d757",
                            DepartmentID = 3,
                            Email = "Dorothy12@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dorothy",
                            HourlyRate = 29.405897864795240m,
                            IdentificationNumber = "1885",
                            IsActive = true,
                            LastName = "Bartoletti",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 8, 12, 3, 42, 11, 568, DateTimeKind.Unspecified).AddTicks(8958),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "526499a4-da0f-4ecc-8349-374cddc8ee87",
                            DepartmentID = 3,
                            Email = "Todd_Larson@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Todd",
                            HourlyRate = 28.602791958769220m,
                            IdentificationNumber = "3299",
                            IsActive = true,
                            LastName = "Larson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 4, 4, 5, 26, 56, 551, DateTimeKind.Unspecified).AddTicks(8336),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "194cd3b8-0428-4200-b389-28a517042651",
                            DepartmentID = 3,
                            Email = "Jessie_Koss@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jessie",
                            HourlyRate = 26.834664534234750m,
                            IdentificationNumber = "4853",
                            IsActive = true,
                            LastName = "Koss",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 1, 16, 7, 45, 46, 647, DateTimeKind.Unspecified).AddTicks(7838),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "35fcdaad-8538-4294-bc58-01b84ab7b57f",
                            DepartmentID = 3,
                            Email = "Duane60@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Duane",
                            HourlyRate = 27.392793105632440m,
                            IdentificationNumber = "6751",
                            IsActive = true,
                            LastName = "Mayer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 1, 17, 9, 56, 40, 86, DateTimeKind.Unspecified).AddTicks(6412),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "ea805a6b-7f70-4725-a90a-882f8a5ba7e5",
                            DepartmentID = 3,
                            Email = "Ruben.Renner50@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ruben",
                            HourlyRate = 20.4254487065716870m,
                            IdentificationNumber = "2464",
                            IsActive = true,
                            LastName = "Renner",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 1, 17, 11, 33, 6, 507, DateTimeKind.Unspecified).AddTicks(5878),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "c856561d-8afd-407d-9716-2b97926137bd",
                            DepartmentID = 3,
                            Email = "Van87@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Van",
                            HourlyRate = 28.043909393271390m,
                            IdentificationNumber = "6392",
                            IsActive = true,
                            LastName = "Olson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 2, 22, 21, 0, 52, 705, DateTimeKind.Unspecified).AddTicks(8407),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "4e0f7e63-8ee5-49f3-b504-70d63f0248f4",
                            DepartmentID = 3,
                            Email = "Terrance84@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Terrance",
                            HourlyRate = 22.864772478521230m,
                            IdentificationNumber = "6195",
                            IsActive = true,
                            LastName = "Treutel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 5, 2, 29, 6, 588, DateTimeKind.Unspecified).AddTicks(4353),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "b2a6c8bc-0c16-4853-bb9b-d2367d5d80ff",
                            DepartmentID = 3,
                            Email = "Margarita_Marquardt@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Margarita",
                            HourlyRate = 22.122419100311780m,
                            IdentificationNumber = "6866",
                            IsActive = true,
                            LastName = "Marquardt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 22, 10, 25, 21, 719, DateTimeKind.Unspecified).AddTicks(7354),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "d1f937e2-9636-4e34-ae03-8f519c74f6b4",
                            DepartmentID = 3,
                            Email = "Irma19@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Irma",
                            HourlyRate = 27.827687537217370m,
                            IdentificationNumber = "4845",
                            IsActive = true,
                            LastName = "Bogisich",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 12, 1, 0, 47, 42, 218, DateTimeKind.Unspecified).AddTicks(6840),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "ef47c999-718f-46f6-bb26-821a17acf8bd",
                            DepartmentID = 3,
                            Email = "Flora35@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Flora",
                            HourlyRate = 27.017441181008440m,
                            IdentificationNumber = "6973",
                            IsActive = true,
                            LastName = "Cartwright",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 6, 18, 13, 27, 35, 629, DateTimeKind.Unspecified).AddTicks(1717),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "aa076299-5538-4c74-b5d9-213c86b95b92",
                            DepartmentID = 3,
                            Email = "Guy_Reichert@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Guy",
                            HourlyRate = 25.978699287389730m,
                            IdentificationNumber = "3010",
                            IsActive = true,
                            LastName = "Reichert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 3, 2, 5, 4, 36, 244, DateTimeKind.Unspecified).AddTicks(8356),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "bcba45ac-8b10-421d-bbfc-9f84693c5543",
                            DepartmentID = 3,
                            Email = "Jesus77@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jesus",
                            HourlyRate = 21.593686897118430m,
                            IdentificationNumber = "5772",
                            IsActive = true,
                            LastName = "Lakin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 11, 5, 12, 20, 23, 422, DateTimeKind.Unspecified).AddTicks(8463),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "c2e88d4c-2e17-46bc-a803-d3626368b987",
                            DepartmentID = 3,
                            Email = "Geneva41@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Geneva",
                            HourlyRate = 26.657941521451780m,
                            IdentificationNumber = "9216",
                            IsActive = true,
                            LastName = "Marquardt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 1, 5, 19, 31, 47, 975, DateTimeKind.Unspecified).AddTicks(9114),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "35a0908c-b318-4161-a36b-815b51965b43",
                            DepartmentID = 3,
                            Email = "Toni.Jacobs72@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Toni",
                            HourlyRate = 29.539894619742360m,
                            IdentificationNumber = "6997",
                            IsActive = true,
                            LastName = "Jacobs",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 8, 22, 7, 47, 32, 788, DateTimeKind.Unspecified).AddTicks(1200),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "db17ac3c-c23e-4133-88be-64f5fed9f8c2",
                            DepartmentID = 1,
                            Email = "Kate_Halvorson@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Kate",
                            HourlyRate = 22.331172922780350m,
                            IdentificationNumber = "6450",
                            IsActive = true,
                            LastName = "Halvorson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 10, 8, 50, 40, 959, DateTimeKind.Unspecified).AddTicks(2655),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "59eeb20f-0799-474a-bc79-98166a917f14",
                            DepartmentID = 2,
                            Email = "Rachael_Leannon@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rachael",
                            HourlyRate = 21.49357538274190m,
                            IdentificationNumber = "6329",
                            IsActive = true,
                            LastName = "Leannon",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 1, 15, 22, 10, 344, DateTimeKind.Unspecified).AddTicks(9990),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            DepartmentID = 5,
                            Email = "Ida_Ruecker@yahoo.com",
                            EmployeeStatus = 0,
                            FirstName = "Ida",
                            HourlyRate = 23.084803355431560m,
                            IdentificationNumber = "7971",
                            IsActive = true,
                            LastName = "Ruecker",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 10, 7, 18, 21, 41, 675, DateTimeKind.Unspecified).AddTicks(7499),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "89141d1c-1ff6-41e1-8a07-27114f05aabc",
                            DepartmentID = 6,
                            Email = "Tina.Zieme@yahoo.com",
                            EmployeeStatus = 1,
                            FirstName = "Tina",
                            HourlyRate = 20.4477218261210820m,
                            IdentificationNumber = "6002",
                            IsActive = true,
                            LastName = "Zieme",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 15, 0, 26, 4, 735, DateTimeKind.Unspecified).AddTicks(586),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SmtpEmail = "mailadres@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Sifre",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "08b2b36f-c20a-4d39-b98e-b41f44d873cc",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "7ef6fefa-3ac8-4b2b-9fac-c4f650f79ac1",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "e8b1cedc-95de-44bd-bab0-19f174ca06d8",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "7df74857-a523-4dec-86b5-c80ce751aee4",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "416aaf83-fcf6-4d8b-aadd-d0653b57a6c0",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "47705f65-3c53-4a62-be81-ca8619b44d32",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "c0f51077-fc42-4f22-bc1f-accd5aa7d2ab",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "cbaf6b00-0f2c-47c1-9a68-6f0efdade2b2",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "0c9b2ffd-6c77-4b87-bb61-f1d5d374ee42",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "fc80d00c-604e-42cc-bc5c-8689671971b7",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "5dd7d960-1035-4f49-a64c-65601a54f81c",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "5dd7d960-1035-4f49-a64c-65601a54f81c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7f61ead1-2e40-491b-a56c-c9b94e12d7f2",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "7f61ead1-2e40-491b-a56c-c9b94e12d7f2",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1671bf5b-88a7-41aa-924b-30b88454d8ce",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "1671bf5b-88a7-41aa-924b-30b88454d8ce",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f756ced7-3ef9-412a-94dc-60bfa7d21f7f",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "f756ced7-3ef9-412a-94dc-60bfa7d21f7f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "045901b2-e6b5-4d10-a3d9-304b61fea438",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "045901b2-e6b5-4d10-a3d9-304b61fea438",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2a81cd22-95e4-4f88-994c-07f4b22d14b4",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "2a81cd22-95e4-4f88-994c-07f4b22d14b4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d9328fea-c2d5-4961-9d35-a537d2aee8e1",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "d9328fea-c2d5-4961-9d35-a537d2aee8e1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "49bd90aa-aecf-40a9-96c1-63348daaa649",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "49bd90aa-aecf-40a9-96c1-63348daaa649",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d72443b1-e09d-407b-a89f-aa9eb12d68bb",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "d72443b1-e09d-407b-a89f-aa9eb12d68bb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b3a1be30-48a3-409c-aaa0-f2e642334fa7",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b3a1be30-48a3-409c-aaa0-f2e642334fa7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fb83e155-239d-4d8c-bceb-c36f15d4dcbe",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "fb83e155-239d-4d8c-bceb-c36f15d4dcbe",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6bec7dc0-6d0e-48f8-ba7f-ff825d9abf83",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "6bec7dc0-6d0e-48f8-ba7f-ff825d9abf83",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f823fce0-0cd0-4afb-be80-dcee68b9adc0",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "f823fce0-0cd0-4afb-be80-dcee68b9adc0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ea7342fc-e1ef-47a6-a220-fa9135c30a2b",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "ea7342fc-e1ef-47a6-a220-fa9135c30a2b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0673e3a9-d62c-4a0d-b1d7-73caa081fa50",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0673e3a9-d62c-4a0d-b1d7-73caa081fa50",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "95492ce8-841a-43a2-84b2-f683ce1ee634",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "95492ce8-841a-43a2-84b2-f683ce1ee634",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "05de0c15-001d-4963-aa3f-c631a0b63182",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "05de0c15-001d-4963-aa3f-c631a0b63182",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "631bcd2a-a888-465d-92fa-cdd3917538c1",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "631bcd2a-a888-465d-92fa-cdd3917538c1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ade1fbf6-b4ba-4a1f-8da6-704f1a23b72b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ade1fbf6-b4ba-4a1f-8da6-704f1a23b72b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "420027fa-8a44-4d72-bbc1-b8b76f020096",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "420027fa-8a44-4d72-bbc1-b8b76f020096",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7d2ef3c4-df55-4165-8bcf-947a2511565f",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7d2ef3c4-df55-4165-8bcf-947a2511565f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "da28e3a2-2e42-4656-a04c-30cd132b13a4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "da28e3a2-2e42-4656-a04c-30cd132b13a4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "71014e4a-276d-485f-b4f9-171836360e62",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "71014e4a-276d-485f-b4f9-171836360e62",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "78253540-e3da-48a3-9397-8f92b611add5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "78253540-e3da-48a3-9397-8f92b611add5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bccbf7f9-4692-4c99-b4fa-039ff3ac9acb",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bccbf7f9-4692-4c99-b4fa-039ff3ac9acb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "72bb2a5a-37a9-459c-a44a-1c5ffcf3f25a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "72bb2a5a-37a9-459c-a44a-1c5ffcf3f25a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0e0376f3-e53d-4124-8891-1a154f6306d4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "0e0376f3-e53d-4124-8891-1a154f6306d4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b77dbdfd-3760-426c-94e6-93e0084c5475",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b77dbdfd-3760-426c-94e6-93e0084c5475",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6aa57f41-b80c-4db1-a0ca-3be90c92d757",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6aa57f41-b80c-4db1-a0ca-3be90c92d757",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "526499a4-da0f-4ecc-8349-374cddc8ee87",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "526499a4-da0f-4ecc-8349-374cddc8ee87",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "194cd3b8-0428-4200-b389-28a517042651",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "194cd3b8-0428-4200-b389-28a517042651",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "35fcdaad-8538-4294-bc58-01b84ab7b57f",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "35fcdaad-8538-4294-bc58-01b84ab7b57f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ea805a6b-7f70-4725-a90a-882f8a5ba7e5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ea805a6b-7f70-4725-a90a-882f8a5ba7e5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c856561d-8afd-407d-9716-2b97926137bd",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c856561d-8afd-407d-9716-2b97926137bd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4e0f7e63-8ee5-49f3-b504-70d63f0248f4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4e0f7e63-8ee5-49f3-b504-70d63f0248f4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b2a6c8bc-0c16-4853-bb9b-d2367d5d80ff",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b2a6c8bc-0c16-4853-bb9b-d2367d5d80ff",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d1f937e2-9636-4e34-ae03-8f519c74f6b4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d1f937e2-9636-4e34-ae03-8f519c74f6b4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ef47c999-718f-46f6-bb26-821a17acf8bd",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ef47c999-718f-46f6-bb26-821a17acf8bd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "aa076299-5538-4c74-b5d9-213c86b95b92",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "aa076299-5538-4c74-b5d9-213c86b95b92",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bcba45ac-8b10-421d-bbfc-9f84693c5543",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bcba45ac-8b10-421d-bbfc-9f84693c5543",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c2e88d4c-2e17-46bc-a803-d3626368b987",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c2e88d4c-2e17-46bc-a803-d3626368b987",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "35a0908c-b318-4161-a36b-815b51965b43",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "35a0908c-b318-4161-a36b-815b51965b43",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "db17ac3c-c23e-4133-88be-64f5fed9f8c2",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "db17ac3c-c23e-4133-88be-64f5fed9f8c2",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "59eeb20f-0799-474a-bc79-98166a917f14",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "59eeb20f-0799-474a-bc79-98166a917f14",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4a5a1e16-0b3b-4a13-83bd-b5380230c533",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "89141d1c-1ff6-41e1-8a07-27114f05aabc",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "89141d1c-1ff6-41e1-8a07-27114f05aabc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "89141d1c-1ff6-41e1-8a07-27114f05aabc",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
