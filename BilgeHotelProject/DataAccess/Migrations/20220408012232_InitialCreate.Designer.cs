// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220408012232_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "013b6b1a-0200-45ba-bb95-32882a8816d9",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "bbf22fce-8b33-46a7-b3e8-d6632d420444",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "AA0JIQtrpTBhy4ghlVCxlkTdk48WATo3M6zURCLrDYL/PniXmMHO6wYOauDubTL6QA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5030f99a-a7ad-4f86-adf6-a3267ab78ba4",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "d29d616a-9530-4da8-a9e4-00171d261f7f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1409fdb3-329f-4fda-b77e-87f2192a0d20",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Randy8@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Randy",
                            LastName = "Haley",
                            LockoutEnabled = false,
                            NormalizedEmail = "RANDY8@GMAIL.COM",
                            NormalizedUserName = "RANDY8@GMAIL.COM",
                            PasswordHash = "AI8xv+u0FeEXhljiRuLD1cWxYJFG8PhXAuXxCiNQfP1tYfOGH7QsLmsCVwawy/acxA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "942be518-7a6b-4c86-839e-dd97cc457545",
                            TwoFactorEnabled = false,
                            UserName = "Randy8@gmail.com"
                        },
                        new
                        {
                            Id = "d50e5880-ac60-4174-9450-9ddb2cc4307a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "abc8e94d-dc91-4394-afef-1102ed3f876f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Delbert_Mayert82@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Delbert",
                            LastName = "Mayert",
                            LockoutEnabled = false,
                            NormalizedEmail = "DELBERT_MAYERT82@HOTMAIL.COM",
                            NormalizedUserName = "DELBERT_MAYERT82@HOTMAIL.COM",
                            PasswordHash = "AHdGzVW6wUH4Vu/e8ydVja0zrT68JdrXQfaTClMCvYX9yWCa4WRsn4kEAiN6FFinLQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "350e8d93-0017-44bf-8177-317803af006c",
                            TwoFactorEnabled = false,
                            UserName = "Delbert_Mayert82@hotmail.com"
                        },
                        new
                        {
                            Id = "2f012b31-9ca0-4f92-9cf3-b5ff68ff7f23",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4ec4c66a-00cd-4625-9744-68bfc9248096",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Martin80@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Martin",
                            LastName = "Hills",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARTIN80@HOTMAIL.COM",
                            NormalizedUserName = "MARTIN80@HOTMAIL.COM",
                            PasswordHash = "AM32vsB9yZRiJGyvfdPetw5KCsZtR6esUi3I+nF6WLwh/108P+Ahoqp383GTfaBAwg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aef0e9ea-0320-4133-948c-e4c23610a588",
                            TwoFactorEnabled = false,
                            UserName = "Martin80@hotmail.com"
                        },
                        new
                        {
                            Id = "3f174aae-92a5-424a-93b4-549bc2d0e985",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "644af215-6fd4-4114-a53a-b288735ade75",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lynette_Kuhlman84@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lynette",
                            LastName = "Kuhlman",
                            LockoutEnabled = false,
                            NormalizedEmail = "LYNETTE_KUHLMAN84@HOTMAIL.COM",
                            NormalizedUserName = "LYNETTE_KUHLMAN84@HOTMAIL.COM",
                            PasswordHash = "AE6N3vLNzuTtJVxc71t20M8DDq49vNao8vFp1IS6GcPGxCi6PchgFQA/aXqu9zHXWw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "029aafe4-d65c-4913-9591-9055d24c065d",
                            TwoFactorEnabled = false,
                            UserName = "Lynette_Kuhlman84@hotmail.com"
                        },
                        new
                        {
                            Id = "aa44e854-6d19-4251-8bcb-a38fb28de46e",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "25751fe3-c2ec-42db-aa86-d8e9906e5930",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Billie_Yost@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Billie",
                            LastName = "Yost",
                            LockoutEnabled = false,
                            NormalizedEmail = "BILLIE_YOST@GMAIL.COM",
                            NormalizedUserName = "BILLIE_YOST@GMAIL.COM",
                            PasswordHash = "AJhrlC9a5xNvaHkMtdAH6UpWPORgkloqeA1M912VRQKWDhIfCSdr5uWQAKnx/1cy5Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "89570622-ae6c-4e72-b42d-6a25670f6e1c",
                            TwoFactorEnabled = false,
                            UserName = "Billie_Yost@gmail.com"
                        },
                        new
                        {
                            Id = "3e76fd12-71dd-4d2a-b181-e319d0cda749",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6113b81f-fe78-44a4-892e-a41b60853c0e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Terrance_Muller6@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Terrance",
                            LastName = "Muller",
                            LockoutEnabled = false,
                            NormalizedEmail = "TERRANCE_MULLER6@GMAIL.COM",
                            NormalizedUserName = "TERRANCE_MULLER6@GMAIL.COM",
                            PasswordHash = "AI/w1UvH6sw9qDDP4Xvnd6WHFTJNAKBx6Q33S5TPR250bYqEjBRiCa86GtKjoXLBjg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cfcdfa01-3c05-4d15-9690-4ae01f0ee65f",
                            TwoFactorEnabled = false,
                            UserName = "Terrance_Muller6@gmail.com"
                        },
                        new
                        {
                            Id = "508707ec-fc60-4ddc-ac41-1682cb13ac98",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e7283876-ee2c-49ad-bf57-fce3da638f06",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brandy97@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Brandy",
                            LastName = "Harvey",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRANDY97@YAHOO.COM",
                            NormalizedUserName = "BRANDY97@YAHOO.COM",
                            PasswordHash = "AFjOXt3Vyhf0ESfJCkTiY89KnjKZzmtc8vQX/DlmIS+c1QbsmwWHiKfBCuVvxUeocA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "25ca8d2c-6901-41e2-99e0-ef411a43e8db",
                            TwoFactorEnabled = false,
                            UserName = "Brandy97@yahoo.com"
                        },
                        new
                        {
                            Id = "0b25144e-ce15-446f-8fcb-005958b94ada",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "582b1d1b-0e9d-4fe6-9501-ac1e1aa9ee10",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lorenzo_Schulist76@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lorenzo",
                            LastName = "Schulist",
                            LockoutEnabled = false,
                            NormalizedEmail = "LORENZO_SCHULIST76@GMAIL.COM",
                            NormalizedUserName = "LORENZO_SCHULIST76@GMAIL.COM",
                            PasswordHash = "AFNRAiu979pEwDBIFozwglwhl7DdaHzDyaB5LrJ5bhVUgNS6+alMyTDTXNvQ6e0Z+A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fffc2c46-b687-4e15-8788-48a05777fd1a",
                            TwoFactorEnabled = false,
                            UserName = "Lorenzo_Schulist76@gmail.com"
                        },
                        new
                        {
                            Id = "bead453e-fd54-43d5-9669-714315989044",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "aa64fccc-a4d1-444e-9346-9796f8685430",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Edmond_DuBuque72@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Edmond",
                            LastName = "DuBuque",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDMOND_DUBUQUE72@YAHOO.COM",
                            NormalizedUserName = "EDMOND_DUBUQUE72@YAHOO.COM",
                            PasswordHash = "AN0/KOrfdXl8bqhk7VZm3bhVUfAVCc4OlUeAmnJW/tTRqID4UPVW6pSBU5bttjH04w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d4c118a1-1a62-40f0-99eb-4b9654516bc2",
                            TwoFactorEnabled = false,
                            UserName = "Edmond_DuBuque72@yahoo.com"
                        },
                        new
                        {
                            Id = "f719911c-b2b1-4cd3-958c-3b2cc3b867aa",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "a86655f1-0ed2-41f6-a4cb-44bbd8993553",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ross.Blick@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ross",
                            LastName = "Blick",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSS.BLICK@GMAIL.COM",
                            NormalizedUserName = "ROSS.BLICK@GMAIL.COM",
                            PasswordHash = "ANYtbZ5K9WnOMOX/Hb81HIx25CsnGSts1Dqelk+NCwq1RKJVfZMj7P6qK/3v6aZvKA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fc14e00d-f6ea-45ae-9f81-4441b41b148a",
                            TwoFactorEnabled = false,
                            UserName = "Ross.Blick@gmail.com"
                        },
                        new
                        {
                            Id = "33f679cd-bde7-4f24-9c25-04d0cd5fffcd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9546c73a-07d5-4219-bef6-71e704433ec4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nichole_Bahringer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nichole",
                            LastName = "Bahringer",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICHOLE_BAHRINGER@HOTMAIL.COM",
                            NormalizedUserName = "NICHOLE_BAHRINGER@HOTMAIL.COM",
                            PasswordHash = "ADedC6qVliUeqUoDPGjRilpkAET9UgrJbMEz9HJ1+X/Bq//rQCRXYSbrL1eh2ftPLw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3af1012e-ee05-42d8-aaa4-842caf7a0c44",
                            TwoFactorEnabled = false,
                            UserName = "Nichole_Bahringer@hotmail.com"
                        },
                        new
                        {
                            Id = "d025addc-28cd-40c9-b93a-2af36ff824c3",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "42db11bc-2546-45d1-820e-539224c6075f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anthony_Weber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anthony",
                            LastName = "Weber",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANTHONY_WEBER@GMAIL.COM",
                            NormalizedUserName = "ANTHONY_WEBER@GMAIL.COM",
                            PasswordHash = "AH8U+B0TPo3EHm0er47TkCrDu60xYUDzpynEtgZbRQDPhAgWw8TICJoai8Vi542xRg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9ce6d976-4cd6-4e25-a0ba-39916a47c0e7",
                            TwoFactorEnabled = false,
                            UserName = "Anthony_Weber@gmail.com"
                        },
                        new
                        {
                            Id = "4e4f33aa-8737-484a-8f72-1fccc92a339a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e5aa9060-c323-4f65-b130-84e7fc67f1b0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Chad75@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Chad",
                            LastName = "Lockman",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHAD75@GMAIL.COM",
                            NormalizedUserName = "CHAD75@GMAIL.COM",
                            PasswordHash = "AGCY1Vge/Pfk+o3VCbTYO/nItKToiFAYS8rVKP2BcYHZ88HzwsjZ60+z+FCi10EzOQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ddd84ee2-259d-4afc-af91-6bc3d5fbbc59",
                            TwoFactorEnabled = false,
                            UserName = "Chad75@gmail.com"
                        },
                        new
                        {
                            Id = "b060d268-df2c-4dc9-8b33-330192da22cd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8a785005-1938-41bc-823c-9740509783fb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Johnny_Bins@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Johnny",
                            LastName = "Bins",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHNNY_BINS@HOTMAIL.COM",
                            NormalizedUserName = "JOHNNY_BINS@HOTMAIL.COM",
                            PasswordHash = "AMbTCQG+LNi4ZNa4Eb5Bh6QAi84oE6UyyqfdTinsKWbjtjtJ2aYYPb5VCwk0Gos4oA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ba1a045-0964-45e6-acdc-3d0482cbe902",
                            TwoFactorEnabled = false,
                            UserName = "Johnny_Bins@hotmail.com"
                        },
                        new
                        {
                            Id = "0b3e32fd-16c4-4dda-b395-d3c921c546a6",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "842e37d9-8ad5-4727-8132-236cb91aa9e1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Erick42@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Erick",
                            LastName = "Reynolds",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERICK42@YAHOO.COM",
                            NormalizedUserName = "ERICK42@YAHOO.COM",
                            PasswordHash = "AGvx/pH2ryK37ip3AxdF7hnKEgeiFvKkdtE+1ASOEP4wRZIEqVPDXqGB/a46R/KcaQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4c57b0a2-7daa-43f5-bdfa-331f022d29b7",
                            TwoFactorEnabled = false,
                            UserName = "Erick42@yahoo.com"
                        },
                        new
                        {
                            Id = "fd0edfd4-a033-4c0a-8a7f-b99d8f840136",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "fe1aeb61-c16f-4928-b4c1-163780799ce3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Hugo4@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hugo",
                            LastName = "Johns",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUGO4@GMAIL.COM",
                            NormalizedUserName = "HUGO4@GMAIL.COM",
                            PasswordHash = "ACPaesd83ZXn5VbpgDZwtyw8kQAAr4YgZ6WhYXVVB/ztt9RWZnMG2PBRNgpISqw1HQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "54e594a1-a406-4cfe-9368-20b96331aa42",
                            TwoFactorEnabled = false,
                            UserName = "Hugo4@gmail.com"
                        },
                        new
                        {
                            Id = "0543a674-c83d-4802-83fd-6fa134fdb78d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "bbe7140a-7add-4e83-a041-663d42a8ed31",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Pete_Daugherty38@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Pete",
                            LastName = "Daugherty",
                            LockoutEnabled = false,
                            NormalizedEmail = "PETE_DAUGHERTY38@HOTMAIL.COM",
                            NormalizedUserName = "PETE_DAUGHERTY38@HOTMAIL.COM",
                            PasswordHash = "ADaDEcnL/trWKB6y404DRllQJh2hwOv0BIsCxBVb65Yi9bS0HrSmYMSwWgYjYOse8A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6496a0dd-58f1-47fe-a9db-09d9e545e81d",
                            TwoFactorEnabled = false,
                            UserName = "Pete_Daugherty38@hotmail.com"
                        },
                        new
                        {
                            Id = "2916ea2c-c308-49e6-8b36-39ea2dbe948b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "630fcf31-8df9-4ed6-bdf2-6dc300a46b8c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Julio.Auer60@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Julio",
                            LastName = "Auer",
                            LockoutEnabled = false,
                            NormalizedEmail = "JULIO.AUER60@YAHOO.COM",
                            NormalizedUserName = "JULIO.AUER60@YAHOO.COM",
                            PasswordHash = "AFLzygzJJj8dObiAoqN2ZnvpugY1Vwb7jRSE/616J3Jtv4Ohqgd5HsDgljDlqsnCYw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2cf75d1c-1f19-4450-9f6c-75d4018b0285",
                            TwoFactorEnabled = false,
                            UserName = "Julio.Auer60@yahoo.com"
                        },
                        new
                        {
                            Id = "62a1ff3a-bbab-47b1-9112-11a21a63018c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8770d567-ce48-4390-863a-484693a56b93",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rhonda15@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Rhonda",
                            LastName = "Kovacek",
                            LockoutEnabled = false,
                            NormalizedEmail = "RHONDA15@YAHOO.COM",
                            NormalizedUserName = "RHONDA15@YAHOO.COM",
                            PasswordHash = "ABwTB3Y65lC8Ga2qPgVYGBCRPBWWTG09LMWYD3p0f1Dh4Dar9JK4CAUma/zFUCwCAg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "21a4da73-ca77-4a39-8f12-d223de73afd9",
                            TwoFactorEnabled = false,
                            UserName = "Rhonda15@yahoo.com"
                        },
                        new
                        {
                            Id = "7dd78617-587f-4eab-afcc-36ad397fe6e0",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7d56c687-f0e0-4799-b0be-913dadb1d845",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Teri44@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Teri",
                            LastName = "Raynor",
                            LockoutEnabled = false,
                            NormalizedEmail = "TERI44@YAHOO.COM",
                            NormalizedUserName = "TERI44@YAHOO.COM",
                            PasswordHash = "AJT2kFSHpkxQeriBw96ShV8xC49Vmnn4jm37PcWICYUvU+IsK1BzB7opsrwuPyMSgg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ddb58de7-cbd2-473a-adb9-4056332afc7b",
                            TwoFactorEnabled = false,
                            UserName = "Teri44@yahoo.com"
                        },
                        new
                        {
                            Id = "5db5d90f-82e6-4837-94f6-340787958341",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9bafad57-21ca-48d3-9da8-48f16d17f832",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Raquel15@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Raquel",
                            LastName = "Wolf",
                            LockoutEnabled = false,
                            NormalizedEmail = "RAQUEL15@HOTMAIL.COM",
                            NormalizedUserName = "RAQUEL15@HOTMAIL.COM",
                            PasswordHash = "ACRvcGDmyDSRRnNEk+9YUJ09RJXmpNeQ+7nelSzjYRfk35ic3/zmEy7q541HDF3aCQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "deaf59f9-93af-4386-8576-7dc072e1dc9c",
                            TwoFactorEnabled = false,
                            UserName = "Raquel15@hotmail.com"
                        },
                        new
                        {
                            Id = "9e583910-d454-4d29-b631-f935369cc542",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "38c600d6-d02c-4e75-86d4-58941c58d3e7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Megan_Dicki@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Megan",
                            LastName = "Dicki",
                            LockoutEnabled = false,
                            NormalizedEmail = "MEGAN_DICKI@GMAIL.COM",
                            NormalizedUserName = "MEGAN_DICKI@GMAIL.COM",
                            PasswordHash = "AEFfYK9r3ul1tTG4SyKqrFyemrJSsFObbFqEreDjrc2Qx9LGqXMdgLXYneUHnsnpoQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7bd762a3-a40f-4392-88d3-f5a79405d321",
                            TwoFactorEnabled = false,
                            UserName = "Megan_Dicki@gmail.com"
                        },
                        new
                        {
                            Id = "9df7d5b4-1090-450d-a91d-ace449a2155a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "df2ef988-7c26-4f4f-aefb-10518873a47d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Melanie_Howell@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melanie",
                            LastName = "Howell",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELANIE_HOWELL@GMAIL.COM",
                            NormalizedUserName = "MELANIE_HOWELL@GMAIL.COM",
                            PasswordHash = "AI6dElvYIjQqKNBBCyGHU2JcYPzW0YzTL4eDBwNwoj0jUUjCuVQ5yItu/DmUOnuJnA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a86a9132-9511-45a6-aa0f-5cb5a4de650f",
                            TwoFactorEnabled = false,
                            UserName = "Melanie_Howell@gmail.com"
                        },
                        new
                        {
                            Id = "09bc5eaf-ab87-4393-b4f2-35eea4578d75",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "dd3f216a-2e01-4745-b667-aec0e8a1d828",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Geraldine44@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Geraldine",
                            LastName = "Goyette",
                            LockoutEnabled = false,
                            NormalizedEmail = "GERALDINE44@HOTMAIL.COM",
                            NormalizedUserName = "GERALDINE44@HOTMAIL.COM",
                            PasswordHash = "AK7Fd3DnGJmnoZf+50JJEW+B9PaUCaeO7OidCZ+ffiznzGXkABSKMBwh1a3R3Qh2+A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e6452aee-6a7e-4e28-af87-47d25815324e",
                            TwoFactorEnabled = false,
                            UserName = "Geraldine44@hotmail.com"
                        },
                        new
                        {
                            Id = "aa012fff-9ae0-45df-98fc-fbb455a72816",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "640d25e4-e83f-4f17-a9c6-65f61fd9a1c2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "John.Cummings79@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Cummings",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN.CUMMINGS79@HOTMAIL.COM",
                            NormalizedUserName = "JOHN.CUMMINGS79@HOTMAIL.COM",
                            PasswordHash = "AMyRf92JDhvf4L8O1557dsbdVxdw55FCl+FDSy5CdHUqlkbMAe9i962n7Yk82D/1Vw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3263a852-e217-4761-b87c-0c481fc9308b",
                            TwoFactorEnabled = false,
                            UserName = "John.Cummings79@hotmail.com"
                        },
                        new
                        {
                            Id = "5bb61c8a-0e0f-4db4-bd07-28051c086379",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "584213e7-8cd5-46dc-996d-6259339f058e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Norman.Kutch76@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Norman",
                            LastName = "Kutch",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORMAN.KUTCH76@GMAIL.COM",
                            NormalizedUserName = "NORMAN.KUTCH76@GMAIL.COM",
                            PasswordHash = "AAtHpK1ZJXbIpbyvb26PKxDMxet7EdOze7mRBq6zejIxhM2Yvt5i2MWANMr0DNrD+w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b812efee-aa6f-468c-8832-48d81c665b86",
                            TwoFactorEnabled = false,
                            UserName = "Norman.Kutch76@gmail.com"
                        },
                        new
                        {
                            Id = "79e39fe2-451d-44b8-bc0e-23d2b1c9c696",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "718a76cd-a2a1-499e-8dfb-027ded8c6522",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dolores79@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dolores",
                            LastName = "Jenkins",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOLORES79@HOTMAIL.COM",
                            NormalizedUserName = "DOLORES79@HOTMAIL.COM",
                            PasswordHash = "ABzR40w40xZwvgYCbypMe0CORmqa98N/A3MZMx6x9Y7mNIu9Xp+YKl6sus2bhO2WrA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f899f32d-03f4-4457-b932-0de7b9919c0d",
                            TwoFactorEnabled = false,
                            UserName = "Dolores79@hotmail.com"
                        },
                        new
                        {
                            Id = "7415b941-7f0c-4c7c-99ec-35e6abeaa5cc",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "84f3dd8e-8cc4-4942-82a8-2c593dd524e0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anita26@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anita",
                            LastName = "Mitchell",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANITA26@HOTMAIL.COM",
                            NormalizedUserName = "ANITA26@HOTMAIL.COM",
                            PasswordHash = "AIC/wkgp2vrooy3r42tK5fKxK6EGMSY5ce4/+BJsFNEPqfVQrXL/WqAygkL3xpM6ug==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a06999fb-f756-4d17-86f6-fa20de7b619f",
                            TwoFactorEnabled = false,
                            UserName = "Anita26@hotmail.com"
                        },
                        new
                        {
                            Id = "1906ef83-ff42-4d95-8d36-8763583cdb9b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "caa9474a-6786-4f86-9c60-c63f2cc9ad77",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rodney27@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Rodney",
                            LastName = "Altenwerth",
                            LockoutEnabled = false,
                            NormalizedEmail = "RODNEY27@YAHOO.COM",
                            NormalizedUserName = "RODNEY27@YAHOO.COM",
                            PasswordHash = "AMjwgUehd4wUva4W3Dkj4Jx8vcg8EMroUdMrBkid1KYRfLpQ4cKu3BPbMA2VwEjGRQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bdf7ce66-d36e-4a05-a1ff-d96aa888e378",
                            TwoFactorEnabled = false,
                            UserName = "Rodney27@yahoo.com"
                        },
                        new
                        {
                            Id = "738ea8b9-8630-4cbc-a5f0-e190ac4c3b9d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f391e3a8-25f8-4ca1-aee0-3bcdd33c3c3b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sam.Weissnat@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Sam",
                            LastName = "Weissnat",
                            LockoutEnabled = false,
                            NormalizedEmail = "SAM.WEISSNAT@YAHOO.COM",
                            NormalizedUserName = "SAM.WEISSNAT@YAHOO.COM",
                            PasswordHash = "AL/KajZGQGkpipfS7YQP92ypFFdAjl9J8rQ1UcttKmzCKsbNtkog624EqO+1NbCDgg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11914110-2d22-4bf2-9e44-87cad2f117b1",
                            TwoFactorEnabled = false,
                            UserName = "Sam.Weissnat@yahoo.com"
                        },
                        new
                        {
                            Id = "05484306-ad7d-47c1-bac2-3d671965c06d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d0d0b802-a51a-43e4-b28a-6f1e61ea9aa2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Blanche72@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Blanche",
                            LastName = "Hayes",
                            LockoutEnabled = false,
                            NormalizedEmail = "BLANCHE72@HOTMAIL.COM",
                            NormalizedUserName = "BLANCHE72@HOTMAIL.COM",
                            PasswordHash = "ALZOm9T2fB66G41ybo4X53IGqICLYc3J5sTJFUjWefPFJxiQCHaB7PeuHTvYz/7iWA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b6df23f-9b3d-4408-bf8e-27b06ecfd59d",
                            TwoFactorEnabled = false,
                            UserName = "Blanche72@hotmail.com"
                        },
                        new
                        {
                            Id = "3d381798-2cc6-44d8-bc12-7d623daf14f7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b3739c40-6326-4dba-91a7-18cf3fa13b8f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Laurie_Carroll16@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Laurie",
                            LastName = "Carroll",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAURIE_CARROLL16@GMAIL.COM",
                            NormalizedUserName = "LAURIE_CARROLL16@GMAIL.COM",
                            PasswordHash = "AAM52OPCLVtjEutKm1dv/0j7cCEjP/PWcKxWdIaR5EdoZGAn20rYqus/nO7Tq3vmsA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "97234e93-3648-4279-8bad-62b382b1bea5",
                            TwoFactorEnabled = false,
                            UserName = "Laurie_Carroll16@gmail.com"
                        },
                        new
                        {
                            Id = "678ba498-8415-4a97-a503-64e46f3ef56c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "52047865-207c-4fbe-9e34-76f969c63e1e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Guy14@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Guy",
                            LastName = "Klocko",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUY14@HOTMAIL.COM",
                            NormalizedUserName = "GUY14@HOTMAIL.COM",
                            PasswordHash = "ANWh8miJ7qYf5GCsY8TNKoga8xHCvL9tnjdNT1/3TiaWieob7teCayq3YZgbfq5MBA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7fccf47f-5f11-4a2c-9de5-561f2ef9c440",
                            TwoFactorEnabled = false,
                            UserName = "Guy14@hotmail.com"
                        },
                        new
                        {
                            Id = "b7186e2c-844a-4c8c-b322-57d22066c7d4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d6ce5820-a225-4bac-ab0a-6e02c73ecb1f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Annette.Luettgen@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Annette",
                            LastName = "Luettgen",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNETTE.LUETTGEN@GMAIL.COM",
                            NormalizedUserName = "ANNETTE.LUETTGEN@GMAIL.COM",
                            PasswordHash = "ADo5x7NOxz+Pkcom1hctl9OwbHf6pBDv+o+U4mf7YZsKTepD1YhPzxvTYGnMwGv+5w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b638bf9f-436e-4eb0-b387-6977974491d4",
                            TwoFactorEnabled = false,
                            UserName = "Annette.Luettgen@gmail.com"
                        },
                        new
                        {
                            Id = "301ef378-2291-4297-b1d5-01bd6ac4881d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "ae044862-4399-4375-b844-7baa890a1b86",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Joy.Jones2@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Joy",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOY.JONES2@YAHOO.COM",
                            NormalizedUserName = "JOY.JONES2@YAHOO.COM",
                            PasswordHash = "AD387dpwUF5JkGz019oI7gO3MfqVlvcylN161dpHjE0VVoHAEGeGHi5I++pYkasZpg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac28046d-8fd8-49ba-a3a5-bc826d5d5c2c",
                            TwoFactorEnabled = false,
                            UserName = "Joy.Jones2@yahoo.com"
                        },
                        new
                        {
                            Id = "6f19cb42-19e6-4b1f-a08e-52ed25062e91",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "fecb6a94-46c9-4fe3-88ff-f390470c1cd3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Esther.Klein76@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Esther",
                            LastName = "Klein",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTHER.KLEIN76@YAHOO.COM",
                            NormalizedUserName = "ESTHER.KLEIN76@YAHOO.COM",
                            PasswordHash = "ABIje4OGgO33rgIyxP595cmXWPnZJSpdlDfAolNCcJTyX0HtT0ar4Uo4tq9NpXZDlQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b2e765e-4f8b-47ad-a4a4-86ab4d79aa52",
                            TwoFactorEnabled = false,
                            UserName = "Esther.Klein76@yahoo.com"
                        },
                        new
                        {
                            Id = "405a073f-1e16-4b99-93bf-4d8cc8e439e7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "412da0da-ad22-4623-90f7-58e7329ce96c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Theresa_Schoen5@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Theresa",
                            LastName = "Schoen",
                            LockoutEnabled = false,
                            NormalizedEmail = "THERESA_SCHOEN5@GMAIL.COM",
                            NormalizedUserName = "THERESA_SCHOEN5@GMAIL.COM",
                            PasswordHash = "AOAhLqJXGdRb6RomplnDKH0sNz7z/Eq35Ei5yHhAsYucDmGt/5JshsbD7rlDLJdJbw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f302b8b7-1385-45ad-bf1b-1301a45ed7ad",
                            TwoFactorEnabled = false,
                            UserName = "Theresa_Schoen5@gmail.com"
                        },
                        new
                        {
                            Id = "e74d272e-acdb-45a8-9557-ccd768adf99c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e8cd0b81-21f0-47f0-8365-fc8dd1bad2f7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Daisy76@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Daisy",
                            LastName = "Douglas",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAISY76@YAHOO.COM",
                            NormalizedUserName = "DAISY76@YAHOO.COM",
                            PasswordHash = "AO9y8z21iFDKMb8d3E7egXKPF0q0s4E9qNjrjGk3KbRwGtVKVufHQdDkmyLuii+7rA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d8b943f3-2f44-4e58-9505-6fc1544c4686",
                            TwoFactorEnabled = false,
                            UserName = "Daisy76@yahoo.com"
                        },
                        new
                        {
                            Id = "4e5672e4-932c-4d9a-bab7-b298c89ad3b5",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5addb26e-833c-4033-97ae-68e488680d2b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Emilio_Sporer17@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Emilio",
                            LastName = "Sporer",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMILIO_SPORER17@YAHOO.COM",
                            NormalizedUserName = "EMILIO_SPORER17@YAHOO.COM",
                            PasswordHash = "AP4P2moK6V5I5XcZcGv4/4MM+c9kNru2YiWO+vxhJ8cujGYuyeNxKeWrmHlMSbl7Zw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db1aac71-b9f0-4c76-97c5-9a21d973b37b",
                            TwoFactorEnabled = false,
                            UserName = "Emilio_Sporer17@yahoo.com"
                        },
                        new
                        {
                            Id = "df6aebfd-acda-4163-8ad4-4dda2927eb71",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4ee0840d-c300-429e-9d63-38cb468fb3d1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ian_Braun@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ian",
                            LastName = "Braun",
                            LockoutEnabled = false,
                            NormalizedEmail = "IAN_BRAUN@HOTMAIL.COM",
                            NormalizedUserName = "IAN_BRAUN@HOTMAIL.COM",
                            PasswordHash = "AKSemEi842GMl+Ww9uFWNZxttBXgzoQ3qaEWaTk8b3D9JcEjqD/F5wGmc7fV0H9mBg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bb456502-2b15-4415-8306-1e29646142bb",
                            TwoFactorEnabled = false,
                            UserName = "Ian_Braun@hotmail.com"
                        },
                        new
                        {
                            Id = "47d2c86f-dd6b-4f6c-ae51-b5f05d01f0f1",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "82fac566-7070-4fb1-a776-ad50f45f44b4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ivan_Larson91@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ivan",
                            LastName = "Larson",
                            LockoutEnabled = false,
                            NormalizedEmail = "IVAN_LARSON91@GMAIL.COM",
                            NormalizedUserName = "IVAN_LARSON91@GMAIL.COM",
                            PasswordHash = "AOQSLhr9TgeIHfCBIPcGCJSY/vsYkZNaEHJpx78rK1FHb1LMCZiSg5FRmjXIqDveHw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "45013719-6d8b-4f11-9660-b56413ccaaee",
                            TwoFactorEnabled = false,
                            UserName = "Ivan_Larson91@gmail.com"
                        },
                        new
                        {
                            Id = "a288750d-ef4f-478d-9da7-53ddcfeadde4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e88a3469-dcae-4ee0-97fe-cf8252474c8d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bernadette_Robel@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Bernadette",
                            LastName = "Robel",
                            LockoutEnabled = false,
                            NormalizedEmail = "BERNADETTE_ROBEL@GMAIL.COM",
                            NormalizedUserName = "BERNADETTE_ROBEL@GMAIL.COM",
                            PasswordHash = "ACD/NNYGDVGVGqTVqKgValVYvP9n4Lo3aQe/WS66Ggkioled0IqIGbAsUB7zLCV3xw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9e1d58e-58c1-47dc-8d88-7d1033c6645f",
                            TwoFactorEnabled = false,
                            UserName = "Bernadette_Robel@gmail.com"
                        },
                        new
                        {
                            Id = "2b0215d2-0572-4de0-a213-f79bd6969153",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "42a1ee73-8472-42e2-987d-3a0e5f95a69d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yvette_OReilly92@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Yvette",
                            LastName = "O'Reilly",
                            LockoutEnabled = false,
                            NormalizedEmail = "YVETTE_OREILLY92@YAHOO.COM",
                            NormalizedUserName = "YVETTE_OREILLY92@YAHOO.COM",
                            PasswordHash = "AGjiP/jYNL+ScgHVvmqoc13pOdl4TJi9h/GOYQ0rAL7u7+tFNcgdSS6+mT8qLj5qsg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f93273e4-e7eb-4389-8c76-70e0e17ca3f0",
                            TwoFactorEnabled = false,
                            UserName = "Yvette_OReilly92@yahoo.com"
                        },
                        new
                        {
                            Id = "4a93f476-0581-40a0-bdf7-57001a44f757",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c1c7df12-cfa3-4979-8bb9-2ebea7f41c64",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brittany_Pfannerstill@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Brittany",
                            LastName = "Pfannerstill",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRITTANY_PFANNERSTILL@GMAIL.COM",
                            NormalizedUserName = "BRITTANY_PFANNERSTILL@GMAIL.COM",
                            PasswordHash = "AIiBv8sRy1SmwtTWf/nD0lQ89VBghokG1uEbAqXglJJzPsa0VdOpb3e37hp8/6zyUQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "76c04650-d82a-4eda-bf69-a4a3380d8dc3",
                            TwoFactorEnabled = false,
                            UserName = "Brittany_Pfannerstill@gmail.com"
                        },
                        new
                        {
                            Id = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "0f1f4bbe-34a6-4161-a731-619cf2ff500c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Julie.Tromp@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Julie",
                            LastName = "Tromp",
                            LockoutEnabled = false,
                            NormalizedEmail = "JULIE.TROMP@YAHOO.COM",
                            NormalizedUserName = "JULIE.TROMP@YAHOO.COM",
                            PasswordHash = "AAcUamPkPV6UouLmZ6ykeSvOy8TKRpihi0wUV5g6x79N+lPPyPlvqdFBbHWhpNNNhQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c7bde6b-922f-4c03-8637-c9358c88120f",
                            TwoFactorEnabled = false,
                            UserName = "Julie.Tromp@yahoo.com"
                        },
                        new
                        {
                            Id = "74c53285-0521-4c06-b4ab-0780615a4853",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "35f03d92-a6fb-46f4-a6eb-41d6981c1fcb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mark_Wiza@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Mark",
                            LastName = "Wiza",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARK_WIZA@YAHOO.COM",
                            NormalizedUserName = "MARK_WIZA@YAHOO.COM",
                            PasswordHash = "AOUQbP9G/q41JcyN3vmaXlCEind4cZD9drH/P0/jLfK+1EXsxXc+vl+Y0SBa2YSiQQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "475c753f-08ed-48c7-9064-26caec617f97",
                            TwoFactorEnabled = false,
                            UserName = "Mark_Wiza@yahoo.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "643 Lakin Unions, Bernierton, Turkey",
                            Email = "Loren.Zemlak@hotmail.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "d29d616a-9530-4da8-a9e4-00171d261f7f",
                            DepartmentID = 4,
                            Email = "Randy8@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Randy",
                            HourlyRate = 194.770552681186490m,
                            IdentificationNumber = "5208",
                            IsActive = true,
                            LastName = "Haley",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 1, 21, 2, 17, 59, 225, DateTimeKind.Unspecified).AddTicks(3407),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "d50e5880-ac60-4174-9450-9ddb2cc4307a",
                            DepartmentID = 4,
                            Email = "Delbert_Mayert82@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Delbert",
                            HourlyRate = 196.515831237899060m,
                            IdentificationNumber = "3935",
                            IsActive = true,
                            LastName = "Mayert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 7, 3, 1, 49, 40, 818, DateTimeKind.Unspecified).AddTicks(5595),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "2f012b31-9ca0-4f92-9cf3-b5ff68ff7f23",
                            DepartmentID = 4,
                            Email = "Martin80@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Martin",
                            HourlyRate = 193.468859211294380m,
                            IdentificationNumber = "1550",
                            IsActive = true,
                            LastName = "Hills",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 12, 19, 3, 41, 23, 295, DateTimeKind.Unspecified).AddTicks(1118),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "3f174aae-92a5-424a-93b4-549bc2d0e985",
                            DepartmentID = 4,
                            Email = "Lynette_Kuhlman84@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lynette",
                            HourlyRate = 193.446368460285650m,
                            IdentificationNumber = "4365",
                            IsActive = true,
                            LastName = "Kuhlman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 1, 4, 12, 12, 40, 607, DateTimeKind.Unspecified).AddTicks(7072),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "aa44e854-6d19-4251-8bcb-a38fb28de46e",
                            DepartmentID = 4,
                            Email = "Billie_Yost@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Billie",
                            HourlyRate = 194.812158394983110m,
                            IdentificationNumber = "4520",
                            IsActive = true,
                            LastName = "Yost",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 27, 5, 19, 16, 71, DateTimeKind.Unspecified).AddTicks(208),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "3e76fd12-71dd-4d2a-b181-e319d0cda749",
                            DepartmentID = 4,
                            Email = "Terrance_Muller6@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Terrance",
                            HourlyRate = 190.2391022677715410m,
                            IdentificationNumber = "8712",
                            IsActive = true,
                            LastName = "Muller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2021, 11, 4, 20, 32, 41, 594, DateTimeKind.Unspecified).AddTicks(212),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "508707ec-fc60-4ddc-ac41-1682cb13ac98",
                            DepartmentID = 4,
                            Email = "Brandy97@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Brandy",
                            HourlyRate = 193.855111074566430m,
                            IdentificationNumber = "4251",
                            IsActive = true,
                            LastName = "Harvey",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2022, 1, 2, 7, 6, 59, 121, DateTimeKind.Unspecified).AddTicks(7384),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "0b25144e-ce15-446f-8fcb-005958b94ada",
                            DepartmentID = 1,
                            Email = "Lorenzo_Schulist76@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lorenzo",
                            HourlyRate = 193.836170311009590m,
                            IdentificationNumber = "2280",
                            IsActive = true,
                            LastName = "Schulist",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 10, 8, 22, 42, 10, 964, DateTimeKind.Unspecified).AddTicks(2653),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "bead453e-fd54-43d5-9669-714315989044",
                            DepartmentID = 1,
                            Email = "Edmond_DuBuque72@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Edmond",
                            HourlyRate = 190.09273578417149180m,
                            IdentificationNumber = "4854",
                            IsActive = true,
                            LastName = "DuBuque",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 10, 8, 24, 32, 719, DateTimeKind.Unspecified).AddTicks(2832),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "f719911c-b2b1-4cd3-958c-3b2cc3b867aa",
                            DepartmentID = 1,
                            Email = "Ross.Blick@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ross",
                            HourlyRate = 196.263246809254980m,
                            IdentificationNumber = "6645",
                            IsActive = true,
                            LastName = "Blick",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 3, 25, 9, 38, 24, 209, DateTimeKind.Unspecified).AddTicks(8454),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "33f679cd-bde7-4f24-9c25-04d0cd5fffcd",
                            DepartmentID = 1,
                            Email = "Nichole_Bahringer@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Nichole",
                            HourlyRate = 196.358996814284010m,
                            IdentificationNumber = "2632",
                            IsActive = true,
                            LastName = "Bahringer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 18, 13, 39, 57, 467, DateTimeKind.Unspecified).AddTicks(7346),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "d025addc-28cd-40c9-b93a-2af36ff824c3",
                            DepartmentID = 1,
                            Email = "Anthony_Weber@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anthony",
                            HourlyRate = 194.321230740435990m,
                            IdentificationNumber = "4737",
                            IsActive = true,
                            LastName = "Weber",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 11, 25, 19, 28, 47, 665, DateTimeKind.Unspecified).AddTicks(5694),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "4e4f33aa-8737-484a-8f72-1fccc92a339a",
                            DepartmentID = 1,
                            Email = "Chad75@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Chad",
                            HourlyRate = 198.003521197477130m,
                            IdentificationNumber = "3485",
                            IsActive = true,
                            LastName = "Lockman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 2, 3, 52, 53, 815, DateTimeKind.Unspecified).AddTicks(2584),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "b060d268-df2c-4dc9-8b33-330192da22cd",
                            DepartmentID = 1,
                            Email = "Johnny_Bins@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Johnny",
                            HourlyRate = 192.952207710106020m,
                            IdentificationNumber = "1798",
                            IsActive = true,
                            LastName = "Bins",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 8, 18, 10, 56, 20, 960, DateTimeKind.Unspecified).AddTicks(9233),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "0b3e32fd-16c4-4dda-b395-d3c921c546a6",
                            DepartmentID = 1,
                            Email = "Erick42@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Erick",
                            HourlyRate = 197.73250982525410m,
                            IdentificationNumber = "1484",
                            IsActive = true,
                            LastName = "Reynolds",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 26, 20, 16, 28, 257, DateTimeKind.Unspecified).AddTicks(6684),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "fd0edfd4-a033-4c0a-8a7f-b99d8f840136",
                            DepartmentID = 1,
                            Email = "Hugo4@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Hugo",
                            HourlyRate = 192.791799922842440m,
                            IdentificationNumber = "3543",
                            IsActive = true,
                            LastName = "Johns",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 4, 3, 19, 11, 34, 133, DateTimeKind.Unspecified).AddTicks(3483),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "0543a674-c83d-4802-83fd-6fa134fdb78d",
                            DepartmentID = 1,
                            Email = "Pete_Daugherty38@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Pete",
                            HourlyRate = 199.525744928757540m,
                            IdentificationNumber = "7711",
                            IsActive = true,
                            LastName = "Daugherty",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 12, 26, 10, 39, 9, 17, DateTimeKind.Unspecified).AddTicks(8404),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "2916ea2c-c308-49e6-8b36-39ea2dbe948b",
                            DepartmentID = 1,
                            Email = "Julio.Auer60@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Julio",
                            HourlyRate = 195.175853318151020m,
                            IdentificationNumber = "1250",
                            IsActive = true,
                            LastName = "Auer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 7, 17, 19, 21, 14, 855, DateTimeKind.Unspecified).AddTicks(1563),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "62a1ff3a-bbab-47b1-9112-11a21a63018c",
                            DepartmentID = 3,
                            Email = "Rhonda15@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Rhonda",
                            HourlyRate = 195.319154493193680m,
                            IdentificationNumber = "1788",
                            IsActive = true,
                            LastName = "Kovacek",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 12, 23, 4, 23, 10, 457, DateTimeKind.Unspecified).AddTicks(4637),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "7dd78617-587f-4eab-afcc-36ad397fe6e0",
                            DepartmentID = 3,
                            Email = "Teri44@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Teri",
                            HourlyRate = 198.533015930342030m,
                            IdentificationNumber = "6438",
                            IsActive = true,
                            LastName = "Raynor",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 12, 19, 15, 37, 24, 584, DateTimeKind.Unspecified).AddTicks(8788),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "5db5d90f-82e6-4837-94f6-340787958341",
                            DepartmentID = 3,
                            Email = "Raquel15@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Raquel",
                            HourlyRate = 192.662589355680430m,
                            IdentificationNumber = "8898",
                            IsActive = true,
                            LastName = "Wolf",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 5, 26, 14, 58, 36, 373, DateTimeKind.Unspecified).AddTicks(6123),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "9e583910-d454-4d29-b631-f935369cc542",
                            DepartmentID = 3,
                            Email = "Megan_Dicki@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Megan",
                            HourlyRate = 198.516696015613480m,
                            IdentificationNumber = "3176",
                            IsActive = true,
                            LastName = "Dicki",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 18, 11, 57, 7, 75, DateTimeKind.Unspecified).AddTicks(6648),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "9df7d5b4-1090-450d-a91d-ace449a2155a",
                            DepartmentID = 3,
                            Email = "Melanie_Howell@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Melanie",
                            HourlyRate = 193.547261759427960m,
                            IdentificationNumber = "1973",
                            IsActive = true,
                            LastName = "Howell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 3, 27, 3, 31, 12, 642, DateTimeKind.Unspecified).AddTicks(9880),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "09bc5eaf-ab87-4393-b4f2-35eea4578d75",
                            DepartmentID = 3,
                            Email = "Geraldine44@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Geraldine",
                            HourlyRate = 191.372904075017620m,
                            IdentificationNumber = "3179",
                            IsActive = true,
                            LastName = "Goyette",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 4, 12, 9, 14, 821, DateTimeKind.Unspecified).AddTicks(7353),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "aa012fff-9ae0-45df-98fc-fbb455a72816",
                            DepartmentID = 3,
                            Email = "John.Cummings79@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "John",
                            HourlyRate = 196.555132580248240m,
                            IdentificationNumber = "2120",
                            IsActive = true,
                            LastName = "Cummings",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 10, 22, 9, 7, 40, 841, DateTimeKind.Unspecified).AddTicks(4773),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "5bb61c8a-0e0f-4db4-bd07-28051c086379",
                            DepartmentID = 3,
                            Email = "Norman.Kutch76@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Norman",
                            HourlyRate = 193.338984438841690m,
                            IdentificationNumber = "5831",
                            IsActive = true,
                            LastName = "Kutch",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 9, 13, 22, 7, 5, 771, DateTimeKind.Unspecified).AddTicks(3465),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "79e39fe2-451d-44b8-bc0e-23d2b1c9c696",
                            DepartmentID = 3,
                            Email = "Dolores79@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dolores",
                            HourlyRate = 194.817251039118160m,
                            IdentificationNumber = "1234",
                            IsActive = true,
                            LastName = "Jenkins",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 11, 1, 54, 49, 117, DateTimeKind.Unspecified).AddTicks(2979),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "7415b941-7f0c-4c7c-99ec-35e6abeaa5cc",
                            DepartmentID = 3,
                            Email = "Anita26@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anita",
                            HourlyRate = 197.961361221019810m,
                            IdentificationNumber = "5276",
                            IsActive = true,
                            LastName = "Mitchell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 6, 26, 6, 56, 32, 913, DateTimeKind.Unspecified).AddTicks(7524),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "1906ef83-ff42-4d95-8d36-8763583cdb9b",
                            DepartmentID = 3,
                            Email = "Rodney27@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Rodney",
                            HourlyRate = 195.894273741121530m,
                            IdentificationNumber = "6271",
                            IsActive = true,
                            LastName = "Altenwerth",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 2, 17, 2, 48, 28, 66, DateTimeKind.Unspecified).AddTicks(1711),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "738ea8b9-8630-4cbc-a5f0-e190ac4c3b9d",
                            DepartmentID = 3,
                            Email = "Sam.Weissnat@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Sam",
                            HourlyRate = 194.962241116427930m,
                            IdentificationNumber = "1625",
                            IsActive = true,
                            LastName = "Weissnat",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 15, 8, 10, 57, 173, DateTimeKind.Unspecified).AddTicks(2753),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "05484306-ad7d-47c1-bac2-3d671965c06d",
                            DepartmentID = 3,
                            Email = "Blanche72@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Blanche",
                            HourlyRate = 190.2194612613969770m,
                            IdentificationNumber = "2063",
                            IsActive = true,
                            LastName = "Hayes",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 12, 11, 23, 34, 9, 647, DateTimeKind.Unspecified).AddTicks(4106),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "3d381798-2cc6-44d8-bc12-7d623daf14f7",
                            DepartmentID = 3,
                            Email = "Laurie_Carroll16@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Laurie",
                            HourlyRate = 199.354843087193950m,
                            IdentificationNumber = "8147",
                            IsActive = true,
                            LastName = "Carroll",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 3, 16, 16, 46, 40, 738, DateTimeKind.Unspecified).AddTicks(1424),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "678ba498-8415-4a97-a503-64e46f3ef56c",
                            DepartmentID = 3,
                            Email = "Guy14@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Guy",
                            HourlyRate = 194.731238556434980m,
                            IdentificationNumber = "9853",
                            IsActive = true,
                            LastName = "Klocko",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 2, 21, 4, 32, 727, DateTimeKind.Unspecified).AddTicks(1498),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "b7186e2c-844a-4c8c-b322-57d22066c7d4",
                            DepartmentID = 3,
                            Email = "Annette.Luettgen@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Annette",
                            HourlyRate = 195.53771144502690m,
                            IdentificationNumber = "2024",
                            IsActive = true,
                            LastName = "Luettgen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 9, 27, 7, 44, 51, 627, DateTimeKind.Unspecified).AddTicks(4672),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "301ef378-2291-4297-b1d5-01bd6ac4881d",
                            DepartmentID = 3,
                            Email = "Joy.Jones2@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Joy",
                            HourlyRate = 191.287527569237880m,
                            IdentificationNumber = "2799",
                            IsActive = true,
                            LastName = "Jones",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 30, 22, 15, 16, 526, DateTimeKind.Unspecified).AddTicks(7369),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "6f19cb42-19e6-4b1f-a08e-52ed25062e91",
                            DepartmentID = 3,
                            Email = "Esther.Klein76@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Esther",
                            HourlyRate = 190.6144237847134580m,
                            IdentificationNumber = "9458",
                            IsActive = true,
                            LastName = "Klein",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 18, 18, 28, 32, 668, DateTimeKind.Unspecified).AddTicks(879),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "405a073f-1e16-4b99-93bf-4d8cc8e439e7",
                            DepartmentID = 3,
                            Email = "Theresa_Schoen5@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Theresa",
                            HourlyRate = 196.488856229227440m,
                            IdentificationNumber = "5034",
                            IsActive = true,
                            LastName = "Schoen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 4, 23, 1, 13, 44, 0, DateTimeKind.Unspecified).AddTicks(9184),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "e74d272e-acdb-45a8-9557-ccd768adf99c",
                            DepartmentID = 3,
                            Email = "Daisy76@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Daisy",
                            HourlyRate = 195.275168500503140m,
                            IdentificationNumber = "1807",
                            IsActive = true,
                            LastName = "Douglas",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 10, 26, 7, 54, 46, 540, DateTimeKind.Unspecified).AddTicks(3469),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "4e5672e4-932c-4d9a-bab7-b298c89ad3b5",
                            DepartmentID = 3,
                            Email = "Emilio_Sporer17@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Emilio",
                            HourlyRate = 192.346739984278910m,
                            IdentificationNumber = "5044",
                            IsActive = true,
                            LastName = "Sporer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 2, 20, 15, 21, 8, 795, DateTimeKind.Unspecified).AddTicks(6834),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "df6aebfd-acda-4163-8ad4-4dda2927eb71",
                            DepartmentID = 3,
                            Email = "Ian_Braun@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ian",
                            HourlyRate = 195.059752820553140m,
                            IdentificationNumber = "5561",
                            IsActive = true,
                            LastName = "Braun",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 12, 0, 19, 5, 422, DateTimeKind.Unspecified).AddTicks(6249),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "47d2c86f-dd6b-4f6c-ae51-b5f05d01f0f1",
                            DepartmentID = 3,
                            Email = "Ivan_Larson91@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ivan",
                            HourlyRate = 191.342434376171990m,
                            IdentificationNumber = "3319",
                            IsActive = true,
                            LastName = "Larson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 3, 26, 17, 18, 13, 152, DateTimeKind.Unspecified).AddTicks(3349),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "a288750d-ef4f-478d-9da7-53ddcfeadde4",
                            DepartmentID = 3,
                            Email = "Bernadette_Robel@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Bernadette",
                            HourlyRate = 190.6134551859523430m,
                            IdentificationNumber = "6937",
                            IsActive = true,
                            LastName = "Robel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 4, 11, 10, 10, 672, DateTimeKind.Unspecified).AddTicks(2738),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "2b0215d2-0572-4de0-a213-f79bd6969153",
                            DepartmentID = 1,
                            Email = "Yvette_OReilly92@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Yvette",
                            HourlyRate = 191.790706814169280m,
                            IdentificationNumber = "9053",
                            IsActive = true,
                            LastName = "O'Reilly",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 3, 19, 24, 7, 929, DateTimeKind.Unspecified).AddTicks(3956),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "4a93f476-0581-40a0-bdf7-57001a44f757",
                            DepartmentID = 2,
                            Email = "Brittany_Pfannerstill@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Brittany",
                            HourlyRate = 193.973980650293630m,
                            IdentificationNumber = "6874",
                            IsActive = true,
                            LastName = "Pfannerstill",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 6, 15, 4, 26, 153, DateTimeKind.Unspecified).AddTicks(9828),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            DepartmentID = 5,
                            Email = "Julie.Tromp@yahoo.com",
                            EmployeeStatus = 0,
                            FirstName = "Julie",
                            HourlyRate = 198.922338885684660m,
                            IdentificationNumber = "7836",
                            IsActive = true,
                            LastName = "Tromp",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 11, 20, 30, 43, 302, DateTimeKind.Unspecified).AddTicks(4657),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "74c53285-0521-4c06-b4ab-0780615a4853",
                            DepartmentID = 6,
                            Email = "Mark_Wiza@yahoo.com",
                            EmployeeStatus = 1,
                            FirstName = "Mark",
                            HourlyRate = 191.140369270527910m,
                            IdentificationNumber = "7405",
                            IsActive = true,
                            LastName = "Wiza",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 10, 27, 16, 32, 58, 70, DateTimeKind.Unspecified).AddTicks(1809),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "a0dff476-2dc9-4bc6-b93b-db66e3183a2b",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "09d9c0b2-5946-4e6c-963d-1ce1d561e819",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "fecc5393-f14f-4c4b-a7f1-158a601154e5",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "4699ccba-eaee-46a3-8cd7-1e7d88781e18",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "640cb6e8-6d8b-40cd-adbc-01eb6a12bba0",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "cc262816-8c33-471d-bc46-bef20e18ad44",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "c3933fcc-23a0-4a51-bdd6-956d4390209a",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "af9eb8fb-c8bf-417d-86a2-cf88e8fe7845",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "9ee324c1-0111-4964-ac1e-042132da5fb3",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "013b6b1a-0200-45ba-bb95-32882a8816d9",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "d29d616a-9530-4da8-a9e4-00171d261f7f",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "d29d616a-9530-4da8-a9e4-00171d261f7f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d50e5880-ac60-4174-9450-9ddb2cc4307a",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "d50e5880-ac60-4174-9450-9ddb2cc4307a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2f012b31-9ca0-4f92-9cf3-b5ff68ff7f23",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "2f012b31-9ca0-4f92-9cf3-b5ff68ff7f23",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3f174aae-92a5-424a-93b4-549bc2d0e985",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "3f174aae-92a5-424a-93b4-549bc2d0e985",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "aa44e854-6d19-4251-8bcb-a38fb28de46e",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "aa44e854-6d19-4251-8bcb-a38fb28de46e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3e76fd12-71dd-4d2a-b181-e319d0cda749",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "3e76fd12-71dd-4d2a-b181-e319d0cda749",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "508707ec-fc60-4ddc-ac41-1682cb13ac98",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "508707ec-fc60-4ddc-ac41-1682cb13ac98",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0b25144e-ce15-446f-8fcb-005958b94ada",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0b25144e-ce15-446f-8fcb-005958b94ada",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bead453e-fd54-43d5-9669-714315989044",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "bead453e-fd54-43d5-9669-714315989044",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f719911c-b2b1-4cd3-958c-3b2cc3b867aa",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "f719911c-b2b1-4cd3-958c-3b2cc3b867aa",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "33f679cd-bde7-4f24-9c25-04d0cd5fffcd",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "33f679cd-bde7-4f24-9c25-04d0cd5fffcd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d025addc-28cd-40c9-b93a-2af36ff824c3",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "d025addc-28cd-40c9-b93a-2af36ff824c3",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4e4f33aa-8737-484a-8f72-1fccc92a339a",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "4e4f33aa-8737-484a-8f72-1fccc92a339a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b060d268-df2c-4dc9-8b33-330192da22cd",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b060d268-df2c-4dc9-8b33-330192da22cd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0b3e32fd-16c4-4dda-b395-d3c921c546a6",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0b3e32fd-16c4-4dda-b395-d3c921c546a6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fd0edfd4-a033-4c0a-8a7f-b99d8f840136",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "fd0edfd4-a033-4c0a-8a7f-b99d8f840136",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0543a674-c83d-4802-83fd-6fa134fdb78d",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0543a674-c83d-4802-83fd-6fa134fdb78d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2916ea2c-c308-49e6-8b36-39ea2dbe948b",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "2916ea2c-c308-49e6-8b36-39ea2dbe948b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "62a1ff3a-bbab-47b1-9112-11a21a63018c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "62a1ff3a-bbab-47b1-9112-11a21a63018c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7dd78617-587f-4eab-afcc-36ad397fe6e0",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7dd78617-587f-4eab-afcc-36ad397fe6e0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5db5d90f-82e6-4837-94f6-340787958341",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5db5d90f-82e6-4837-94f6-340787958341",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9e583910-d454-4d29-b631-f935369cc542",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9e583910-d454-4d29-b631-f935369cc542",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9df7d5b4-1090-450d-a91d-ace449a2155a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9df7d5b4-1090-450d-a91d-ace449a2155a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "09bc5eaf-ab87-4393-b4f2-35eea4578d75",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "09bc5eaf-ab87-4393-b4f2-35eea4578d75",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "aa012fff-9ae0-45df-98fc-fbb455a72816",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "aa012fff-9ae0-45df-98fc-fbb455a72816",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5bb61c8a-0e0f-4db4-bd07-28051c086379",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5bb61c8a-0e0f-4db4-bd07-28051c086379",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "79e39fe2-451d-44b8-bc0e-23d2b1c9c696",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "79e39fe2-451d-44b8-bc0e-23d2b1c9c696",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7415b941-7f0c-4c7c-99ec-35e6abeaa5cc",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7415b941-7f0c-4c7c-99ec-35e6abeaa5cc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1906ef83-ff42-4d95-8d36-8763583cdb9b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "1906ef83-ff42-4d95-8d36-8763583cdb9b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "738ea8b9-8630-4cbc-a5f0-e190ac4c3b9d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "738ea8b9-8630-4cbc-a5f0-e190ac4c3b9d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "05484306-ad7d-47c1-bac2-3d671965c06d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "05484306-ad7d-47c1-bac2-3d671965c06d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3d381798-2cc6-44d8-bc12-7d623daf14f7",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3d381798-2cc6-44d8-bc12-7d623daf14f7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "678ba498-8415-4a97-a503-64e46f3ef56c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "678ba498-8415-4a97-a503-64e46f3ef56c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b7186e2c-844a-4c8c-b322-57d22066c7d4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b7186e2c-844a-4c8c-b322-57d22066c7d4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "301ef378-2291-4297-b1d5-01bd6ac4881d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "301ef378-2291-4297-b1d5-01bd6ac4881d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6f19cb42-19e6-4b1f-a08e-52ed25062e91",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6f19cb42-19e6-4b1f-a08e-52ed25062e91",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "405a073f-1e16-4b99-93bf-4d8cc8e439e7",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "405a073f-1e16-4b99-93bf-4d8cc8e439e7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e74d272e-acdb-45a8-9557-ccd768adf99c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e74d272e-acdb-45a8-9557-ccd768adf99c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4e5672e4-932c-4d9a-bab7-b298c89ad3b5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4e5672e4-932c-4d9a-bab7-b298c89ad3b5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "df6aebfd-acda-4163-8ad4-4dda2927eb71",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "df6aebfd-acda-4163-8ad4-4dda2927eb71",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "47d2c86f-dd6b-4f6c-ae51-b5f05d01f0f1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "47d2c86f-dd6b-4f6c-ae51-b5f05d01f0f1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a288750d-ef4f-478d-9da7-53ddcfeadde4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "a288750d-ef4f-478d-9da7-53ddcfeadde4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2b0215d2-0572-4de0-a213-f79bd6969153",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "2b0215d2-0572-4de0-a213-f79bd6969153",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4a93f476-0581-40a0-bdf7-57001a44f757",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "4a93f476-0581-40a0-bdf7-57001a44f757",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "0aa3d81b-eee4-424a-825e-c81ccbc1e405",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "74c53285-0521-4c06-b4ab-0780615a4853",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "74c53285-0521-4c06-b4ab-0780615a4853",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "74c53285-0521-4c06-b4ab-0780615a4853",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
