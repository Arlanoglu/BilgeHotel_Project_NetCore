// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220405045622_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c8d2294-7919-49dd-bf66-44d5f193879f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "03588ac9-dd97-40fb-b4ce-dc6c26117161",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "ANWPL6rMvQ1m41bi7j+ImReRedrJctt03Cfhd1BiMqbhwreVIc6+mNtOrklvaBqL8A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3aed9c02-633f-4673-a3be-0a5d71121dbb",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "c31e0739-2ed0-43e3-bbc1-ef42aebca270",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e102f692-5c8b-4de8-bdd1-cf1b894dbe19",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dominic92@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dominic",
                            LastName = "Graham",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOMINIC92@GMAIL.COM",
                            NormalizedUserName = "DOMINIC92@GMAIL.COM",
                            PasswordHash = "AI4M85akG8frx+H5bynANeQJin+iGP4nT45JgBM8wWCGsoK4elH5+u8FpPYGudwvrQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33fcba78-4025-4662-bfa8-29698ddb7a52",
                            TwoFactorEnabled = false,
                            UserName = "Dominic92@gmail.com"
                        },
                        new
                        {
                            Id = "02d85a69-9e91-4c36-95fe-95a1c8909715",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "ffebd036-1dc9-47c3-a9ec-075c9a63b7f0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Guillermo_Yost38@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Guillermo",
                            LastName = "Yost",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUILLERMO_YOST38@YAHOO.COM",
                            NormalizedUserName = "GUILLERMO_YOST38@YAHOO.COM",
                            PasswordHash = "AHguZD4UByWMPSEbV50/XasGKdRmtUSHoBBjlDMaw0cjG+c0zDPtfFrgxYgkyYMWig==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "451be2c5-6d3e-406d-a9a6-1308dd9f4b67",
                            TwoFactorEnabled = false,
                            UserName = "Guillermo_Yost38@yahoo.com"
                        },
                        new
                        {
                            Id = "811718d7-5627-48ad-9908-ed64867a3033",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f240d64c-1782-4025-92fb-2022c67c4197",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kim_Goldner@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kim",
                            LastName = "Goldner",
                            LockoutEnabled = false,
                            NormalizedEmail = "KIM_GOLDNER@HOTMAIL.COM",
                            NormalizedUserName = "KIM_GOLDNER@HOTMAIL.COM",
                            PasswordHash = "APSydXIzNsvCpki2/h+LNllF5d8zx3q3m8+g0ztoy8e1r0F76kbRNLdpgmFvGfy9gA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e3a780e-95cd-4063-abba-b2d8921c31ca",
                            TwoFactorEnabled = false,
                            UserName = "Kim_Goldner@hotmail.com"
                        },
                        new
                        {
                            Id = "95dc3b56-976f-4af2-b49c-adb48e1d8956",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6addf6dd-9571-4ca5-ba37-6b14ac6a19a1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Randal.Emmerich63@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Randal",
                            LastName = "Emmerich",
                            LockoutEnabled = false,
                            NormalizedEmail = "RANDAL.EMMERICH63@GMAIL.COM",
                            NormalizedUserName = "RANDAL.EMMERICH63@GMAIL.COM",
                            PasswordHash = "ADTvj2OcTH2SRxzIAaRYG5o9qTf6WCKam2L4BuoRLfIRxpLrjQ6De+N81MdtPURFag==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91a690bf-417c-4dab-93b5-83ec17066e7c",
                            TwoFactorEnabled = false,
                            UserName = "Randal.Emmerich63@gmail.com"
                        },
                        new
                        {
                            Id = "efb29df0-f1c0-45db-9f27-937ed7580fbc",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b3d5fa0f-56db-4fa3-b6de-ce5c67016367",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Gretchen44@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gretchen",
                            LastName = "Turcotte",
                            LockoutEnabled = false,
                            NormalizedEmail = "GRETCHEN44@HOTMAIL.COM",
                            NormalizedUserName = "GRETCHEN44@HOTMAIL.COM",
                            PasswordHash = "ACo/bj+8g8FYDmKJdEl7laWzns0+5VLKjNFIgmSWK3Gm/zcwp29PTTmpUsgiU82qvg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5239c318-dca7-48f9-92ae-1d538016ee69",
                            TwoFactorEnabled = false,
                            UserName = "Gretchen44@hotmail.com"
                        },
                        new
                        {
                            Id = "20ebd9da-6a4b-43d1-bd66-72b93ba85437",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "19c643e9-17ee-4364-8406-d5d071e2fbcf",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tim.Corkery74@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tim",
                            LastName = "Corkery",
                            LockoutEnabled = false,
                            NormalizedEmail = "TIM.CORKERY74@GMAIL.COM",
                            NormalizedUserName = "TIM.CORKERY74@GMAIL.COM",
                            PasswordHash = "AMx5JgRM5lHIHoO9GFSABJZ15z0GGzbZZ2L4sDklPl3NzZPAvba7XkwfLAxYyI0zgg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "da5f7817-862f-4d6a-b19b-669add77f2ed",
                            TwoFactorEnabled = false,
                            UserName = "Tim.Corkery74@gmail.com"
                        },
                        new
                        {
                            Id = "e9bec946-e3a7-4327-8100-9137fe2c4eca",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "eaceb643-955d-4df4-8cb9-98384195fba4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lucia.Dibbert@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lucia",
                            LastName = "Dibbert",
                            LockoutEnabled = false,
                            NormalizedEmail = "LUCIA.DIBBERT@HOTMAIL.COM",
                            NormalizedUserName = "LUCIA.DIBBERT@HOTMAIL.COM",
                            PasswordHash = "AOyafXjooYdLLZCfl28f7enzpiukr+XZzRdfRFFTyYzG2nvmvHm1Gv64Ln2cjhDeig==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7ed1b90e-5eb2-47d7-98f1-4880932c7a59",
                            TwoFactorEnabled = false,
                            UserName = "Lucia.Dibbert@hotmail.com"
                        },
                        new
                        {
                            Id = "3e8c8626-f052-4562-8500-f02befa0570e",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c609a42e-d6b1-476a-bb4c-120e18c03f1d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Clay.Schaden@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Clay",
                            LastName = "Schaden",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAY.SCHADEN@HOTMAIL.COM",
                            NormalizedUserName = "CLAY.SCHADEN@HOTMAIL.COM",
                            PasswordHash = "AHC+0rlcakzaryL3xuIk7gIEss8UMGenvi4DRJ6pdqOn1PjiZgBjJ6YJPoaUZ39yuQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8330889a-9a06-4710-9c73-b86260298845",
                            TwoFactorEnabled = false,
                            UserName = "Clay.Schaden@hotmail.com"
                        },
                        new
                        {
                            Id = "ebfe94ea-5c9f-47bb-b14a-8979ebc4fe4f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6755f991-afa9-42f6-9ed0-6c99a3460551",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Flora.Mitchell27@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Flora",
                            LastName = "Mitchell",
                            LockoutEnabled = false,
                            NormalizedEmail = "FLORA.MITCHELL27@GMAIL.COM",
                            NormalizedUserName = "FLORA.MITCHELL27@GMAIL.COM",
                            PasswordHash = "AAHTYGCDMtu4GePWXiRgxNh+iuVQP9iPr5Trp6QCNjQmJtU9iBTjlAxGeqJGh0i28A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ea537d59-9f7f-468d-9699-3850e7c5398a",
                            TwoFactorEnabled = false,
                            UserName = "Flora.Mitchell27@gmail.com"
                        },
                        new
                        {
                            Id = "3930342e-2654-4b8d-a418-1c0be8c68cc1",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "87d17dbc-9fd7-4a1c-8818-69066477a3b5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nellie.Schuster@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Nellie",
                            LastName = "Schuster",
                            LockoutEnabled = false,
                            NormalizedEmail = "NELLIE.SCHUSTER@YAHOO.COM",
                            NormalizedUserName = "NELLIE.SCHUSTER@YAHOO.COM",
                            PasswordHash = "ACkYCDlT7gd71HjVxQnzQI/CGN3NU7WUzSaQtnth72993CfQG8x/J6LjopDQkTzWwA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bdc9f351-69df-4914-acc0-f612b230f253",
                            TwoFactorEnabled = false,
                            UserName = "Nellie.Schuster@yahoo.com"
                        },
                        new
                        {
                            Id = "5b6215c2-88b0-4473-8e47-c81632d24bd4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "2bc0b544-0b57-4dca-b40e-c6066d830496",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Latoya_Reynolds@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Latoya",
                            LastName = "Reynolds",
                            LockoutEnabled = false,
                            NormalizedEmail = "LATOYA_REYNOLDS@YAHOO.COM",
                            NormalizedUserName = "LATOYA_REYNOLDS@YAHOO.COM",
                            PasswordHash = "AMcY3MB54exE6hiDNj/VBQ+Eb9PUkf9XRoDRbnX8WUGPkoqNTcgk225jAZBmTsZflQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f6d46276-b499-4113-9c95-f9508208dce7",
                            TwoFactorEnabled = false,
                            UserName = "Latoya_Reynolds@yahoo.com"
                        },
                        new
                        {
                            Id = "b7747579-485e-4313-ae21-a7ddb1d4909e",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "af45b392-351b-47f2-8257-d824af94561f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nicolas30@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nicolas",
                            LastName = "Blick",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICOLAS30@GMAIL.COM",
                            NormalizedUserName = "NICOLAS30@GMAIL.COM",
                            PasswordHash = "AO5czasac4WAH0OZfxymH8YRUqUQpl6YczP2O6FBhZDeh50MzsXUQ5LryA4FT4c4Ow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07a5ee6d-0590-4fc3-8c02-cbc56a744f3a",
                            TwoFactorEnabled = false,
                            UserName = "Nicolas30@gmail.com"
                        },
                        new
                        {
                            Id = "d3d7494b-451a-4d6a-a2a0-0d7c6f4f73ca",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "84d5456c-b626-4393-a71d-d1114a19caba",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anita60@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anita",
                            LastName = "Price",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANITA60@HOTMAIL.COM",
                            NormalizedUserName = "ANITA60@HOTMAIL.COM",
                            PasswordHash = "ALdjxu/g6MzVNrkuhSsOzxo3YtwRrdxcTGCuOcxXSR7jVQwSAYdTG2X6oVyIEkQ34w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3fbe34d6-5625-4579-a870-6953f5402796",
                            TwoFactorEnabled = false,
                            UserName = "Anita60@hotmail.com"
                        },
                        new
                        {
                            Id = "a1ac7438-4802-4fb3-8070-a54ab4085bbd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6147a1e3-b878-4715-b501-fafca739e4df",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Priscilla.Douglas89@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Priscilla",
                            LastName = "Douglas",
                            LockoutEnabled = false,
                            NormalizedEmail = "PRISCILLA.DOUGLAS89@GMAIL.COM",
                            NormalizedUserName = "PRISCILLA.DOUGLAS89@GMAIL.COM",
                            PasswordHash = "AKmnQHi02TCNG85tOwskAz4QoD5cwqS4mRZ9zc0eh6+n9yUPTJf9zxK2yLMyaQyxvw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d6e3130b-8df0-4c2d-85eb-c8b4a4b4d6fc",
                            TwoFactorEnabled = false,
                            UserName = "Priscilla.Douglas89@gmail.com"
                        },
                        new
                        {
                            Id = "defff5b7-f601-4960-86ae-4579a87edf2c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "28609cd2-d7ea-41d7-83e5-c5185af03a5d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Melvin_Harvey@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melvin",
                            LastName = "Harvey",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELVIN_HARVEY@GMAIL.COM",
                            NormalizedUserName = "MELVIN_HARVEY@GMAIL.COM",
                            PasswordHash = "AHGBzXo7h2V8KOWgYid8Gy+7z1OZbgHngkqOf6SOEOW/aKmOTejXE6vVKcXB3jNZMg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b0cf4839-727b-4bb6-a266-c373c5df4099",
                            TwoFactorEnabled = false,
                            UserName = "Melvin_Harvey@gmail.com"
                        },
                        new
                        {
                            Id = "93f2687b-d100-40e5-86d2-405cf51f6f03",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "274bdcf7-df2a-402d-b31c-f01233efdae2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Joe_Gutkowski@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Joe",
                            LastName = "Gutkowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOE_GUTKOWSKI@YAHOO.COM",
                            NormalizedUserName = "JOE_GUTKOWSKI@YAHOO.COM",
                            PasswordHash = "ACgWwbHbk+lRJ9FBk0DaZp35uSbXZR3OEI3ZXImV7OepA8ga3zqq4q3RAAOnVl6BHQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bec6ca53-fe57-4070-b143-7936390553b1",
                            TwoFactorEnabled = false,
                            UserName = "Joe_Gutkowski@yahoo.com"
                        },
                        new
                        {
                            Id = "b9d511dd-036d-4329-b74c-917bf4b77d44",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "73ec94bb-fa73-4561-9b48-cca33e633537",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alex0@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Alex",
                            LastName = "Lebsack",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALEX0@YAHOO.COM",
                            NormalizedUserName = "ALEX0@YAHOO.COM",
                            PasswordHash = "ADJFVDjyv1E2/IpLfDETKm0m/dClAkDBaDjFxeBBEYOMWFa29xueaO2ESWA/VMnvWg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d668228-eca4-4d3f-afc4-63ef05bd60ec",
                            TwoFactorEnabled = false,
                            UserName = "Alex0@yahoo.com"
                        },
                        new
                        {
                            Id = "44ae0eee-fe5e-4c13-80dc-f8721bc8d332",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d1b67e04-1e66-400b-ada5-ee63691d8981",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alice87@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alice",
                            LastName = "McCullough",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALICE87@HOTMAIL.COM",
                            NormalizedUserName = "ALICE87@HOTMAIL.COM",
                            PasswordHash = "ACIJ8kyBHsp9w9gzo5mRUb3W8tQ8hNOgQAMhf7j5oYuvqz+A7b+aP8JX5Kh6sxWkfA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87ba04cf-3fd6-49b2-8c1e-a8ea3134fa4a",
                            TwoFactorEnabled = false,
                            UserName = "Alice87@hotmail.com"
                        },
                        new
                        {
                            Id = "756400a3-f2e3-407c-84b7-2b610e457813",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e5d6c367-ecb2-451d-9470-f926cf8bc892",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Harriet_Bosco@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Harriet",
                            LastName = "Bosco",
                            LockoutEnabled = false,
                            NormalizedEmail = "HARRIET_BOSCO@YAHOO.COM",
                            NormalizedUserName = "HARRIET_BOSCO@YAHOO.COM",
                            PasswordHash = "ADJ6Y8AET/FOlS9OPsamXEoU7kjUUKnGAAyidDkw8KuijTIBeTPJQK2uU7PTkTHYBA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b1addede-1e45-4e02-8cf6-6d083a157032",
                            TwoFactorEnabled = false,
                            UserName = "Harriet_Bosco@yahoo.com"
                        },
                        new
                        {
                            Id = "623ddee6-78bb-4e98-bc14-e71d2b29f85c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f1d302c5-14cb-4fbe-b259-ef1925621b68",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Johnnie32@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Johnnie",
                            LastName = "Bergnaum",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHNNIE32@HOTMAIL.COM",
                            NormalizedUserName = "JOHNNIE32@HOTMAIL.COM",
                            PasswordHash = "ACe6qcCl4B+ARrNPsC6a4HkKd1V+U1WfF6nLk+F2DlcSvjqEjkErF8njWOVgpNjnyA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8c290439-9179-499d-8823-4378c32b94a9",
                            TwoFactorEnabled = false,
                            UserName = "Johnnie32@hotmail.com"
                        },
                        new
                        {
                            Id = "1030ff91-7a78-4f13-a1ec-f627fa32b569",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "76990a50-4bcb-44fa-b0da-cd2e17e17988",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bobbie.Torp34@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Bobbie",
                            LastName = "Torp",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOBBIE.TORP34@HOTMAIL.COM",
                            NormalizedUserName = "BOBBIE.TORP34@HOTMAIL.COM",
                            PasswordHash = "AD9aiZXkhkfSalfIEGHbr19D8edl8xjfiVVfbwLqc+NPllvsqb6etWzSZ23iDloVmA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3b17d684-d2b3-439f-a64d-85412e9e6857",
                            TwoFactorEnabled = false,
                            UserName = "Bobbie.Torp34@hotmail.com"
                        },
                        new
                        {
                            Id = "285151fd-90d5-4ffe-a9c8-2acedd3582d9",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4d8a4c9f-6702-499c-8d85-a6846cf69740",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cora.Pouros13@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Cora",
                            LastName = "Pouros",
                            LockoutEnabled = false,
                            NormalizedEmail = "CORA.POUROS13@GMAIL.COM",
                            NormalizedUserName = "CORA.POUROS13@GMAIL.COM",
                            PasswordHash = "AHFjyrwuOWKeOLk0wl6vGsuG8RD5F0nu0ZvHyvARrIE630Vtx9mhE8Lo4UjCZ8qyfg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "25b850e4-1b3c-4846-b14d-5982b8b4a95b",
                            TwoFactorEnabled = false,
                            UserName = "Cora.Pouros13@gmail.com"
                        },
                        new
                        {
                            Id = "b7610c14-057c-40de-a184-f5d64c9a9d7f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c7de7231-dea3-4bcc-9a00-40bbe54c4cca",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eddie_Altenwerth@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Eddie",
                            LastName = "Altenwerth",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDDIE_ALTENWERTH@HOTMAIL.COM",
                            NormalizedUserName = "EDDIE_ALTENWERTH@HOTMAIL.COM",
                            PasswordHash = "AIbT6WL10ARJyZnXhWLnvkpgyBfpe3+d7nxe+35SbvsGHCHwdzx6MLCOIkb/INbSvA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5807922-bd7a-46fb-948c-4ec1c9ba2051",
                            TwoFactorEnabled = false,
                            UserName = "Eddie_Altenwerth@hotmail.com"
                        },
                        new
                        {
                            Id = "fc827145-248d-4889-9265-958ae75058f2",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e284817b-278a-4be6-b020-22b914287b4e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sidney.Corkery@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sidney",
                            LastName = "Corkery",
                            LockoutEnabled = false,
                            NormalizedEmail = "SIDNEY.CORKERY@GMAIL.COM",
                            NormalizedUserName = "SIDNEY.CORKERY@GMAIL.COM",
                            PasswordHash = "ADAhn/vHZTjNePXi2Dxq/C6t10LuvH1klFpWe/+xh1yPNvne4lQDiElKuFBL/lPNcA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e16d9738-0f32-4bfd-931d-0f4ef727d1d1",
                            TwoFactorEnabled = false,
                            UserName = "Sidney.Corkery@gmail.com"
                        },
                        new
                        {
                            Id = "1a8976a5-3cc2-4fba-9c72-cedb8e8eb213",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9b08a66f-fad0-4098-8b37-866ef7337268",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yvette_Hoeger@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Yvette",
                            LastName = "Hoeger",
                            LockoutEnabled = false,
                            NormalizedEmail = "YVETTE_HOEGER@YAHOO.COM",
                            NormalizedUserName = "YVETTE_HOEGER@YAHOO.COM",
                            PasswordHash = "AJTx6AxX+53/jU2YSA+qFXEjnTosBnT18goEyAIL07lvvPZjEdD/DOil0m8/9YSAUA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cab2618d-7920-4718-98ad-cd5333ce4c17",
                            TwoFactorEnabled = false,
                            UserName = "Yvette_Hoeger@yahoo.com"
                        },
                        new
                        {
                            Id = "e000de25-6b0a-4957-9aa5-ef6b66d8484d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "13dd71d4-1248-4230-863d-ff86018daa19",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Erma_Bailey17@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Erma",
                            LastName = "Bailey",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERMA_BAILEY17@GMAIL.COM",
                            NormalizedUserName = "ERMA_BAILEY17@GMAIL.COM",
                            PasswordHash = "APg2dRXyvI64K4SE+HY04suHNHYCcZ67c5v63xh7IQxYjKVmtAImouuZoO8oRVEViQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "796e7340-8988-49cb-8e2a-be1b2ea26f27",
                            TwoFactorEnabled = false,
                            UserName = "Erma_Bailey17@gmail.com"
                        },
                        new
                        {
                            Id = "cdc2ec66-eb08-4faf-b83c-7a51d59ad92c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9a9000ab-78a0-4859-a91f-2f172f00219f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sally.Rosenbaum@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sally",
                            LastName = "Rosenbaum",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALLY.ROSENBAUM@GMAIL.COM",
                            NormalizedUserName = "SALLY.ROSENBAUM@GMAIL.COM",
                            PasswordHash = "AJZdTZkbkJK4S2gRIasJ0Na06aoDUq3ZlQXogXsSFuFgJ59Sv8Jp1a/Q61g8ETQ/dA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "933c1140-967c-46bb-b2b3-9bceab663ee8",
                            TwoFactorEnabled = false,
                            UserName = "Sally.Rosenbaum@gmail.com"
                        },
                        new
                        {
                            Id = "6786ba50-ce6f-4fa2-8994-5ff415dbefa1",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c998eeb7-a16d-4d89-9571-70310f42bb4f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Samuel_Collier43@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Samuel",
                            LastName = "Collier",
                            LockoutEnabled = false,
                            NormalizedEmail = "SAMUEL_COLLIER43@HOTMAIL.COM",
                            NormalizedUserName = "SAMUEL_COLLIER43@HOTMAIL.COM",
                            PasswordHash = "APtt4OBmv+rwOtl4IY7Ff5SxMeTNnsfz5UaKUtvux8zaavpPcQJQ7faKa4bMzazyMA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9dce8154-256c-46fc-b23b-8af488960be6",
                            TwoFactorEnabled = false,
                            UserName = "Samuel_Collier43@hotmail.com"
                        },
                        new
                        {
                            Id = "74618ca3-b63e-4bdc-bb1e-69811183bd00",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b26e5f09-9c7e-4325-83a9-43c7b55470ee",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Christian.Prosacco@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Christian",
                            LastName = "Prosacco",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHRISTIAN.PROSACCO@YAHOO.COM",
                            NormalizedUserName = "CHRISTIAN.PROSACCO@YAHOO.COM",
                            PasswordHash = "AJC5Z5S+aQ/4hDvO7u8LkCIMTOj0M7ZvjL3qmrCMsMcpvRfvrckx0kmjTI320wBH3Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "02d47e46-e3ab-431b-89b4-7a57986b9e51",
                            TwoFactorEnabled = false,
                            UserName = "Christian.Prosacco@yahoo.com"
                        },
                        new
                        {
                            Id = "71ec6d73-c677-4a08-9b14-d25230286c38",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "cbed64d1-a896-4ace-9b4e-3ac03d16f940",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nicole_Luettgen@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nicole",
                            LastName = "Luettgen",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICOLE_LUETTGEN@GMAIL.COM",
                            NormalizedUserName = "NICOLE_LUETTGEN@GMAIL.COM",
                            PasswordHash = "AG3k08vgm9CRJuDfpqwNs64vCBDTIW1vWKHIZWPlzjq1NlmPDE5hXT9lop0+8bnddg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0b9a8add-a1d6-4b17-9d08-e397e1a4fd5f",
                            TwoFactorEnabled = false,
                            UserName = "Nicole_Luettgen@gmail.com"
                        },
                        new
                        {
                            Id = "6a6257de-0560-48fb-8c63-f9db4327e1a1",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "48f56d19-5b7f-4a03-972c-db248cad4fa7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tricia.Hickle67@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Tricia",
                            LastName = "Hickle",
                            LockoutEnabled = false,
                            NormalizedEmail = "TRICIA.HICKLE67@YAHOO.COM",
                            NormalizedUserName = "TRICIA.HICKLE67@YAHOO.COM",
                            PasswordHash = "AEPyYiaXv+N0iizs5NldNQuJqw7KjCQfg6aGD34JEIl0dcIHpySEgDeASYtYk1laVw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3c87497-bc76-4087-87de-6ee6af4ffbda",
                            TwoFactorEnabled = false,
                            UserName = "Tricia.Hickle67@yahoo.com"
                        },
                        new
                        {
                            Id = "c06dc470-ada2-4a62-a816-e56ce3482b30",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "44427585-c7fc-4cbd-a820-77361554416d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Inez_Jones@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Inez",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "INEZ_JONES@YAHOO.COM",
                            NormalizedUserName = "INEZ_JONES@YAHOO.COM",
                            PasswordHash = "AB/5+6gUECuCI9M4jgnAmhD0EozIRfhfK3WfmM018nVQi3za4umBUpUVpT4h/chnJg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "000ba9f5-f492-4f69-9857-91e25f2c14ea",
                            TwoFactorEnabled = false,
                            UserName = "Inez_Jones@yahoo.com"
                        },
                        new
                        {
                            Id = "194e2176-f23b-4d87-8a6d-603575f6da7d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "0a55e4f6-ead8-4ce3-8735-55488f9ca271",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Charles47@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Charles",
                            LastName = "Harris",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHARLES47@GMAIL.COM",
                            NormalizedUserName = "CHARLES47@GMAIL.COM",
                            PasswordHash = "ACbbzg/qMy5g8H0W7j3p4AFyr5oUU36cGl39vykklRJwelem8NPDWjonMJ5NJ5X3Ug==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b159b5a-2b46-478b-a3ed-1dbfe4b15dfc",
                            TwoFactorEnabled = false,
                            UserName = "Charles47@gmail.com"
                        },
                        new
                        {
                            Id = "17e92d4d-8d29-457f-80f3-1ff18959998b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "08171655-d5da-4535-9677-4cf5bf453254",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Leslie18@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Leslie",
                            LastName = "Abshire",
                            LockoutEnabled = false,
                            NormalizedEmail = "LESLIE18@YAHOO.COM",
                            NormalizedUserName = "LESLIE18@YAHOO.COM",
                            PasswordHash = "AF+0EPICgCALQq5stTz/+lVQ2FTHMlgN2qgYzFiBdMj7Ei2VpjFdyCLLqV3u0jaGpw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d98da037-7333-4824-bcef-a1a7c7630e2b",
                            TwoFactorEnabled = false,
                            UserName = "Leslie18@yahoo.com"
                        },
                        new
                        {
                            Id = "bbcedef2-06b5-4ddf-b609-ca5a78427cec",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "ab8fdd72-8290-4f43-9b60-b754295514a7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Laurie.Keebler93@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Laurie",
                            LastName = "Keebler",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAURIE.KEEBLER93@YAHOO.COM",
                            NormalizedUserName = "LAURIE.KEEBLER93@YAHOO.COM",
                            PasswordHash = "ADQUxb2KZoK1pyUfUybqxCh5zfvltJJztHB2tkYSXQqyXH9WpDL+dFZXC9voK2hf2w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f601b533-0a7b-48cc-8d2c-a22a501ffc36",
                            TwoFactorEnabled = false,
                            UserName = "Laurie.Keebler93@yahoo.com"
                        },
                        new
                        {
                            Id = "41b7f81a-bf37-4ab8-9c73-9ffb9035d841",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5772ff5e-cb83-4e2c-871b-21b9d5a52db1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Toby80@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Toby",
                            LastName = "Schiller",
                            LockoutEnabled = false,
                            NormalizedEmail = "TOBY80@HOTMAIL.COM",
                            NormalizedUserName = "TOBY80@HOTMAIL.COM",
                            PasswordHash = "APYMo0LqjUCalSNYWjOjawL8S8l18ngVJ4n9ww2Q4vlsumWM4nfXpCVY89tqOn5eQg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fcd35411-6860-48ca-87da-dd5ddcbc148a",
                            TwoFactorEnabled = false,
                            UserName = "Toby80@hotmail.com"
                        },
                        new
                        {
                            Id = "4c87d152-45ed-40d7-950e-22536f09a01b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5ac75cfe-d8ca-4280-b963-ff515c8bde40",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Doug_Hegmann@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Doug",
                            LastName = "Hegmann",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOUG_HEGMANN@YAHOO.COM",
                            NormalizedUserName = "DOUG_HEGMANN@YAHOO.COM",
                            PasswordHash = "AOS9B94POkgfvoL99vhFfrLl9AhTBP80+pSWWgdLeRlp+camBduR0+6BR+286cHNuA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46357267-9ece-4c95-84c9-e393f206813b",
                            TwoFactorEnabled = false,
                            UserName = "Doug_Hegmann@yahoo.com"
                        },
                        new
                        {
                            Id = "35901c53-ad28-4c59-83b9-5b2fdbf9cafd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7dd3880b-d51c-4eb4-b77c-d76495bf1382",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Arturo.Schneider@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Arturo",
                            LastName = "Schneider",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARTURO.SCHNEIDER@YAHOO.COM",
                            NormalizedUserName = "ARTURO.SCHNEIDER@YAHOO.COM",
                            PasswordHash = "ABjQZP+vVerRZ/3UA+PtyuZlvlI/RfH0c3z+B+Hw+8d06k4OrIUzsqjjFG0rpFI7hg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c95e04cc-5c60-4d9c-9740-6007c1cbc4ca",
                            TwoFactorEnabled = false,
                            UserName = "Arturo.Schneider@yahoo.com"
                        },
                        new
                        {
                            Id = "cef81cda-3204-48a7-a03e-257241f7116a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1b0dd56e-8479-4854-b84b-b7190a72b579",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Roman47@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Roman",
                            LastName = "Kuhn",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROMAN47@GMAIL.COM",
                            NormalizedUserName = "ROMAN47@GMAIL.COM",
                            PasswordHash = "AG2GGeLLGvLHJ019o9//ScqNXysWVIksHAkN7GTciKoo34+NLmJx0SQG/oSx9fmwDA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3c85fa89-84a0-406a-a382-8b7fcd771f83",
                            TwoFactorEnabled = false,
                            UserName = "Roman47@gmail.com"
                        },
                        new
                        {
                            Id = "9f5aa4fa-5456-4e7b-bc0e-c17a9c96b793",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "84d6e943-e975-4f92-8aad-d05a78e6d2b1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Beatrice_Effertz39@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Beatrice",
                            LastName = "Effertz",
                            LockoutEnabled = false,
                            NormalizedEmail = "BEATRICE_EFFERTZ39@GMAIL.COM",
                            NormalizedUserName = "BEATRICE_EFFERTZ39@GMAIL.COM",
                            PasswordHash = "AL5LtBJOiVddzlpBVTpofx4fMgxXCOFmb9TIioiL+9IIKwdGoAigxVQCke8IW3+mmQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fc30f146-46cf-48be-a915-a37c0d4f7be5",
                            TwoFactorEnabled = false,
                            UserName = "Beatrice_Effertz39@gmail.com"
                        },
                        new
                        {
                            Id = "f6551f83-3117-4ccb-a881-289662cb8925",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "ab329bfc-5ecb-4279-90e1-033d43c73621",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rudy19@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rudy",
                            LastName = "Kshlerin",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUDY19@GMAIL.COM",
                            NormalizedUserName = "RUDY19@GMAIL.COM",
                            PasswordHash = "AAh8w8bmF4PXZ+x2vWxuAi1/yHVSasPPQoxq9BM7D7OjuhShfT6AU5du6W7cVbbluw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e8394112-88dc-45f4-ad41-9475cdb17f74",
                            TwoFactorEnabled = false,
                            UserName = "Rudy19@gmail.com"
                        },
                        new
                        {
                            Id = "8a26c46c-4de3-480a-b678-26c94a9530eb",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "0d4c4cf0-9c61-41bf-880f-e8dacf83f808",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bruce_Lindgren@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Bruce",
                            LastName = "Lindgren",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRUCE_LINDGREN@HOTMAIL.COM",
                            NormalizedUserName = "BRUCE_LINDGREN@HOTMAIL.COM",
                            PasswordHash = "APdAiMTnF5Lg9tnxqoJBzAh0Rg2Cd3acXy3HNDVHk7mCZ+EUeLuPnIUMUL/ABfHlnQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "26f59452-a28a-49eb-abe9-d7eb3a99b58e",
                            TwoFactorEnabled = false,
                            UserName = "Bruce_Lindgren@hotmail.com"
                        },
                        new
                        {
                            Id = "b447bffb-1bfd-40ea-9922-330fdafb4810",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "3df1f756-f0ff-4dce-a508-bcdc13a41336",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lindsay_Balistreri49@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lindsay",
                            LastName = "Balistreri",
                            LockoutEnabled = false,
                            NormalizedEmail = "LINDSAY_BALISTRERI49@HOTMAIL.COM",
                            NormalizedUserName = "LINDSAY_BALISTRERI49@HOTMAIL.COM",
                            PasswordHash = "AFacVESpEItKVxyj2DDlF6T/sweBpjeJyJ9isVyBDBeVZDVaGFrxsvPrUaHfHIoy4w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "790e071b-2ca7-490b-b43d-15147a891238",
                            TwoFactorEnabled = false,
                            UserName = "Lindsay_Balistreri49@hotmail.com"
                        },
                        new
                        {
                            Id = "1ab015d1-a1d2-4646-bda6-623fc4c371ad",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "33a28713-0c5d-49e3-9178-72f6a740ebb7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anna.Schimmel6@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anna",
                            LastName = "Schimmel",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNA.SCHIMMEL6@GMAIL.COM",
                            NormalizedUserName = "ANNA.SCHIMMEL6@GMAIL.COM",
                            PasswordHash = "AL70DTXoeLQelKuO/YNmVozmyKUM4AEaFA9QzXCLGpb0kcLsAec8gwGXfOMgolazkA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eb60741d-2eee-4af9-88ee-63a80341655f",
                            TwoFactorEnabled = false,
                            UserName = "Anna.Schimmel6@gmail.com"
                        },
                        new
                        {
                            Id = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "197578d7-6e9b-45d3-98d8-e2bcb4a48f3c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elias_Bartoletti@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Elias",
                            LastName = "Bartoletti",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELIAS_BARTOLETTI@GMAIL.COM",
                            NormalizedUserName = "ELIAS_BARTOLETTI@GMAIL.COM",
                            PasswordHash = "AO2A/5RcoTdWKRlU+LXlLWiAUmYXLeLBE+QBGAC03Hr8kOBxx8TREWsehkLe7lZwxg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9c8d3d3d-cfb6-4817-9276-b959c229bcee",
                            TwoFactorEnabled = false,
                            UserName = "Elias_Bartoletti@gmail.com"
                        },
                        new
                        {
                            Id = "59c50966-a45c-45f4-b2a5-d32564eb5e2b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f2def384-b5e7-4d9e-9dae-0f4deefe3312",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Noah.Brakus38@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Noah",
                            LastName = "Brakus",
                            LockoutEnabled = false,
                            NormalizedEmail = "NOAH.BRAKUS38@YAHOO.COM",
                            NormalizedUserName = "NOAH.BRAKUS38@YAHOO.COM",
                            PasswordHash = "AAl8f0KmZiNIja8M74SkxekfkOIrWuIKD8U9NVNuAB3u36XPWc2n62aKOfGlYUK7Vg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b1e4f3ce-f879-4260-a2d0-6110844ff452",
                            TwoFactorEnabled = false,
                            UserName = "Noah.Brakus38@yahoo.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "228 Alf Fords, Maximilliastad, Suriname",
                            Email = "Eleanor.Nikolaus@hotmail.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "c31e0739-2ed0-43e3-bbc1-ef42aebca270",
                            DepartmentID = 4,
                            Email = "Dominic92@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dominic",
                            HourlyRate = 198.032466600664180m,
                            IdentificationNumber = "2499",
                            IsActive = true,
                            LastName = "Graham",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 9, 3, 8, 17, 46, 854, DateTimeKind.Unspecified).AddTicks(7388),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "02d85a69-9e91-4c36-95fe-95a1c8909715",
                            DepartmentID = 4,
                            Email = "Guillermo_Yost38@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Guillermo",
                            HourlyRate = 196.488734118868010m,
                            IdentificationNumber = "3369",
                            IsActive = true,
                            LastName = "Yost",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 1, 3, 6, 46, 286, DateTimeKind.Unspecified).AddTicks(6042),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "811718d7-5627-48ad-9908-ed64867a3033",
                            DepartmentID = 4,
                            Email = "Kim_Goldner@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Kim",
                            HourlyRate = 190.6560727398172360m,
                            IdentificationNumber = "9641",
                            IsActive = true,
                            LastName = "Goldner",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 10, 23, 11, 4, 684, DateTimeKind.Unspecified).AddTicks(7855),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "95dc3b56-976f-4af2-b49c-adb48e1d8956",
                            DepartmentID = 4,
                            Email = "Randal.Emmerich63@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Randal",
                            HourlyRate = 194.779848323566770m,
                            IdentificationNumber = "3593",
                            IsActive = true,
                            LastName = "Emmerich",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 1, 26, 8, 18, 0, 760, DateTimeKind.Unspecified).AddTicks(7242),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "efb29df0-f1c0-45db-9f27-937ed7580fbc",
                            DepartmentID = 4,
                            Email = "Gretchen44@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Gretchen",
                            HourlyRate = 192.224036977730710m,
                            IdentificationNumber = "1555",
                            IsActive = true,
                            LastName = "Turcotte",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 7, 30, 19, 13, 20, 556, DateTimeKind.Unspecified).AddTicks(226),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "20ebd9da-6a4b-43d1-bd66-72b93ba85437",
                            DepartmentID = 4,
                            Email = "Tim.Corkery74@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Tim",
                            HourlyRate = 192.097057687163850m,
                            IdentificationNumber = "8526",
                            IsActive = true,
                            LastName = "Corkery",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2019, 7, 1, 15, 45, 37, 262, DateTimeKind.Unspecified).AddTicks(8160),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "e9bec946-e3a7-4327-8100-9137fe2c4eca",
                            DepartmentID = 4,
                            Email = "Lucia.Dibbert@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lucia",
                            HourlyRate = 192.094758731357180m,
                            IdentificationNumber = "4122",
                            IsActive = true,
                            LastName = "Dibbert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2019, 9, 24, 18, 7, 1, 362, DateTimeKind.Unspecified).AddTicks(3733),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "3e8c8626-f052-4562-8500-f02befa0570e",
                            DepartmentID = 1,
                            Email = "Clay.Schaden@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Clay",
                            HourlyRate = 195.031317898552550m,
                            IdentificationNumber = "5692",
                            IsActive = true,
                            LastName = "Schaden",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 12, 24, 4, 29, 30, 361, DateTimeKind.Unspecified).AddTicks(5244),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "ebfe94ea-5c9f-47bb-b14a-8979ebc4fe4f",
                            DepartmentID = 1,
                            Email = "Flora.Mitchell27@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Flora",
                            HourlyRate = 190.005466695877475060m,
                            IdentificationNumber = "2603",
                            IsActive = true,
                            LastName = "Mitchell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 13, 13, 4, 57, 491, DateTimeKind.Unspecified).AddTicks(7373),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "3930342e-2654-4b8d-a418-1c0be8c68cc1",
                            DepartmentID = 1,
                            Email = "Nellie.Schuster@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Nellie",
                            HourlyRate = 194.857698345956250m,
                            IdentificationNumber = "6830",
                            IsActive = true,
                            LastName = "Schuster",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 12, 16, 6, 54, 3, 229, DateTimeKind.Unspecified).AddTicks(5776),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "5b6215c2-88b0-4473-8e47-c81632d24bd4",
                            DepartmentID = 1,
                            Email = "Latoya_Reynolds@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Latoya",
                            HourlyRate = 195.025052290887130m,
                            IdentificationNumber = "3202",
                            IsActive = true,
                            LastName = "Reynolds",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 5, 17, 16, 53, 26, 783, DateTimeKind.Unspecified).AddTicks(8237),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "b7747579-485e-4313-ae21-a7ddb1d4909e",
                            DepartmentID = 1,
                            Email = "Nicolas30@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Nicolas",
                            HourlyRate = 196.460333958482520m,
                            IdentificationNumber = "7846",
                            IsActive = true,
                            LastName = "Blick",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 6, 9, 13, 42, 41, 824, DateTimeKind.Unspecified).AddTicks(6983),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "d3d7494b-451a-4d6a-a2a0-0d7c6f4f73ca",
                            DepartmentID = 1,
                            Email = "Anita60@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anita",
                            HourlyRate = 192.538813339797230m,
                            IdentificationNumber = "8384",
                            IsActive = true,
                            LastName = "Price",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 18, 20, 47, 49, 799, DateTimeKind.Unspecified).AddTicks(8281),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "a1ac7438-4802-4fb3-8070-a54ab4085bbd",
                            DepartmentID = 1,
                            Email = "Priscilla.Douglas89@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Priscilla",
                            HourlyRate = 192.512443537131160m,
                            IdentificationNumber = "6255",
                            IsActive = true,
                            LastName = "Douglas",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 12, 17, 3, 32, 17, 282, DateTimeKind.Unspecified).AddTicks(3076),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "defff5b7-f601-4960-86ae-4579a87edf2c",
                            DepartmentID = 1,
                            Email = "Melvin_Harvey@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Melvin",
                            HourlyRate = 192.053496228555910m,
                            IdentificationNumber = "4396",
                            IsActive = true,
                            LastName = "Harvey",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 4, 19, 12, 13, 2, 883, DateTimeKind.Unspecified).AddTicks(8740),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "93f2687b-d100-40e5-86d2-405cf51f6f03",
                            DepartmentID = 1,
                            Email = "Joe_Gutkowski@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Joe",
                            HourlyRate = 191.505005136833060m,
                            IdentificationNumber = "9832",
                            IsActive = true,
                            LastName = "Gutkowski",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 7, 14, 18, 57, 43, 95, DateTimeKind.Unspecified).AddTicks(5693),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "b9d511dd-036d-4329-b74c-917bf4b77d44",
                            DepartmentID = 1,
                            Email = "Alex0@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Alex",
                            HourlyRate = 196.020840176390880m,
                            IdentificationNumber = "2795",
                            IsActive = true,
                            LastName = "Lebsack",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 5, 19, 7, 19, 48, 75, DateTimeKind.Unspecified).AddTicks(553),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "44ae0eee-fe5e-4c13-80dc-f8721bc8d332",
                            DepartmentID = 1,
                            Email = "Alice87@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alice",
                            HourlyRate = 198.812662856100440m,
                            IdentificationNumber = "7442",
                            IsActive = true,
                            LastName = "McCullough",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 9, 5, 1, 53, 10, 947, DateTimeKind.Unspecified).AddTicks(2897),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "756400a3-f2e3-407c-84b7-2b610e457813",
                            DepartmentID = 3,
                            Email = "Harriet_Bosco@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Harriet",
                            HourlyRate = 193.582017455986710m,
                            IdentificationNumber = "3107",
                            IsActive = true,
                            LastName = "Bosco",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 12, 0, 40, 53, 169, DateTimeKind.Unspecified).AddTicks(8421),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "623ddee6-78bb-4e98-bc14-e71d2b29f85c",
                            DepartmentID = 3,
                            Email = "Johnnie32@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Johnnie",
                            HourlyRate = 194.422458202774850m,
                            IdentificationNumber = "2765",
                            IsActive = true,
                            LastName = "Bergnaum",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 3, 3, 41, 43, 872, DateTimeKind.Unspecified).AddTicks(745),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "1030ff91-7a78-4f13-a1ec-f627fa32b569",
                            DepartmentID = 3,
                            Email = "Bobbie.Torp34@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Bobbie",
                            HourlyRate = 193.583972516275930m,
                            IdentificationNumber = "6430",
                            IsActive = true,
                            LastName = "Torp",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 6, 9, 0, 19, 4, 29, DateTimeKind.Unspecified).AddTicks(4449),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "285151fd-90d5-4ffe-a9c8-2acedd3582d9",
                            DepartmentID = 3,
                            Email = "Cora.Pouros13@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Cora",
                            HourlyRate = 196.858992896442760m,
                            IdentificationNumber = "9483",
                            IsActive = true,
                            LastName = "Pouros",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 10, 11, 19, 14, 19, 803, DateTimeKind.Unspecified).AddTicks(5419),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "b7610c14-057c-40de-a184-f5d64c9a9d7f",
                            DepartmentID = 3,
                            Email = "Eddie_Altenwerth@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Eddie",
                            HourlyRate = 191.62514270824620m,
                            IdentificationNumber = "2552",
                            IsActive = true,
                            LastName = "Altenwerth",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 16, 7, 29, 11, 821, DateTimeKind.Unspecified).AddTicks(1943),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "fc827145-248d-4889-9265-958ae75058f2",
                            DepartmentID = 3,
                            Email = "Sidney.Corkery@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sidney",
                            HourlyRate = 192.053674530262910m,
                            IdentificationNumber = "3614",
                            IsActive = true,
                            LastName = "Corkery",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 19, 2, 22, 32, 990, DateTimeKind.Unspecified).AddTicks(5014),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "1a8976a5-3cc2-4fba-9c72-cedb8e8eb213",
                            DepartmentID = 3,
                            Email = "Yvette_Hoeger@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Yvette",
                            HourlyRate = 197.968127391286250m,
                            IdentificationNumber = "5558",
                            IsActive = true,
                            LastName = "Hoeger",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 8, 31, 22, 11, 4, 273, DateTimeKind.Unspecified).AddTicks(5714),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "e000de25-6b0a-4957-9aa5-ef6b66d8484d",
                            DepartmentID = 3,
                            Email = "Erma_Bailey17@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Erma",
                            HourlyRate = 193.597491664624540m,
                            IdentificationNumber = "8789",
                            IsActive = true,
                            LastName = "Bailey",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 21, 20, 20, 35, 328, DateTimeKind.Unspecified).AddTicks(282),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "cdc2ec66-eb08-4faf-b83c-7a51d59ad92c",
                            DepartmentID = 3,
                            Email = "Sally.Rosenbaum@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sally",
                            HourlyRate = 199.346701232412220m,
                            IdentificationNumber = "7612",
                            IsActive = true,
                            LastName = "Rosenbaum",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 3, 9, 34, 40, 687, DateTimeKind.Unspecified).AddTicks(2107),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "6786ba50-ce6f-4fa2-8994-5ff415dbefa1",
                            DepartmentID = 3,
                            Email = "Samuel_Collier43@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Samuel",
                            HourlyRate = 192.309013373362370m,
                            IdentificationNumber = "9335",
                            IsActive = true,
                            LastName = "Collier",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 6, 8, 11, 17, 3, 221, DateTimeKind.Unspecified).AddTicks(9660),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "74618ca3-b63e-4bdc-bb1e-69811183bd00",
                            DepartmentID = 3,
                            Email = "Christian.Prosacco@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Christian",
                            HourlyRate = 198.743375846530950m,
                            IdentificationNumber = "8910",
                            IsActive = true,
                            LastName = "Prosacco",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 10, 21, 18, 26, 43, 78, DateTimeKind.Unspecified).AddTicks(2023),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "71ec6d73-c677-4a08-9b14-d25230286c38",
                            DepartmentID = 3,
                            Email = "Nicole_Luettgen@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Nicole",
                            HourlyRate = 197.638414892199640m,
                            IdentificationNumber = "2294",
                            IsActive = true,
                            LastName = "Luettgen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 11, 28, 18, 12, 24, 473, DateTimeKind.Unspecified).AddTicks(3645),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "6a6257de-0560-48fb-8c63-f9db4327e1a1",
                            DepartmentID = 3,
                            Email = "Tricia.Hickle67@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Tricia",
                            HourlyRate = 197.179552860175980m,
                            IdentificationNumber = "6606",
                            IsActive = true,
                            LastName = "Hickle",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 4, 19, 8, 1, 42, 719, DateTimeKind.Unspecified).AddTicks(2282),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "c06dc470-ada2-4a62-a816-e56ce3482b30",
                            DepartmentID = 3,
                            Email = "Inez_Jones@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Inez",
                            HourlyRate = 198.888778564934050m,
                            IdentificationNumber = "1875",
                            IsActive = true,
                            LastName = "Jones",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 12, 26, 1, 36, 25, 757, DateTimeKind.Unspecified).AddTicks(4430),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "194e2176-f23b-4d87-8a6d-603575f6da7d",
                            DepartmentID = 3,
                            Email = "Charles47@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Charles",
                            HourlyRate = 190.4026090448734390m,
                            IdentificationNumber = "4232",
                            IsActive = true,
                            LastName = "Harris",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 10, 24, 4, 22, 50, 850, DateTimeKind.Unspecified).AddTicks(560),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "17e92d4d-8d29-457f-80f3-1ff18959998b",
                            DepartmentID = 3,
                            Email = "Leslie18@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Leslie",
                            HourlyRate = 191.154976753124490m,
                            IdentificationNumber = "3558",
                            IsActive = true,
                            LastName = "Abshire",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 13, 16, 58, 57, 871, DateTimeKind.Unspecified).AddTicks(1436),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "bbcedef2-06b5-4ddf-b609-ca5a78427cec",
                            DepartmentID = 3,
                            Email = "Laurie.Keebler93@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Laurie",
                            HourlyRate = 196.73258215502490m,
                            IdentificationNumber = "6725",
                            IsActive = true,
                            LastName = "Keebler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 7, 25, 5, 24, 1, 502, DateTimeKind.Unspecified).AddTicks(3646),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "41b7f81a-bf37-4ab8-9c73-9ffb9035d841",
                            DepartmentID = 3,
                            Email = "Toby80@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Toby",
                            HourlyRate = 195.703555948894260m,
                            IdentificationNumber = "4635",
                            IsActive = true,
                            LastName = "Schiller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 29, 19, 21, 44, 602, DateTimeKind.Unspecified).AddTicks(345),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "4c87d152-45ed-40d7-950e-22536f09a01b",
                            DepartmentID = 3,
                            Email = "Doug_Hegmann@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Doug",
                            HourlyRate = 195.119428474046020m,
                            IdentificationNumber = "1457",
                            IsActive = true,
                            LastName = "Hegmann",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 4, 14, 1, 45, 46, 916, DateTimeKind.Unspecified).AddTicks(4753),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "35901c53-ad28-4c59-83b9-5b2fdbf9cafd",
                            DepartmentID = 3,
                            Email = "Arturo.Schneider@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Arturo",
                            HourlyRate = 195.310121879591660m,
                            IdentificationNumber = "3752",
                            IsActive = true,
                            LastName = "Schneider",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 4, 2, 11, 26, 33, 324, DateTimeKind.Unspecified).AddTicks(4046),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "cef81cda-3204-48a7-a03e-257241f7116a",
                            DepartmentID = 3,
                            Email = "Roman47@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Roman",
                            HourlyRate = 193.028567220563330m,
                            IdentificationNumber = "1889",
                            IsActive = true,
                            LastName = "Kuhn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 8, 26, 2, 47, 57, 366, DateTimeKind.Unspecified).AddTicks(9975),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "9f5aa4fa-5456-4e7b-bc0e-c17a9c96b793",
                            DepartmentID = 3,
                            Email = "Beatrice_Effertz39@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Beatrice",
                            HourlyRate = 199.612687881855620m,
                            IdentificationNumber = "3893",
                            IsActive = true,
                            LastName = "Effertz",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 5, 4, 14, 23, 53, 556, DateTimeKind.Unspecified).AddTicks(1733),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "f6551f83-3117-4ccb-a881-289662cb8925",
                            DepartmentID = 3,
                            Email = "Rudy19@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rudy",
                            HourlyRate = 195.150397087051720m,
                            IdentificationNumber = "5790",
                            IsActive = true,
                            LastName = "Kshlerin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 9, 16, 8, 59, 47, 30, DateTimeKind.Unspecified).AddTicks(5264),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "8a26c46c-4de3-480a-b678-26c94a9530eb",
                            DepartmentID = 3,
                            Email = "Bruce_Lindgren@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Bruce",
                            HourlyRate = 199.067978295063590m,
                            IdentificationNumber = "7661",
                            IsActive = true,
                            LastName = "Lindgren",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 1, 1, 9, 2, 42, 912, DateTimeKind.Unspecified).AddTicks(5112),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "b447bffb-1bfd-40ea-9922-330fdafb4810",
                            DepartmentID = 1,
                            Email = "Lindsay_Balistreri49@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lindsay",
                            HourlyRate = 194.470321202869680m,
                            IdentificationNumber = "3948",
                            IsActive = true,
                            LastName = "Balistreri",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 16, 15, 17, 33, 919, DateTimeKind.Unspecified).AddTicks(5163),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "1ab015d1-a1d2-4646-bda6-623fc4c371ad",
                            DepartmentID = 2,
                            Email = "Anna.Schimmel6@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anna",
                            HourlyRate = 192.803513232061410m,
                            IdentificationNumber = "5222",
                            IsActive = true,
                            LastName = "Schimmel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 26, 15, 34, 0, 615, DateTimeKind.Unspecified).AddTicks(5680),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            DepartmentID = 5,
                            Email = "Elias_Bartoletti@gmail.com",
                            EmployeeStatus = 0,
                            FirstName = "Elias",
                            HourlyRate = 192.330899365400380m,
                            IdentificationNumber = "4788",
                            IsActive = true,
                            LastName = "Bartoletti",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 6, 16, 14, 23, 57, 366, DateTimeKind.Unspecified).AddTicks(386),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "59c50966-a45c-45f4-b2a5-d32564eb5e2b",
                            DepartmentID = 6,
                            Email = "Noah.Brakus38@yahoo.com",
                            EmployeeStatus = 1,
                            FirstName = "Noah",
                            HourlyRate = 192.53723741627170m,
                            IdentificationNumber = "8669",
                            IsActive = true,
                            LastName = "Brakus",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 8, 12, 10, 18, 45, 981, DateTimeKind.Unspecified).AddTicks(476),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SettingID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("SettingID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            SettingID = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.HasIndex("ContactID");

                    b.HasIndex("HomePageID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            ContactID = 1,
                            HomePageID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "d5118e40-06c3-4aee-8acb-6d88f9f3eaf8",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "68888675-74c1-4c2b-a8b1-beb8a97bf402",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "d0462a57-7d56-4c60-a25d-ec4d9bf98c2a",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "981003db-3b18-4d8d-bdfc-5df9d307e5b5",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "1456bd85-236c-4753-864f-3400a29da9ea",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "b809c348-01ba-41d1-9288-38fc821dffcc",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "bbd93b27-cfbe-4070-bcf0-a8d7f9a41fa5",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "6694b8b5-7263-4258-8d4d-88875cd3513c",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "49378e69-e104-4565-9dcc-231843110692",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c8d2294-7919-49dd-bf66-44d5f193879f",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "c31e0739-2ed0-43e3-bbc1-ef42aebca270",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "c31e0739-2ed0-43e3-bbc1-ef42aebca270",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "02d85a69-9e91-4c36-95fe-95a1c8909715",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "02d85a69-9e91-4c36-95fe-95a1c8909715",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "811718d7-5627-48ad-9908-ed64867a3033",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "811718d7-5627-48ad-9908-ed64867a3033",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "95dc3b56-976f-4af2-b49c-adb48e1d8956",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "95dc3b56-976f-4af2-b49c-adb48e1d8956",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "efb29df0-f1c0-45db-9f27-937ed7580fbc",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "efb29df0-f1c0-45db-9f27-937ed7580fbc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "20ebd9da-6a4b-43d1-bd66-72b93ba85437",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "20ebd9da-6a4b-43d1-bd66-72b93ba85437",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e9bec946-e3a7-4327-8100-9137fe2c4eca",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "e9bec946-e3a7-4327-8100-9137fe2c4eca",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3e8c8626-f052-4562-8500-f02befa0570e",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3e8c8626-f052-4562-8500-f02befa0570e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ebfe94ea-5c9f-47bb-b14a-8979ebc4fe4f",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "ebfe94ea-5c9f-47bb-b14a-8979ebc4fe4f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3930342e-2654-4b8d-a418-1c0be8c68cc1",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3930342e-2654-4b8d-a418-1c0be8c68cc1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5b6215c2-88b0-4473-8e47-c81632d24bd4",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "5b6215c2-88b0-4473-8e47-c81632d24bd4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b7747579-485e-4313-ae21-a7ddb1d4909e",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b7747579-485e-4313-ae21-a7ddb1d4909e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d3d7494b-451a-4d6a-a2a0-0d7c6f4f73ca",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "d3d7494b-451a-4d6a-a2a0-0d7c6f4f73ca",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a1ac7438-4802-4fb3-8070-a54ab4085bbd",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "a1ac7438-4802-4fb3-8070-a54ab4085bbd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "defff5b7-f601-4960-86ae-4579a87edf2c",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "defff5b7-f601-4960-86ae-4579a87edf2c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "93f2687b-d100-40e5-86d2-405cf51f6f03",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "93f2687b-d100-40e5-86d2-405cf51f6f03",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b9d511dd-036d-4329-b74c-917bf4b77d44",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b9d511dd-036d-4329-b74c-917bf4b77d44",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "44ae0eee-fe5e-4c13-80dc-f8721bc8d332",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "44ae0eee-fe5e-4c13-80dc-f8721bc8d332",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "756400a3-f2e3-407c-84b7-2b610e457813",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "756400a3-f2e3-407c-84b7-2b610e457813",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "623ddee6-78bb-4e98-bc14-e71d2b29f85c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "623ddee6-78bb-4e98-bc14-e71d2b29f85c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1030ff91-7a78-4f13-a1ec-f627fa32b569",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "1030ff91-7a78-4f13-a1ec-f627fa32b569",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "285151fd-90d5-4ffe-a9c8-2acedd3582d9",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "285151fd-90d5-4ffe-a9c8-2acedd3582d9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b7610c14-057c-40de-a184-f5d64c9a9d7f",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b7610c14-057c-40de-a184-f5d64c9a9d7f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fc827145-248d-4889-9265-958ae75058f2",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "fc827145-248d-4889-9265-958ae75058f2",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1a8976a5-3cc2-4fba-9c72-cedb8e8eb213",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "1a8976a5-3cc2-4fba-9c72-cedb8e8eb213",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e000de25-6b0a-4957-9aa5-ef6b66d8484d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e000de25-6b0a-4957-9aa5-ef6b66d8484d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "cdc2ec66-eb08-4faf-b83c-7a51d59ad92c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "cdc2ec66-eb08-4faf-b83c-7a51d59ad92c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6786ba50-ce6f-4fa2-8994-5ff415dbefa1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6786ba50-ce6f-4fa2-8994-5ff415dbefa1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "74618ca3-b63e-4bdc-bb1e-69811183bd00",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "74618ca3-b63e-4bdc-bb1e-69811183bd00",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "71ec6d73-c677-4a08-9b14-d25230286c38",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "71ec6d73-c677-4a08-9b14-d25230286c38",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6a6257de-0560-48fb-8c63-f9db4327e1a1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6a6257de-0560-48fb-8c63-f9db4327e1a1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c06dc470-ada2-4a62-a816-e56ce3482b30",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c06dc470-ada2-4a62-a816-e56ce3482b30",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "194e2176-f23b-4d87-8a6d-603575f6da7d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "194e2176-f23b-4d87-8a6d-603575f6da7d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "17e92d4d-8d29-457f-80f3-1ff18959998b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "17e92d4d-8d29-457f-80f3-1ff18959998b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bbcedef2-06b5-4ddf-b609-ca5a78427cec",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bbcedef2-06b5-4ddf-b609-ca5a78427cec",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "41b7f81a-bf37-4ab8-9c73-9ffb9035d841",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "41b7f81a-bf37-4ab8-9c73-9ffb9035d841",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4c87d152-45ed-40d7-950e-22536f09a01b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4c87d152-45ed-40d7-950e-22536f09a01b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "35901c53-ad28-4c59-83b9-5b2fdbf9cafd",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "35901c53-ad28-4c59-83b9-5b2fdbf9cafd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "cef81cda-3204-48a7-a03e-257241f7116a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "cef81cda-3204-48a7-a03e-257241f7116a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9f5aa4fa-5456-4e7b-bc0e-c17a9c96b793",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9f5aa4fa-5456-4e7b-bc0e-c17a9c96b793",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f6551f83-3117-4ccb-a881-289662cb8925",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f6551f83-3117-4ccb-a881-289662cb8925",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8a26c46c-4de3-480a-b678-26c94a9530eb",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8a26c46c-4de3-480a-b678-26c94a9530eb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b447bffb-1bfd-40ea-9922-330fdafb4810",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b447bffb-1bfd-40ea-9922-330fdafb4810",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1ab015d1-a1d2-4646-bda6-623fc4c371ad",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "1ab015d1-a1d2-4646-bda6-623fc4c371ad",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b0a256fc-164f-4346-9f4a-3d2fa2d69d98",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "59c50966-a45c-45f4-b2a5-d32564eb5e2b",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "59c50966-a45c-45f4-b2a5-d32564eb5e2b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "59c50966-a45c-45f4-b2a5-d32564eb5e2b",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.HasOne("Entities.Concrete.Setting", "Setting")
                        .WithMany("HotelServices")
                        .HasForeignKey("SettingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Settings")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Contact", "Contact")
                        .WithMany("Settings")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("Settings")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");

                    b.Navigation("Contact");

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Navigation("HotelServices");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
