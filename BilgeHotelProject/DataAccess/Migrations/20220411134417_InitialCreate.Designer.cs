// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220411134417_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "35262fa6-4cf1-4cef-8072-0986410a4fd4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b21f37fb-a75f-4e1a-8c90-e137fff3bba2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "ALtyxuDFr22AXrgZxxoN6kdzXB+6XK+w1yYsD7tvwUa0/45CICsYM3vt0KHn7tx6eA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a31bdad3-e82d-446c-a244-3ace1b8a4878",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "f44b17ce-911d-46fb-98ed-ba2cda983d47",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "11064f73-2097-4ddb-9967-35b7b678d467",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vivian_Sanford72@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Vivian",
                            LastName = "Sanford",
                            LockoutEnabled = false,
                            NormalizedEmail = "VIVIAN_SANFORD72@HOTMAIL.COM",
                            NormalizedUserName = "VIVIAN_SANFORD72@HOTMAIL.COM",
                            PasswordHash = "AJjWQKaCejvjJilz1jKe97lRstilnkewZzfRQ9AUPTv1pOKMzjiRb9O0A8+flckbXA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4cbbb83b-9f0a-451d-9683-c3f179a614bd",
                            TwoFactorEnabled = false,
                            UserName = "Vivian_Sanford72@hotmail.com"
                        },
                        new
                        {
                            Id = "5d61c37c-7881-4358-9c86-a1cd87db9548",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02af846b-105a-4761-ab2e-edeb63e2bd6e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Neal_Hahn@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Neal",
                            LastName = "Hahn",
                            LockoutEnabled = false,
                            NormalizedEmail = "NEAL_HAHN@HOTMAIL.COM",
                            NormalizedUserName = "NEAL_HAHN@HOTMAIL.COM",
                            PasswordHash = "AGZavL1XnEY+1je8ZTo8w/dlMq5Tm0add7FqD58wyKTUb5XQocEgEPM4UJ7vJJYHjQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "604f282e-7ab5-44da-8bb0-0f7386139c2f",
                            TwoFactorEnabled = false,
                            UserName = "Neal_Hahn@hotmail.com"
                        },
                        new
                        {
                            Id = "a7b5c014-01b6-44f1-bfe2-323b07e40ac0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4e74613a-443a-47fe-969e-c80b87ef053d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jermaine86@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jermaine",
                            LastName = "Kshlerin",
                            LockoutEnabled = false,
                            NormalizedEmail = "JERMAINE86@HOTMAIL.COM",
                            NormalizedUserName = "JERMAINE86@HOTMAIL.COM",
                            PasswordHash = "AP5qFcN3cEx0sjfZhmQIFhDlL6oxT+oP3QKJkiDZ9wDrNYNmrVF+BnDaIlwGjpqeJw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "77a66070-ac77-4cd3-a24d-64fd35e16ede",
                            TwoFactorEnabled = false,
                            UserName = "Jermaine86@hotmail.com"
                        },
                        new
                        {
                            Id = "92e62870-3a1d-4949-9c0e-f6f432a8d928",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bc9dc0c2-80e6-4f75-b69f-1b27528a50a8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elmer23@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Elmer",
                            LastName = "Lemke",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELMER23@HOTMAIL.COM",
                            NormalizedUserName = "ELMER23@HOTMAIL.COM",
                            PasswordHash = "ADkKS32sG3E3WRXsuj0lm487PoUHk3jcVjWjVi88lfEPZ/ESCklQLN3S2JSGp05Djw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "48812b30-d26e-46ed-b637-d0cc1c44af27",
                            TwoFactorEnabled = false,
                            UserName = "Elmer23@hotmail.com"
                        },
                        new
                        {
                            Id = "65cf912e-f4e8-490d-8033-ebcf7fe3b9b8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "24e04fb2-9dc6-47ba-ac60-63fd888498d2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Roy18@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Roy",
                            LastName = "Wiza",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROY18@YAHOO.COM",
                            NormalizedUserName = "ROY18@YAHOO.COM",
                            PasswordHash = "AIEdK6qeYnEPvo2lCExhfiFPoofJd3bdyHE3e8dew4RJrN0wfqMFkK6AhgnwuFHywA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bfc4ab9c-60de-4bdc-b6da-793e59c29c2e",
                            TwoFactorEnabled = false,
                            UserName = "Roy18@yahoo.com"
                        },
                        new
                        {
                            Id = "f79cf1a4-36f9-4b87-bbde-304362fa7738",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e88698f4-4e44-42f7-ace2-716cd6f40424",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marco_Fritsch54@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Marco",
                            LastName = "Fritsch",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARCO_FRITSCH54@YAHOO.COM",
                            NormalizedUserName = "MARCO_FRITSCH54@YAHOO.COM",
                            PasswordHash = "ALVWSjUYBzkj0oGgNNdgRivid3Ila+ljoIlzI10LDVzzfciqtak6nIJsvlmAOaF78g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "be7117d9-7386-451b-8858-bb709bdb4916",
                            TwoFactorEnabled = false,
                            UserName = "Marco_Fritsch54@yahoo.com"
                        },
                        new
                        {
                            Id = "59f9799e-9a61-45c0-bd61-98ca91abf885",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3a261967-cdd5-4df0-ab7b-163f070f332d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Seth4@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Seth",
                            LastName = "Berge",
                            LockoutEnabled = false,
                            NormalizedEmail = "SETH4@HOTMAIL.COM",
                            NormalizedUserName = "SETH4@HOTMAIL.COM",
                            PasswordHash = "AKD6LzqQVINIEZBn9UWSHDpzDdJ8qvocI+UUlmmPuiq+F8946b5I21R7KhdW8qLWgw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "75eff5fd-0372-45d5-b004-f210afd0fb51",
                            TwoFactorEnabled = false,
                            UserName = "Seth4@hotmail.com"
                        },
                        new
                        {
                            Id = "a9b8d805-6d2c-451a-a86a-5266e621fe70",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0afab4d7-bffd-49b0-b218-98c82180d213",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Faith_Blick21@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Faith",
                            LastName = "Blick",
                            LockoutEnabled = false,
                            NormalizedEmail = "FAITH_BLICK21@GMAIL.COM",
                            NormalizedUserName = "FAITH_BLICK21@GMAIL.COM",
                            PasswordHash = "AG1XZS6sF3zuqU9sJ/NFL+RIdQttuGm4A1XXRo9N71MRg2zkEZylNkRVYNq4dHUlwA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d99aa0c6-d934-4212-b43d-076493235392",
                            TwoFactorEnabled = false,
                            UserName = "Faith_Blick21@gmail.com"
                        },
                        new
                        {
                            Id = "9c6165a6-08fc-46f8-9069-6c02b968c53c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "499d1fd9-fdf4-44fb-9d52-f5ef14f8c9b5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Woodrow74@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Woodrow",
                            LastName = "Mueller",
                            LockoutEnabled = false,
                            NormalizedEmail = "WOODROW74@YAHOO.COM",
                            NormalizedUserName = "WOODROW74@YAHOO.COM",
                            PasswordHash = "ANA63JYrfRbL2ee4vFdsf/cIo/tMkBq7D71ybunbikWq6ds6MvtsOICSM3MKrkULhQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f97dcf3-6682-49f4-9c9a-601e7675a86f",
                            TwoFactorEnabled = false,
                            UserName = "Woodrow74@yahoo.com"
                        },
                        new
                        {
                            Id = "5075f0bf-8284-4855-924d-47d6133d24ab",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2dbf1975-051a-46f1-a7ab-36c8797742b0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Francis38@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Francis",
                            LastName = "Johns",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRANCIS38@HOTMAIL.COM",
                            NormalizedUserName = "FRANCIS38@HOTMAIL.COM",
                            PasswordHash = "ANpqFnWwQWpdNacdZ3CKA9Nh59iFoAbEZGrI0kawe37UsecyymWUlIVUTSGWPdTSrw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e468488-ad04-4671-b6bf-98a899961434",
                            TwoFactorEnabled = false,
                            UserName = "Francis38@hotmail.com"
                        },
                        new
                        {
                            Id = "6af20cca-5467-4db4-96b1-219562213659",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a458e41f-f7d5-4153-8918-467441631d59",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Debbie71@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Debbie",
                            LastName = "Ebert",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEBBIE71@HOTMAIL.COM",
                            NormalizedUserName = "DEBBIE71@HOTMAIL.COM",
                            PasswordHash = "AO9BrdQMXptw2Hn49Xp7r1d+Ik4P27txSnZKyWt32gZykyUfIpzoZwhzaOajzVeSJQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78209773-744c-45d7-b094-678f1a2b1972",
                            TwoFactorEnabled = false,
                            UserName = "Debbie71@hotmail.com"
                        },
                        new
                        {
                            Id = "8ab094f0-12e6-44a0-9795-f13c08affb4b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "39678de8-a276-4795-b7e2-2fa0f67f137e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Beth58@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Beth",
                            LastName = "Beier",
                            LockoutEnabled = false,
                            NormalizedEmail = "BETH58@HOTMAIL.COM",
                            NormalizedUserName = "BETH58@HOTMAIL.COM",
                            PasswordHash = "AFS5exlFW3OBUFZtpXjHTC85xiJa3Nn3GAMMw65ZMmge7eEA+3AF+oYyh22p44Mm2g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "89de5f9a-fe4d-4b50-a0d6-5a8ebb2ced53",
                            TwoFactorEnabled = false,
                            UserName = "Beth58@hotmail.com"
                        },
                        new
                        {
                            Id = "79ea9981-7cb7-4b37-89b2-ca454342d491",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be7a3e43-05c6-4126-893d-9f34b6ffd40e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Claude.Hammes50@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Claude",
                            LastName = "Hammes",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAUDE.HAMMES50@GMAIL.COM",
                            NormalizedUserName = "CLAUDE.HAMMES50@GMAIL.COM",
                            PasswordHash = "AIv3NDRS01MJUp91bnQZ/vXJCEf50duLGCyHqLg/94B18EgOsgRRJVxZZ7eGX9cDTw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8ef7a0a1-db53-4399-8250-d28a0ce0189d",
                            TwoFactorEnabled = false,
                            UserName = "Claude.Hammes50@gmail.com"
                        },
                        new
                        {
                            Id = "320ec9ee-9931-4975-b21e-9b905b95187f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "13ebdb4d-bc25-4173-933c-07b5700e7057",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Gary_Robel@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gary",
                            LastName = "Robel",
                            LockoutEnabled = false,
                            NormalizedEmail = "GARY_ROBEL@HOTMAIL.COM",
                            NormalizedUserName = "GARY_ROBEL@HOTMAIL.COM",
                            PasswordHash = "AEtnN/QS5Y2vfYWvV/jDHJNyepAKg0oVyCUMVQn7QeS4y1BnF57XCm1ZMuLfydR6Og==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3b51e30-cac1-4a19-b915-1bcc04aabc56",
                            TwoFactorEnabled = false,
                            UserName = "Gary_Robel@hotmail.com"
                        },
                        new
                        {
                            Id = "05f77b7a-a11e-42e9-bda7-8b2ac3181fa2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a34e8767-85d5-477e-acf1-5a6b9c99d479",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anna_Hodkiewicz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Anna",
                            LastName = "Hodkiewicz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNA_HODKIEWICZ@GMAIL.COM",
                            NormalizedUserName = "ANNA_HODKIEWICZ@GMAIL.COM",
                            PasswordHash = "AFAh24fvu59VegTtHil3MZfm/HqP4bhCqkZYqPIJr+E5xltIeHgpJrwT/LKWJR2Pxw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ba5e2d75-2461-4faf-b8e3-b7b7673c1874",
                            TwoFactorEnabled = false,
                            UserName = "Anna_Hodkiewicz@gmail.com"
                        },
                        new
                        {
                            Id = "1f6ad392-f210-4447-8c12-49bddee591d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa38abb8-2d14-4cc9-ae0a-a7e57c0d503c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dominick41@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dominick",
                            LastName = "Monahan",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOMINICK41@GMAIL.COM",
                            NormalizedUserName = "DOMINICK41@GMAIL.COM",
                            PasswordHash = "AI3v5tsB0uaBFxW4DdZQd/bkMQE14ilpXbe5SypKyIXl8TU1YH2axK+HOkt8/Rul/g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c3d5ca05-3abd-410d-95c6-5e303d20e383",
                            TwoFactorEnabled = false,
                            UserName = "Dominick41@gmail.com"
                        },
                        new
                        {
                            Id = "7060f4d0-8343-4536-b84d-dfd69f2a3975",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2e7d7e1f-5c60-4d5f-b8b2-fd3fb1effc5d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rex_Kutch17@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rex",
                            LastName = "Kutch",
                            LockoutEnabled = false,
                            NormalizedEmail = "REX_KUTCH17@HOTMAIL.COM",
                            NormalizedUserName = "REX_KUTCH17@HOTMAIL.COM",
                            PasswordHash = "AKrE2APjeGzsCxTsVipLOEl4pXA2y6kqfKWMDT6ttZIP02bS1hH31ck8IJeX4Jq+zg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "209f94ca-75f4-45d3-8064-18405d0fb4de",
                            TwoFactorEnabled = false,
                            UserName = "Rex_Kutch17@hotmail.com"
                        },
                        new
                        {
                            Id = "82964b35-5273-4d7d-9e4c-28c57f6bff23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9d821bb1-cd81-4e41-b499-c6107ed299c7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mack.Erdman@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mack",
                            LastName = "Erdman",
                            LockoutEnabled = false,
                            NormalizedEmail = "MACK.ERDMAN@GMAIL.COM",
                            NormalizedUserName = "MACK.ERDMAN@GMAIL.COM",
                            PasswordHash = "AN4tZa4MJE67VS5q1GW9dQk5IrddPNRgebq14pzEv2bFMVWS4KFry9XukYPEfoyVMQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9a7c7340-e714-43c1-9a4c-274e6bc92d3c",
                            TwoFactorEnabled = false,
                            UserName = "Mack.Erdman@gmail.com"
                        },
                        new
                        {
                            Id = "68a1683a-7aa0-4d63-9797-4adbca944655",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "49783e9f-7542-4794-8818-1f77936bc68b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wilbert.Greenfelder86@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wilbert",
                            LastName = "Greenfelder",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILBERT.GREENFELDER86@HOTMAIL.COM",
                            NormalizedUserName = "WILBERT.GREENFELDER86@HOTMAIL.COM",
                            PasswordHash = "AP4TA53y0FrLB2wEBRJVmhUEZohyxyatCfe+1U1vX6tP2zThm0Qs+ku795wHg99DvQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b3eba896-bd1c-4c51-9aeb-25a511d504c9",
                            TwoFactorEnabled = false,
                            UserName = "Wilbert.Greenfelder86@hotmail.com"
                        },
                        new
                        {
                            Id = "bb78b083-967a-48da-8140-407ef2d6b3bf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f2af2c3-bb9f-4cd0-a24c-9cb175b48085",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Deanna_Stokes@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Deanna",
                            LastName = "Stokes",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEANNA_STOKES@HOTMAIL.COM",
                            NormalizedUserName = "DEANNA_STOKES@HOTMAIL.COM",
                            PasswordHash = "AF3DiPlVdpDigT6Wl2zJNW8aTmfcPuYbkHXwRXMVB8HP90VWZ0Guhw3brh9wUYCLSg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "23943d0e-2d08-43ff-874b-fc8c8d695235",
                            TwoFactorEnabled = false,
                            UserName = "Deanna_Stokes@hotmail.com"
                        },
                        new
                        {
                            Id = "d5a5cce1-b853-434e-a66e-3220fe1d4caf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71a91e3c-0608-46f1-b08f-4be61837a091",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nicolas_Hane@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Nicolas",
                            LastName = "Hane",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICOLAS_HANE@YAHOO.COM",
                            NormalizedUserName = "NICOLAS_HANE@YAHOO.COM",
                            PasswordHash = "AAa76xqK6DB3x5V0Ht4GktqHTceK7qemnIQDZILhXEUoY/wAApSflONqKvImXIcezA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a79be5ee-08fe-40f4-88e7-dc66e2cb4f40",
                            TwoFactorEnabled = false,
                            UserName = "Nicolas_Hane@yahoo.com"
                        },
                        new
                        {
                            Id = "5223700c-a281-47f7-84ea-b64e42057102",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1aa0d345-7d37-4e13-93c8-2191c59e50ae",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Isabel.Goldner@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Isabel",
                            LastName = "Goldner",
                            LockoutEnabled = false,
                            NormalizedEmail = "ISABEL.GOLDNER@GMAIL.COM",
                            NormalizedUserName = "ISABEL.GOLDNER@GMAIL.COM",
                            PasswordHash = "AJLkvDXC8pjQf/C2WNLbciF3dHPDorXqa9FQChUBdHpqiqINaqkY53dJKN5N1/OdhQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "81ba62eb-767e-40c9-bde1-bf728683120d",
                            TwoFactorEnabled = false,
                            UserName = "Isabel.Goldner@gmail.com"
                        },
                        new
                        {
                            Id = "3e369eee-0b45-4164-8f24-58c61449f59a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd96cf23-1ff0-472b-b4c0-4bce767396d0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wm.Spencer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wm",
                            LastName = "Spencer",
                            LockoutEnabled = false,
                            NormalizedEmail = "WM.SPENCER@HOTMAIL.COM",
                            NormalizedUserName = "WM.SPENCER@HOTMAIL.COM",
                            PasswordHash = "AEv4m6UIRxDtS3ExBJ3W2n06jCa6cA3NA8MQ6q9T6tbU4YrQyiTVVLV8dEBeAhxyqQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4fb5f237-73ac-4a17-a85a-be1e5cedbeff",
                            TwoFactorEnabled = false,
                            UserName = "Wm.Spencer@hotmail.com"
                        },
                        new
                        {
                            Id = "fae1ebb2-1966-467a-8286-4b3dead27151",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84b627e-f0bc-4525-aca9-596dbda62a32",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Al.Lemke52@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Al",
                            LastName = "Lemke",
                            LockoutEnabled = false,
                            NormalizedEmail = "AL.LEMKE52@HOTMAIL.COM",
                            NormalizedUserName = "AL.LEMKE52@HOTMAIL.COM",
                            PasswordHash = "AJVZAwneZeQBsjpD+DLmWbByQGAKnNY56SleFUi2RaaY/6aiPPVIWAGPtAV43jwEgg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8c6244db-7f03-4ace-b526-99336a0c0d6a",
                            TwoFactorEnabled = false,
                            UserName = "Al.Lemke52@hotmail.com"
                        },
                        new
                        {
                            Id = "e805fbfc-c3df-4577-a107-b30550197de1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "805522e8-e929-4b10-8b58-ad6d5c2c05ce",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alonzo_Frami54@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Alonzo",
                            LastName = "Frami",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALONZO_FRAMI54@YAHOO.COM",
                            NormalizedUserName = "ALONZO_FRAMI54@YAHOO.COM",
                            PasswordHash = "ABSaX0yRNzakKM4PzO+zHXRa381cMUBKBkcHXOvKM4PqyoEvX8cXFFc7b4qOy4zPtw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e061f08d-fb04-4efc-906c-7a97e749d504",
                            TwoFactorEnabled = false,
                            UserName = "Alonzo_Frami54@yahoo.com"
                        },
                        new
                        {
                            Id = "e07dd079-f8f9-4565-b549-706d5a4cfca9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d62a8bb-011a-4bf2-94c1-6871414f5d77",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jeremiah.Nienow49@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Jeremiah",
                            LastName = "Nienow",
                            LockoutEnabled = false,
                            NormalizedEmail = "JEREMIAH.NIENOW49@YAHOO.COM",
                            NormalizedUserName = "JEREMIAH.NIENOW49@YAHOO.COM",
                            PasswordHash = "ALpqD2mHEhlssKYtdSd7zgSvGl3sLvvliOkkMS21oZG0kS0iPeM6pYIv0VOzxnLLhw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d8c79e43-de59-490c-8350-fa51a4b377de",
                            TwoFactorEnabled = false,
                            UserName = "Jeremiah.Nienow49@yahoo.com"
                        },
                        new
                        {
                            Id = "8b8ce305-7a44-4b8a-8cf2-5fed25102301",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b0d98774-f4e3-403b-8fcf-9f61c490db81",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Doris48@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Doris",
                            LastName = "Murray",
                            LockoutEnabled = false,
                            NormalizedEmail = "DORIS48@HOTMAIL.COM",
                            NormalizedUserName = "DORIS48@HOTMAIL.COM",
                            PasswordHash = "AK50brygx9v2XPEhV000+cnmxDTgrfUEYxBQ2L5lmo3fu2oVjWyT0LbGwWAbNiOM6w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e0c6899b-38af-4042-aec3-db534f574790",
                            TwoFactorEnabled = false,
                            UserName = "Doris48@hotmail.com"
                        },
                        new
                        {
                            Id = "3f688831-a828-43a2-869c-9f0dcacd0194",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8196b25a-0071-4800-a05d-3a01905c6ad3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wilma_Morar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wilma",
                            LastName = "Morar",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILMA_MORAR@GMAIL.COM",
                            NormalizedUserName = "WILMA_MORAR@GMAIL.COM",
                            PasswordHash = "AEE19b+l1IANam4WUaaugFJ0du/b1npR3znoKpM+W3b4PyxVk+KJOzcfp/dcjkv0dg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46c958df-bc6d-426a-a973-a1dbea888b94",
                            TwoFactorEnabled = false,
                            UserName = "Wilma_Morar@gmail.com"
                        },
                        new
                        {
                            Id = "3bc49c63-327e-429c-a7e2-f25650be37ec",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9483c778-239a-4d29-bbbc-321a1348f322",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lauren_McGlynn61@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lauren",
                            LastName = "McGlynn",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAUREN_MCGLYNN61@GMAIL.COM",
                            NormalizedUserName = "LAUREN_MCGLYNN61@GMAIL.COM",
                            PasswordHash = "ALzTx42mYRBCeW9G6b3CIuE6pKFamAAxA3wo81kVplxTT8JtlFNzEXB9Ziawx2FIdg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d1ef3ea-ab23-4279-b429-2cfb190d0c77",
                            TwoFactorEnabled = false,
                            UserName = "Lauren_McGlynn61@gmail.com"
                        },
                        new
                        {
                            Id = "ddb8eed5-4679-4ab1-b76d-f19656d8335a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8eea4a60-e3c7-4eed-acb3-a3f021c17bd9",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lauren11@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lauren",
                            LastName = "Rohan",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAUREN11@GMAIL.COM",
                            NormalizedUserName = "LAUREN11@GMAIL.COM",
                            PasswordHash = "ABWeXTZKr1L/vVjQZeoBwL3fM3iCagZ+J9A5VVyWPNZSBEAtIA6/8GYGt1zy1IvNjA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5dfeb7c3-ce8b-48b7-a35d-7b4a5042214b",
                            TwoFactorEnabled = false,
                            UserName = "Lauren11@gmail.com"
                        },
                        new
                        {
                            Id = "f56ca38d-4199-403f-9214-f4627002e5f1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e503c30a-9021-4cdd-b554-eb03a13ca73f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Amy_McGlynn@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Amy",
                            LastName = "McGlynn",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMY_MCGLYNN@HOTMAIL.COM",
                            NormalizedUserName = "AMY_MCGLYNN@HOTMAIL.COM",
                            PasswordHash = "AAWvForJBZhNrKHR5gG/VTbuftTawr+AP9cQdthRnUhGZepjRwH8WykLPpRvCYneag==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "45cf0a5a-475b-4674-8705-d8e86e1d6a2b",
                            TwoFactorEnabled = false,
                            UserName = "Amy_McGlynn@hotmail.com"
                        },
                        new
                        {
                            Id = "d11906a5-a4e3-4c2a-a1da-2a8eabeefab8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "39849d2a-47c6-4b68-b367-2f92cb0e2596",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Terrence_Carter72@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Terrence",
                            LastName = "Carter",
                            LockoutEnabled = false,
                            NormalizedEmail = "TERRENCE_CARTER72@HOTMAIL.COM",
                            NormalizedUserName = "TERRENCE_CARTER72@HOTMAIL.COM",
                            PasswordHash = "ALs7mJw+CwqXR2GWXJN7IMcssgfl8DJrEgO+PDTsCYe34lXfA7uGaTdZVrswXqg82A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2e7ce74e-0094-40a0-ae9e-7b66c8ec31ee",
                            TwoFactorEnabled = false,
                            UserName = "Terrence_Carter72@hotmail.com"
                        },
                        new
                        {
                            Id = "5ca60e42-a9e9-4e60-a6ff-9bf5b1c57f71",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ab10e4b7-bcbf-4e7d-abdd-bed169f8aaf5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Horace49@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Horace",
                            LastName = "Ebert",
                            LockoutEnabled = false,
                            NormalizedEmail = "HORACE49@YAHOO.COM",
                            NormalizedUserName = "HORACE49@YAHOO.COM",
                            PasswordHash = "AMfozAgDuEQ+WAkqhwcs0L2GgeWuPbEmrWEoYj6TlVAaYCLypuzaSJ6pANlBUo2+mw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2aeccf3d-9318-4415-8923-499ad40087ea",
                            TwoFactorEnabled = false,
                            UserName = "Horace49@yahoo.com"
                        },
                        new
                        {
                            Id = "c1ccf713-ea68-4161-9a77-e7f47cd51c25",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d18a7a37-9423-4b75-9986-897cad10d038",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Oliver.Heaney@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Oliver",
                            LastName = "Heaney",
                            LockoutEnabled = false,
                            NormalizedEmail = "OLIVER.HEANEY@YAHOO.COM",
                            NormalizedUserName = "OLIVER.HEANEY@YAHOO.COM",
                            PasswordHash = "AKtyO9ldDncxOtZxAvPfuuMRKYdA+iX8Qbby3BhuBZgCWYutJo0XCdUW9eaxcDNy0g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e83b091f-ab5c-4793-b2f9-76718f52696d",
                            TwoFactorEnabled = false,
                            UserName = "Oliver.Heaney@yahoo.com"
                        },
                        new
                        {
                            Id = "ebb4a71e-29fb-4560-9978-4e4e007754c5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66e6e80e-b284-467a-8289-ffcdf51151a0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Manuel.Stanton@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Manuel",
                            LastName = "Stanton",
                            LockoutEnabled = false,
                            NormalizedEmail = "MANUEL.STANTON@YAHOO.COM",
                            NormalizedUserName = "MANUEL.STANTON@YAHOO.COM",
                            PasswordHash = "AAZRUiADZ7HaQ4B1LAx9N4yrAu8FU9EhOVD4xQ6aXZxYypZvjwkuW8fGa5MUy9UHjQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dd6aabf7-f951-467b-b0d4-9f8aee7a7e6d",
                            TwoFactorEnabled = false,
                            UserName = "Manuel.Stanton@yahoo.com"
                        },
                        new
                        {
                            Id = "7db834a0-98c3-42e9-8a84-dda867a5b334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fcc0c5c7-0cc5-43e4-b3dd-cb77fb445dca",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kenny.Hodkiewicz56@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kenny",
                            LastName = "Hodkiewicz",
                            LockoutEnabled = false,
                            NormalizedEmail = "KENNY.HODKIEWICZ56@HOTMAIL.COM",
                            NormalizedUserName = "KENNY.HODKIEWICZ56@HOTMAIL.COM",
                            PasswordHash = "ALxXj90fRvMRsK8amVwKmxD3fdTYLTw6e2AYbeLd/2VGGkq2hpHEfF/1sRbxGvp7PQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32ddfe60-8c40-481f-8bd0-732be42fce6d",
                            TwoFactorEnabled = false,
                            UserName = "Kenny.Hodkiewicz56@hotmail.com"
                        },
                        new
                        {
                            Id = "18d0ccf1-8264-45f2-9886-2c14119b906b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc1eaf0e-ce7b-4a53-87ae-7c1f98dcdce6",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Deborah2@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Deborah",
                            LastName = "Schulist",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEBORAH2@GMAIL.COM",
                            NormalizedUserName = "DEBORAH2@GMAIL.COM",
                            PasswordHash = "AJGOMFIoL5zErJdXunEiyqSj1DNhAD5/KzVhWrQg2nOBFH3wWfWZM75XPs0xfNgCyQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "471f8011-b7e6-4cfb-ae6c-90359ef85bb0",
                            TwoFactorEnabled = false,
                            UserName = "Deborah2@gmail.com"
                        },
                        new
                        {
                            Id = "9dd6e77d-fd8d-46e8-bcfa-0bf0b2167bfc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b16d907a-4f45-44a3-95aa-8f1f4d6688bf",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Moses.OKon74@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Moses",
                            LastName = "O'Kon",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOSES.OKON74@YAHOO.COM",
                            NormalizedUserName = "MOSES.OKON74@YAHOO.COM",
                            PasswordHash = "AHlE8iHSEP6y1wZKcM6B/NnK+qZhVuTVwCy4P6Ru3LsXnAzHT/ehOCLSxpJwDTgGyw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac377b2e-7897-4a93-9700-eddf045f71b5",
                            TwoFactorEnabled = false,
                            UserName = "Moses.OKon74@yahoo.com"
                        },
                        new
                        {
                            Id = "4a27635f-7d47-4907-90fc-33ba5148fb80",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8b0df18-783d-4889-b064-fbd759903457",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alberto_Boyer@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Alberto",
                            LastName = "Boyer",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALBERTO_BOYER@YAHOO.COM",
                            NormalizedUserName = "ALBERTO_BOYER@YAHOO.COM",
                            PasswordHash = "ADR+YG1oPN7LNJl9oFem8kpb5IR7c6bb3NKGsqx2YjbXT5U/xCYhwtFutX73zmmmeQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "095c2614-52b2-476b-b96f-9eb1d5b704e0",
                            TwoFactorEnabled = false,
                            UserName = "Alberto_Boyer@yahoo.com"
                        },
                        new
                        {
                            Id = "b516bd0d-f6bd-4236-9b42-728291e7e5e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a5da377f-f129-42db-b783-ee18b80c34dc",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lucas64@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lucas",
                            LastName = "Boyle",
                            LockoutEnabled = false,
                            NormalizedEmail = "LUCAS64@GMAIL.COM",
                            NormalizedUserName = "LUCAS64@GMAIL.COM",
                            PasswordHash = "AGAx+nYvW3RU/6Z7QspDRaJSAzcz+icWdVMxSMEMIcp4D8TnOlo7IH0E5BtgFraFVg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f25843e5-8d09-441a-b4e0-acb6a7db67b9",
                            TwoFactorEnabled = false,
                            UserName = "Lucas64@gmail.com"
                        },
                        new
                        {
                            Id = "d98c3d23-7a3d-4dad-a237-1beeea5f4d76",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eca66616-e437-428d-a9b7-9798bf08f1c5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Deborah.Ward@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Deborah",
                            LastName = "Ward",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEBORAH.WARD@YAHOO.COM",
                            NormalizedUserName = "DEBORAH.WARD@YAHOO.COM",
                            PasswordHash = "APwyujTT+yUhgHonO3DXTO4p7cHR0yhPeNHCx3yYhe1MK/KTA8u2ftdB7WZuozbtxQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "024609fd-b9b3-4ecd-ae8b-d3bad794a476",
                            TwoFactorEnabled = false,
                            UserName = "Deborah.Ward@yahoo.com"
                        },
                        new
                        {
                            Id = "c64b7ee2-0f12-4f96-a67c-6fd781bdaf2e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b37d667-f66d-40db-80c6-07ca7abcb2ec",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tamara.OKeefe@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tamara",
                            LastName = "O'Keefe",
                            LockoutEnabled = false,
                            NormalizedEmail = "TAMARA.OKEEFE@HOTMAIL.COM",
                            NormalizedUserName = "TAMARA.OKEEFE@HOTMAIL.COM",
                            PasswordHash = "AISMogftnB9fnU6nojCX4pqB8Iy8+GMW8x+dokvsYu8bJ0cPwkZJ0BSSMNa8766kiQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ded1ae8a-943b-4c1d-8396-454bb7c3cd9f",
                            TwoFactorEnabled = false,
                            UserName = "Tamara.OKeefe@hotmail.com"
                        },
                        new
                        {
                            Id = "ca51837b-a702-493a-9371-99cd3190122a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6138583-ad55-4be3-abdf-23abc133eecb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yvonne.Powlowski@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yvonne",
                            LastName = "Powlowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "YVONNE.POWLOWSKI@GMAIL.COM",
                            NormalizedUserName = "YVONNE.POWLOWSKI@GMAIL.COM",
                            PasswordHash = "AHD7fdqcnX5bIYtNXXrKqVd8Jnh00wqS1D4Zhfz8mY8xZp7zraoUhljX1AuBwBgKKg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91fe0e5b-3879-4283-9f04-c1c22d2e06fc",
                            TwoFactorEnabled = false,
                            UserName = "Yvonne.Powlowski@gmail.com"
                        },
                        new
                        {
                            Id = "25785f2e-4f4a-4df1-8c8c-52a22f387d98",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4e4364f1-bd49-4506-8b69-e3d615a849db",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Isabel79@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Isabel",
                            LastName = "Howell",
                            LockoutEnabled = false,
                            NormalizedEmail = "ISABEL79@GMAIL.COM",
                            NormalizedUserName = "ISABEL79@GMAIL.COM",
                            PasswordHash = "AGEVuzRS6xY+s6qQVGTHb9lqTbCFLQqdKa4HZ2mHCZLoUSEnnMnyhM2f2wyfJBmfgA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1414056c-7981-4420-a9df-29236aef58bf",
                            TwoFactorEnabled = false,
                            UserName = "Isabel79@gmail.com"
                        },
                        new
                        {
                            Id = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f5f178f-074b-4416-997c-04287e4eaa18",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Roberta_Hills54@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Roberta",
                            LastName = "Hills",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROBERTA_HILLS54@HOTMAIL.COM",
                            NormalizedUserName = "ROBERTA_HILLS54@HOTMAIL.COM",
                            PasswordHash = "ABc7iZXA4KQyUHpjCQLv0cQZh8Wj0QTdttITcaU4k5G9lDWLxlHmSqMlh5MvwxvKow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bf298adc-db73-4ec7-b698-4c8ea0d2fdbb",
                            TwoFactorEnabled = false,
                            UserName = "Roberta_Hills54@hotmail.com"
                        },
                        new
                        {
                            Id = "bb15eb8e-84ee-4b7d-b8b2-5bd3529e2dc7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6760e6ce-e52d-49a6-b95e-3386de9f73f4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dawn_Stehr@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dawn",
                            LastName = "Stehr",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAWN_STEHR@HOTMAIL.COM",
                            NormalizedUserName = "DAWN_STEHR@HOTMAIL.COM",
                            PasswordHash = "AGSqJ2WpPLr7GN8z9yKL5jGe8LAwMO3UD6pnhQsfqk+UARHDKIk1CyjvSS14ZkP1sA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0116a4ff-e0c4-4f86-9ac3-d75580376511",
                            TwoFactorEnabled = false,
                            UserName = "Dawn_Stehr@hotmail.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "0418 Trenton Drives, South Jordane, Andorra",
                            Email = "Amelia30@yahoo.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "f44b17ce-911d-46fb-98ed-ba2cda983d47",
                            DepartmentID = 4,
                            Email = "Vivian_Sanford72@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Vivian",
                            HourlyRate = 197.023979302972540m,
                            IdentificationNumber = "5266",
                            IsActive = true,
                            LastName = "Sanford",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 4, 7, 23, 2, 22, 626, DateTimeKind.Unspecified).AddTicks(5922),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "5d61c37c-7881-4358-9c86-a1cd87db9548",
                            DepartmentID = 4,
                            Email = "Neal_Hahn@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Neal",
                            HourlyRate = 190.9266691379838940m,
                            IdentificationNumber = "6258",
                            IsActive = true,
                            LastName = "Hahn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 7, 22, 6, 10, 38, 129, DateTimeKind.Unspecified).AddTicks(1604),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "a7b5c014-01b6-44f1-bfe2-323b07e40ac0",
                            DepartmentID = 4,
                            Email = "Jermaine86@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jermaine",
                            HourlyRate = 199.142836732390730m,
                            IdentificationNumber = "8862",
                            IsActive = true,
                            LastName = "Kshlerin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 10, 5, 6, 46, 8, 59, DateTimeKind.Unspecified).AddTicks(3987),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "92e62870-3a1d-4949-9c0e-f6f432a8d928",
                            DepartmentID = 4,
                            Email = "Elmer23@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Elmer",
                            HourlyRate = 191.338605154929030m,
                            IdentificationNumber = "2026",
                            IsActive = true,
                            LastName = "Lemke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 2, 18, 18, 1, 56, 353, DateTimeKind.Unspecified).AddTicks(3537),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "65cf912e-f4e8-490d-8033-ebcf7fe3b9b8",
                            DepartmentID = 4,
                            Email = "Roy18@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Roy",
                            HourlyRate = 195.403856791278280m,
                            IdentificationNumber = "2016",
                            IsActive = true,
                            LastName = "Wiza",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 2, 24, 0, 40, 50, 93, DateTimeKind.Unspecified).AddTicks(9777),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "f79cf1a4-36f9-4b87-bbde-304362fa7738",
                            DepartmentID = 4,
                            Email = "Marco_Fritsch54@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Marco",
                            HourlyRate = 190.6309550537871920m,
                            IdentificationNumber = "6550",
                            IsActive = true,
                            LastName = "Fritsch",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2021, 6, 29, 15, 37, 59, 243, DateTimeKind.Unspecified).AddTicks(3920),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "59f9799e-9a61-45c0-bd61-98ca91abf885",
                            DepartmentID = 4,
                            Email = "Seth4@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Seth",
                            HourlyRate = 192.473825948533520m,
                            IdentificationNumber = "9599",
                            IsActive = true,
                            LastName = "Berge",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2020, 11, 22, 19, 53, 28, 676, DateTimeKind.Unspecified).AddTicks(9340),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "a9b8d805-6d2c-451a-a86a-5266e621fe70",
                            DepartmentID = 1,
                            Email = "Faith_Blick21@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Faith",
                            HourlyRate = 194.482531293520020m,
                            IdentificationNumber = "4328",
                            IsActive = true,
                            LastName = "Blick",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 10, 23, 18, 27, 2, 271, DateTimeKind.Unspecified).AddTicks(209),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "9c6165a6-08fc-46f8-9069-6c02b968c53c",
                            DepartmentID = 1,
                            Email = "Woodrow74@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Woodrow",
                            HourlyRate = 190.1273573423397530m,
                            IdentificationNumber = "7329",
                            IsActive = true,
                            LastName = "Mueller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 9, 4, 8, 57, 28, 455, DateTimeKind.Unspecified).AddTicks(141),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "5075f0bf-8284-4855-924d-47d6133d24ab",
                            DepartmentID = 1,
                            Email = "Francis38@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Francis",
                            HourlyRate = 191.207063729505550m,
                            IdentificationNumber = "2965",
                            IsActive = true,
                            LastName = "Johns",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 8, 4, 12, 36, 33, 26, DateTimeKind.Unspecified).AddTicks(697),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "6af20cca-5467-4db4-96b1-219562213659",
                            DepartmentID = 1,
                            Email = "Debbie71@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Debbie",
                            HourlyRate = 196.110964508778860m,
                            IdentificationNumber = "7556",
                            IsActive = true,
                            LastName = "Ebert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 12, 1, 14, 41, 7, 480, DateTimeKind.Unspecified).AddTicks(4670),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "8ab094f0-12e6-44a0-9795-f13c08affb4b",
                            DepartmentID = 1,
                            Email = "Beth58@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Beth",
                            HourlyRate = 198.539316411381270m,
                            IdentificationNumber = "4548",
                            IsActive = true,
                            LastName = "Beier",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 12, 27, 6, 2, 3, 647, DateTimeKind.Unspecified).AddTicks(8290),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "79ea9981-7cb7-4b37-89b2-ca454342d491",
                            DepartmentID = 1,
                            Email = "Claude.Hammes50@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Claude",
                            HourlyRate = 196.987917286803910m,
                            IdentificationNumber = "2491",
                            IsActive = true,
                            LastName = "Hammes",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 12, 5, 5, 26, 56, 81, DateTimeKind.Unspecified).AddTicks(6709),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "320ec9ee-9931-4975-b21e-9b905b95187f",
                            DepartmentID = 1,
                            Email = "Gary_Robel@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Gary",
                            HourlyRate = 194.988905915519640m,
                            IdentificationNumber = "7827",
                            IsActive = true,
                            LastName = "Robel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 10, 19, 7, 24, 33, 936, DateTimeKind.Unspecified).AddTicks(6220),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "05f77b7a-a11e-42e9-bda7-8b2ac3181fa2",
                            DepartmentID = 1,
                            Email = "Anna_Hodkiewicz@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anna",
                            HourlyRate = 192.673201790392960m,
                            IdentificationNumber = "4429",
                            IsActive = true,
                            LastName = "Hodkiewicz",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 5, 16, 22, 8, 20, 712, DateTimeKind.Unspecified).AddTicks(4151),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "1f6ad392-f210-4447-8c12-49bddee591d4",
                            DepartmentID = 1,
                            Email = "Dominick41@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dominick",
                            HourlyRate = 198.441001213361040m,
                            IdentificationNumber = "1125",
                            IsActive = true,
                            LastName = "Monahan",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 2, 9, 0, 16, 24, 849, DateTimeKind.Unspecified).AddTicks(6664),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "7060f4d0-8343-4536-b84d-dfd69f2a3975",
                            DepartmentID = 1,
                            Email = "Rex_Kutch17@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rex",
                            HourlyRate = 199.93264944755130m,
                            IdentificationNumber = "9286",
                            IsActive = true,
                            LastName = "Kutch",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 9, 20, 12, 48, 36, 699, DateTimeKind.Unspecified).AddTicks(5810),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "82964b35-5273-4d7d-9e4c-28c57f6bff23",
                            DepartmentID = 1,
                            Email = "Mack.Erdman@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Mack",
                            HourlyRate = 198.720618127249470m,
                            IdentificationNumber = "6205",
                            IsActive = true,
                            LastName = "Erdman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 4, 20, 21, 19, 57, 687, DateTimeKind.Unspecified).AddTicks(2503),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "68a1683a-7aa0-4d63-9797-4adbca944655",
                            DepartmentID = 3,
                            Email = "Wilbert.Greenfelder86@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wilbert",
                            HourlyRate = 191.009867140562210m,
                            IdentificationNumber = "7092",
                            IsActive = true,
                            LastName = "Greenfelder",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 29, 8, 54, 52, 888, DateTimeKind.Unspecified).AddTicks(1772),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "bb78b083-967a-48da-8140-407ef2d6b3bf",
                            DepartmentID = 3,
                            Email = "Deanna_Stokes@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Deanna",
                            HourlyRate = 195.791756527401390m,
                            IdentificationNumber = "7695",
                            IsActive = true,
                            LastName = "Stokes",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 31, 22, 29, 7, 946, DateTimeKind.Unspecified).AddTicks(2247),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "d5a5cce1-b853-434e-a66e-3220fe1d4caf",
                            DepartmentID = 3,
                            Email = "Nicolas_Hane@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Nicolas",
                            HourlyRate = 194.425361265626440m,
                            IdentificationNumber = "8281",
                            IsActive = true,
                            LastName = "Hane",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 26, 3, 6, 16, 503, DateTimeKind.Unspecified).AddTicks(683),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "5223700c-a281-47f7-84ea-b64e42057102",
                            DepartmentID = 3,
                            Email = "Isabel.Goldner@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Isabel",
                            HourlyRate = 199.813198898831940m,
                            IdentificationNumber = "4261",
                            IsActive = true,
                            LastName = "Goldner",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 20, 3, 17, 13, 433, DateTimeKind.Unspecified).AddTicks(4340),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "3e369eee-0b45-4164-8f24-58c61449f59a",
                            DepartmentID = 3,
                            Email = "Wm.Spencer@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wm",
                            HourlyRate = 196.369678422980790m,
                            IdentificationNumber = "8632",
                            IsActive = true,
                            LastName = "Spencer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 7, 26, 16, 56, 54, 26, DateTimeKind.Unspecified).AddTicks(8569),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "fae1ebb2-1966-467a-8286-4b3dead27151",
                            DepartmentID = 3,
                            Email = "Al.Lemke52@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Al",
                            HourlyRate = 193.971508016796550m,
                            IdentificationNumber = "5110",
                            IsActive = true,
                            LastName = "Lemke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 10, 31, 16, 11, 43, 847, DateTimeKind.Unspecified).AddTicks(3500),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "e805fbfc-c3df-4577-a107-b30550197de1",
                            DepartmentID = 3,
                            Email = "Alonzo_Frami54@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Alonzo",
                            HourlyRate = 199.848908274364150m,
                            IdentificationNumber = "3731",
                            IsActive = true,
                            LastName = "Frami",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 7, 24, 15, 45, 35, 701, DateTimeKind.Unspecified).AddTicks(1659),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "e07dd079-f8f9-4565-b549-706d5a4cfca9",
                            DepartmentID = 3,
                            Email = "Jeremiah.Nienow49@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jeremiah",
                            HourlyRate = 193.126483090746440m,
                            IdentificationNumber = "2682",
                            IsActive = true,
                            LastName = "Nienow",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 11, 14, 12, 16, 44, 630, DateTimeKind.Unspecified).AddTicks(4220),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "8b8ce305-7a44-4b8a-8cf2-5fed25102301",
                            DepartmentID = 3,
                            Email = "Doris48@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Doris",
                            HourlyRate = 199.912871080410140m,
                            IdentificationNumber = "8916",
                            IsActive = true,
                            LastName = "Murray",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 6, 26, 14, 32, 43, 847, DateTimeKind.Unspecified).AddTicks(165),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "3f688831-a828-43a2-869c-9f0dcacd0194",
                            DepartmentID = 3,
                            Email = "Wilma_Morar@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wilma",
                            HourlyRate = 194.993576698467870m,
                            IdentificationNumber = "7692",
                            IsActive = true,
                            LastName = "Morar",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 2, 23, 23, 41, 11, 530, DateTimeKind.Unspecified).AddTicks(4068),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "3bc49c63-327e-429c-a7e2-f25650be37ec",
                            DepartmentID = 3,
                            Email = "Lauren_McGlynn61@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lauren",
                            HourlyRate = 192.645529495852780m,
                            IdentificationNumber = "9384",
                            IsActive = true,
                            LastName = "McGlynn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 3, 3, 1, 7, 43, 445, DateTimeKind.Unspecified).AddTicks(2398),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "ddb8eed5-4679-4ab1-b76d-f19656d8335a",
                            DepartmentID = 3,
                            Email = "Lauren11@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lauren",
                            HourlyRate = 190.8090570293409080m,
                            IdentificationNumber = "1636",
                            IsActive = true,
                            LastName = "Rohan",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 3, 8, 0, 5, 31, 989, DateTimeKind.Unspecified).AddTicks(6512),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "f56ca38d-4199-403f-9214-f4627002e5f1",
                            DepartmentID = 3,
                            Email = "Amy_McGlynn@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Amy",
                            HourlyRate = 191.902626576788080m,
                            IdentificationNumber = "5077",
                            IsActive = true,
                            LastName = "McGlynn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 3, 28, 23, 30, 21, 90, DateTimeKind.Unspecified).AddTicks(4223),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "d11906a5-a4e3-4c2a-a1da-2a8eabeefab8",
                            DepartmentID = 3,
                            Email = "Terrence_Carter72@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Terrence",
                            HourlyRate = 198.351960656397030m,
                            IdentificationNumber = "4320",
                            IsActive = true,
                            LastName = "Carter",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 13, 1, 0, 11, 318, DateTimeKind.Unspecified).AddTicks(7534),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "5ca60e42-a9e9-4e60-a6ff-9bf5b1c57f71",
                            DepartmentID = 3,
                            Email = "Horace49@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Horace",
                            HourlyRate = 196.277943438048450m,
                            IdentificationNumber = "3168",
                            IsActive = true,
                            LastName = "Ebert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 2, 29, 13, 24, 14, 955, DateTimeKind.Unspecified).AddTicks(9366),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "c1ccf713-ea68-4161-9a77-e7f47cd51c25",
                            DepartmentID = 3,
                            Email = "Oliver.Heaney@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Oliver",
                            HourlyRate = 190.2830058896369330m,
                            IdentificationNumber = "4446",
                            IsActive = true,
                            LastName = "Heaney",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 4, 11, 14, 31, 45, 35, DateTimeKind.Unspecified).AddTicks(8980),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "ebb4a71e-29fb-4560-9978-4e4e007754c5",
                            DepartmentID = 3,
                            Email = "Manuel.Stanton@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Manuel",
                            HourlyRate = 190.2959106072298770m,
                            IdentificationNumber = "9130",
                            IsActive = true,
                            LastName = "Stanton",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 6, 10, 22, 26, 0, 165, DateTimeKind.Unspecified).AddTicks(1053),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "7db834a0-98c3-42e9-8a84-dda867a5b334",
                            DepartmentID = 3,
                            Email = "Kenny.Hodkiewicz56@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Kenny",
                            HourlyRate = 197.6309567725430m,
                            IdentificationNumber = "7532",
                            IsActive = true,
                            LastName = "Hodkiewicz",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 7, 1, 9, 31, 39, 156, DateTimeKind.Unspecified).AddTicks(4808),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "18d0ccf1-8264-45f2-9886-2c14119b906b",
                            DepartmentID = 3,
                            Email = "Deborah2@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Deborah",
                            HourlyRate = 190.7537516815372520m,
                            IdentificationNumber = "4357",
                            IsActive = true,
                            LastName = "Schulist",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 1, 10, 17, 21, 15, 174, DateTimeKind.Unspecified).AddTicks(3020),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "9dd6e77d-fd8d-46e8-bcfa-0bf0b2167bfc",
                            DepartmentID = 3,
                            Email = "Moses.OKon74@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Moses",
                            HourlyRate = 197.026128255308660m,
                            IdentificationNumber = "2452",
                            IsActive = true,
                            LastName = "O'Kon",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 3, 21, 5, 24, 59, 32, DateTimeKind.Unspecified).AddTicks(9321),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "4a27635f-7d47-4907-90fc-33ba5148fb80",
                            DepartmentID = 3,
                            Email = "Alberto_Boyer@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Alberto",
                            HourlyRate = 191.67770848221970m,
                            IdentificationNumber = "6386",
                            IsActive = true,
                            LastName = "Boyer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 5, 24, 0, 11, 17, 71, DateTimeKind.Unspecified).AddTicks(9898),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "b516bd0d-f6bd-4236-9b42-728291e7e5e1",
                            DepartmentID = 3,
                            Email = "Lucas64@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lucas",
                            HourlyRate = 194.492101168489130m,
                            IdentificationNumber = "4693",
                            IsActive = true,
                            LastName = "Boyle",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 1, 19, 9, 46, 34, 139, DateTimeKind.Unspecified).AddTicks(3290),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "d98c3d23-7a3d-4dad-a237-1beeea5f4d76",
                            DepartmentID = 3,
                            Email = "Deborah.Ward@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Deborah",
                            HourlyRate = 196.653624925135460m,
                            IdentificationNumber = "2583",
                            IsActive = true,
                            LastName = "Ward",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 7, 26, 15, 15, 17, 558, DateTimeKind.Unspecified).AddTicks(8576),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "c64b7ee2-0f12-4f96-a67c-6fd781bdaf2e",
                            DepartmentID = 3,
                            Email = "Tamara.OKeefe@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Tamara",
                            HourlyRate = 196.235476493013780m,
                            IdentificationNumber = "5847",
                            IsActive = true,
                            LastName = "O'Keefe",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 8, 12, 7, 22, 51, 40, DateTimeKind.Unspecified).AddTicks(9282),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "ca51837b-a702-493a-9371-99cd3190122a",
                            DepartmentID = 1,
                            Email = "Yvonne.Powlowski@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Yvonne",
                            HourlyRate = 196.905998018060810m,
                            IdentificationNumber = "4462",
                            IsActive = true,
                            LastName = "Powlowski",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 15, 11, 1, 17, 212, DateTimeKind.Unspecified).AddTicks(3284),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "25785f2e-4f4a-4df1-8c8c-52a22f387d98",
                            DepartmentID = 2,
                            Email = "Isabel79@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Isabel",
                            HourlyRate = 191.653896543036170m,
                            IdentificationNumber = "9598",
                            IsActive = true,
                            LastName = "Howell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 12, 8, 20, 47, 59, 709, DateTimeKind.Unspecified).AddTicks(9431),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            DepartmentID = 5,
                            Email = "Roberta_Hills54@hotmail.com",
                            EmployeeStatus = 0,
                            FirstName = "Roberta",
                            HourlyRate = 195.021706169946910m,
                            IdentificationNumber = "9041",
                            IsActive = true,
                            LastName = "Hills",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 12, 3, 7, 47, 861, DateTimeKind.Unspecified).AddTicks(1512),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "bb15eb8e-84ee-4b7d-b8b2-5bd3529e2dc7",
                            DepartmentID = 6,
                            Email = "Dawn_Stehr@hotmail.com",
                            EmployeeStatus = 1,
                            FirstName = "Dawn",
                            HourlyRate = 199.59150096382550m,
                            IdentificationNumber = "7420",
                            IsActive = true,
                            LastName = "Stehr",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 8, 3, 51, 11, 594, DateTimeKind.Unspecified).AddTicks(3696),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "0ab099bc-ffd2-4f09-ab7b-575ef55e5283",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "70c68bd8-23c2-4547-9ecc-97d8c29f0ad7",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "7afc93b5-9ed3-4304-bce3-9dab85ff4f30",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "4c03f6cb-4bc7-468a-b609-40a2b4dc1a57",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "282c363c-2303-49ec-b7ef-7a6e6777d5ee",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "ccb9eaef-9b53-4a7d-a736-bb2fa6954ce8",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "54a0b504-06a5-4ebe-9b9e-34e8d94491e3",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "5bcfcf8e-96f1-4a64-8f37-c0d1ed8f1857",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "ca7073b2-4b3c-4e2e-a432-4e944b70447c",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "35262fa6-4cf1-4cef-8072-0986410a4fd4",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "f44b17ce-911d-46fb-98ed-ba2cda983d47",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "f44b17ce-911d-46fb-98ed-ba2cda983d47",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5d61c37c-7881-4358-9c86-a1cd87db9548",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "5d61c37c-7881-4358-9c86-a1cd87db9548",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a7b5c014-01b6-44f1-bfe2-323b07e40ac0",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "a7b5c014-01b6-44f1-bfe2-323b07e40ac0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "92e62870-3a1d-4949-9c0e-f6f432a8d928",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "92e62870-3a1d-4949-9c0e-f6f432a8d928",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "65cf912e-f4e8-490d-8033-ebcf7fe3b9b8",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "65cf912e-f4e8-490d-8033-ebcf7fe3b9b8",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f79cf1a4-36f9-4b87-bbde-304362fa7738",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "f79cf1a4-36f9-4b87-bbde-304362fa7738",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "59f9799e-9a61-45c0-bd61-98ca91abf885",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "59f9799e-9a61-45c0-bd61-98ca91abf885",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a9b8d805-6d2c-451a-a86a-5266e621fe70",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "a9b8d805-6d2c-451a-a86a-5266e621fe70",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9c6165a6-08fc-46f8-9069-6c02b968c53c",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "9c6165a6-08fc-46f8-9069-6c02b968c53c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5075f0bf-8284-4855-924d-47d6133d24ab",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "5075f0bf-8284-4855-924d-47d6133d24ab",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6af20cca-5467-4db4-96b1-219562213659",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "6af20cca-5467-4db4-96b1-219562213659",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8ab094f0-12e6-44a0-9795-f13c08affb4b",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "8ab094f0-12e6-44a0-9795-f13c08affb4b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "79ea9981-7cb7-4b37-89b2-ca454342d491",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "79ea9981-7cb7-4b37-89b2-ca454342d491",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "320ec9ee-9931-4975-b21e-9b905b95187f",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "320ec9ee-9931-4975-b21e-9b905b95187f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "05f77b7a-a11e-42e9-bda7-8b2ac3181fa2",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "05f77b7a-a11e-42e9-bda7-8b2ac3181fa2",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1f6ad392-f210-4447-8c12-49bddee591d4",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "1f6ad392-f210-4447-8c12-49bddee591d4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7060f4d0-8343-4536-b84d-dfd69f2a3975",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "7060f4d0-8343-4536-b84d-dfd69f2a3975",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "82964b35-5273-4d7d-9e4c-28c57f6bff23",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "82964b35-5273-4d7d-9e4c-28c57f6bff23",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "68a1683a-7aa0-4d63-9797-4adbca944655",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "68a1683a-7aa0-4d63-9797-4adbca944655",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bb78b083-967a-48da-8140-407ef2d6b3bf",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bb78b083-967a-48da-8140-407ef2d6b3bf",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d5a5cce1-b853-434e-a66e-3220fe1d4caf",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d5a5cce1-b853-434e-a66e-3220fe1d4caf",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5223700c-a281-47f7-84ea-b64e42057102",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5223700c-a281-47f7-84ea-b64e42057102",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3e369eee-0b45-4164-8f24-58c61449f59a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3e369eee-0b45-4164-8f24-58c61449f59a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fae1ebb2-1966-467a-8286-4b3dead27151",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "fae1ebb2-1966-467a-8286-4b3dead27151",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e805fbfc-c3df-4577-a107-b30550197de1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e805fbfc-c3df-4577-a107-b30550197de1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e07dd079-f8f9-4565-b549-706d5a4cfca9",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e07dd079-f8f9-4565-b549-706d5a4cfca9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8b8ce305-7a44-4b8a-8cf2-5fed25102301",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8b8ce305-7a44-4b8a-8cf2-5fed25102301",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3f688831-a828-43a2-869c-9f0dcacd0194",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3f688831-a828-43a2-869c-9f0dcacd0194",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3bc49c63-327e-429c-a7e2-f25650be37ec",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3bc49c63-327e-429c-a7e2-f25650be37ec",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ddb8eed5-4679-4ab1-b76d-f19656d8335a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ddb8eed5-4679-4ab1-b76d-f19656d8335a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f56ca38d-4199-403f-9214-f4627002e5f1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f56ca38d-4199-403f-9214-f4627002e5f1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d11906a5-a4e3-4c2a-a1da-2a8eabeefab8",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d11906a5-a4e3-4c2a-a1da-2a8eabeefab8",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5ca60e42-a9e9-4e60-a6ff-9bf5b1c57f71",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5ca60e42-a9e9-4e60-a6ff-9bf5b1c57f71",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c1ccf713-ea68-4161-9a77-e7f47cd51c25",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c1ccf713-ea68-4161-9a77-e7f47cd51c25",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ebb4a71e-29fb-4560-9978-4e4e007754c5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ebb4a71e-29fb-4560-9978-4e4e007754c5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7db834a0-98c3-42e9-8a84-dda867a5b334",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7db834a0-98c3-42e9-8a84-dda867a5b334",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "18d0ccf1-8264-45f2-9886-2c14119b906b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "18d0ccf1-8264-45f2-9886-2c14119b906b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9dd6e77d-fd8d-46e8-bcfa-0bf0b2167bfc",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9dd6e77d-fd8d-46e8-bcfa-0bf0b2167bfc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4a27635f-7d47-4907-90fc-33ba5148fb80",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4a27635f-7d47-4907-90fc-33ba5148fb80",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b516bd0d-f6bd-4236-9b42-728291e7e5e1",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b516bd0d-f6bd-4236-9b42-728291e7e5e1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d98c3d23-7a3d-4dad-a237-1beeea5f4d76",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d98c3d23-7a3d-4dad-a237-1beeea5f4d76",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c64b7ee2-0f12-4f96-a67c-6fd781bdaf2e",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c64b7ee2-0f12-4f96-a67c-6fd781bdaf2e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ca51837b-a702-493a-9371-99cd3190122a",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "ca51837b-a702-493a-9371-99cd3190122a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "25785f2e-4f4a-4df1-8c8c-52a22f387d98",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "25785f2e-4f4a-4df1-8c8c-52a22f387d98",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3099fa3d-131c-4f9e-832d-af54c176309e",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "bb15eb8e-84ee-4b7d-b8b2-5bd3529e2dc7",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "bb15eb8e-84ee-4b7d-b8b2-5bd3529e2dc7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bb15eb8e-84ee-4b7d-b8b2-5bd3529e2dc7",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
