// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220407030515_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1e80c629-cc52-4cdb-86f6-701d7dafabc1",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4dd92691-5c7a-4ec2-ba1e-46c7cdf33a31",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "ACEmc7UGJLYpiOdN7Po9zvPfe6yBoA8fhS2dHzldACbKZY11uJ+SWKRYX22qJ0pz7Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c8df8ffe-a9f7-4b3e-aaa5-39eafda4ab98",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "f521279c-a6cd-4676-bd1e-13c566729fb2",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "a74a7da6-f3e0-41ab-b55e-9c2aa1bbec8c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Amber_Cronin@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Amber",
                            LastName = "Cronin",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMBER_CRONIN@HOTMAIL.COM",
                            NormalizedUserName = "AMBER_CRONIN@HOTMAIL.COM",
                            PasswordHash = "ACSNhiKzJpNDrW8OoXuLsCucvsTpYGocMD4zgLcJ55v885YitgL2/4cduOGPHNLaxA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "462a9564-70f6-4e7a-b1e4-247236321d2c",
                            TwoFactorEnabled = false,
                            UserName = "Amber_Cronin@hotmail.com"
                        },
                        new
                        {
                            Id = "6be611ed-5965-4645-ad54-49081b396a08",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "978058b2-eb6c-4308-9caf-1782a5ab33e6",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Daniel_Schamberger@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Daniel",
                            LastName = "Schamberger",
                            LockoutEnabled = false,
                            NormalizedEmail = "DANIEL_SCHAMBERGER@HOTMAIL.COM",
                            NormalizedUserName = "DANIEL_SCHAMBERGER@HOTMAIL.COM",
                            PasswordHash = "AMtu2GcpMWzn2etGXhBNaUnKz+m9qy06ncGsdgAJUF/kVIN1TdGo3shVnbvVekAx/g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1e3921b-cd0f-45c4-9d03-4a6206411889",
                            TwoFactorEnabled = false,
                            UserName = "Daniel_Schamberger@hotmail.com"
                        },
                        new
                        {
                            Id = "755de770-7de1-48db-b7c1-1887177937cf",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7249e846-fbd3-48d4-973f-d22f309d23ce",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sally_OConnell@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sally",
                            LastName = "O'Connell",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALLY_OCONNELL@GMAIL.COM",
                            NormalizedUserName = "SALLY_OCONNELL@GMAIL.COM",
                            PasswordHash = "AFY8+2aUdufHTL7umdn0Iin//8qvBFxKyT3Nd/l0yP5urV1yGMNLRsMmwRRrFQwofg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "165dbfe9-8d71-4b50-9b4a-4a4202e37af7",
                            TwoFactorEnabled = false,
                            UserName = "Sally_OConnell@gmail.com"
                        },
                        new
                        {
                            Id = "591f8422-8282-4411-8ff9-3636a2a026f0",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e772417f-1f16-4441-afe1-0241ea24c646",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brooke19@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Brooke",
                            LastName = "Mante",
                            LockoutEnabled = false,
                            NormalizedEmail = "BROOKE19@GMAIL.COM",
                            NormalizedUserName = "BROOKE19@GMAIL.COM",
                            PasswordHash = "AFBWfOEuI0pFvF+nwsK5nXS4uOP1U7GSvlhWwuI6Qbg4tn2bLKsW7RhgP+C7p6xLaA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "801e7082-3ac4-4e3c-bab8-734924d23bde",
                            TwoFactorEnabled = false,
                            UserName = "Brooke19@gmail.com"
                        },
                        new
                        {
                            Id = "2e2591ee-68c3-4712-9c5b-97ee1f5a67bd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "458df8d4-b297-432e-a1c8-0b8717a5fef3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Antonia.Casper62@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Antonia",
                            LastName = "Casper",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANTONIA.CASPER62@GMAIL.COM",
                            NormalizedUserName = "ANTONIA.CASPER62@GMAIL.COM",
                            PasswordHash = "ALRnC6xs9fQZi8poWROsMJfseEGckf22OXuSTAZ8g2E4987agcDdi6HXAPxHPFNfKA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f7d5150-d572-41f8-a68d-b530107a7ae1",
                            TwoFactorEnabled = false,
                            UserName = "Antonia.Casper62@gmail.com"
                        },
                        new
                        {
                            Id = "2cf041c9-180d-4016-bc3f-ac1da78324c6",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "50dd8943-3997-45fa-94ac-386f8a039331",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Herman_Christiansen@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Herman",
                            LastName = "Christiansen",
                            LockoutEnabled = false,
                            NormalizedEmail = "HERMAN_CHRISTIANSEN@HOTMAIL.COM",
                            NormalizedUserName = "HERMAN_CHRISTIANSEN@HOTMAIL.COM",
                            PasswordHash = "AKTYQHg3tU9C0X8NWD940BMYo8tnUz5MgDO/qgCON6lUEFh8O3JRcwRoYZrMMcKLmg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2bdb945d-25dd-41ed-b29a-0557c875c10e",
                            TwoFactorEnabled = false,
                            UserName = "Herman_Christiansen@hotmail.com"
                        },
                        new
                        {
                            Id = "45f722a8-d6ed-462a-b94a-5a00f22a29bc",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5038c58f-2ecc-4b98-9e11-6aab5f73feee",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lester_Bergstrom@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lester",
                            LastName = "Bergstrom",
                            LockoutEnabled = false,
                            NormalizedEmail = "LESTER_BERGSTROM@HOTMAIL.COM",
                            NormalizedUserName = "LESTER_BERGSTROM@HOTMAIL.COM",
                            PasswordHash = "AFBEVMCXVkxs+Ln0HS55BAAHStxCmDV9o2grptGJQREspH2ASj7iY9GtQy31RjXdOg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e5cf9d82-9375-4008-a1f5-0e5adaabe1fd",
                            TwoFactorEnabled = false,
                            UserName = "Lester_Bergstrom@hotmail.com"
                        },
                        new
                        {
                            Id = "c6c9a895-e49d-44ba-8f6e-a286100b1227",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "82c14963-5fc3-4892-923b-3f0a1987c6fb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Johanna_Kautzer76@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Johanna",
                            LastName = "Kautzer",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHANNA_KAUTZER76@YAHOO.COM",
                            NormalizedUserName = "JOHANNA_KAUTZER76@YAHOO.COM",
                            PasswordHash = "APQ4JyTi0wV16cWkW1BCVOuZ93kp8Q5NeDbjtwC0Pzuytw+l25HUU7wr5PY1c8vWpg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cf5197b2-eabd-4929-a9ed-9f4426e86c14",
                            TwoFactorEnabled = false,
                            UserName = "Johanna_Kautzer76@yahoo.com"
                        },
                        new
                        {
                            Id = "a871e5c7-0733-4124-801a-fb0ea09d3971",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9de19c6f-3c00-49ef-88cb-8741fe6b33ed",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Henrietta57@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Henrietta",
                            LastName = "Hane",
                            LockoutEnabled = false,
                            NormalizedEmail = "HENRIETTA57@HOTMAIL.COM",
                            NormalizedUserName = "HENRIETTA57@HOTMAIL.COM",
                            PasswordHash = "AM6qRHJECp/48S1h2pPhD/EEPHPZeV7Ujk2oDUBcatBKjYTKBXb/oZtMWIGqyx1YUQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fabe8182-a7c7-4e85-9c22-e9e26237e549",
                            TwoFactorEnabled = false,
                            UserName = "Henrietta57@hotmail.com"
                        },
                        new
                        {
                            Id = "fe7ac844-1eb9-43f8-a796-c2dca50c5d3d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7c3f2d29-9db9-45d5-9420-bcc6176d9088",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Megan.Bahringer83@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Megan",
                            LastName = "Bahringer",
                            LockoutEnabled = false,
                            NormalizedEmail = "MEGAN.BAHRINGER83@HOTMAIL.COM",
                            NormalizedUserName = "MEGAN.BAHRINGER83@HOTMAIL.COM",
                            PasswordHash = "AERgal/VaXecNAGQpeececEHsO9f+53sMIzckzthA/ryxMpIMban+fn1hF+dp/au2Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3208890c-d430-4c2b-84ce-c15ee63663c4",
                            TwoFactorEnabled = false,
                            UserName = "Megan.Bahringer83@hotmail.com"
                        },
                        new
                        {
                            Id = "1ce051a7-58fb-4f44-b360-63c6cbb31ab6",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1084430e-7f40-439d-a526-9a4c711b2dee",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Patti.Wiegand88@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Patti",
                            LastName = "Wiegand",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATTI.WIEGAND88@YAHOO.COM",
                            NormalizedUserName = "PATTI.WIEGAND88@YAHOO.COM",
                            PasswordHash = "AGU2E3q6mBTpoDFL+xC4ZksXBvEo/kTZ/zraxV6IJc76lfUN6u4/3AOM86MyK3/VPg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "907ab21e-9b0b-425c-a1ce-fe08b5cdf7c3",
                            TwoFactorEnabled = false,
                            UserName = "Patti.Wiegand88@yahoo.com"
                        },
                        new
                        {
                            Id = "3e5cb8d5-786b-4669-ad22-faa1f646a13c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5a2d332a-bb19-4138-9567-de2b0a96c10b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bobbie.Kihn@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Bobbie",
                            LastName = "Kihn",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOBBIE.KIHN@HOTMAIL.COM",
                            NormalizedUserName = "BOBBIE.KIHN@HOTMAIL.COM",
                            PasswordHash = "AEiQ8fz9RmpkCbK7/yieifLodt8woFhRWOD0/pWmDyePyutJgBrHRbvqxapPwbkwnA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "39a0bad4-a991-4f1c-ac6b-bdc1ad56ef97",
                            TwoFactorEnabled = false,
                            UserName = "Bobbie.Kihn@hotmail.com"
                        },
                        new
                        {
                            Id = "bc79a5bb-b25d-4d6c-a13f-37ea4162a6d9",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1bce39bc-20fb-4127-91d4-8fd6fc28f03e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Pat_Rippin@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Pat",
                            LastName = "Rippin",
                            LockoutEnabled = false,
                            NormalizedEmail = "PAT_RIPPIN@YAHOO.COM",
                            NormalizedUserName = "PAT_RIPPIN@YAHOO.COM",
                            PasswordHash = "AOgL0ie8wEWY8bwqpfjQOCaWDZdfaIZPI2D+F4chh7oqZ04HH2UxoAF0Yi6zkBJ5zA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2620e9f9-b1a0-4ba6-ab20-38dabd8a98b8",
                            TwoFactorEnabled = false,
                            UserName = "Pat_Rippin@yahoo.com"
                        },
                        new
                        {
                            Id = "ded6dcfc-1729-407b-8806-642767708015",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e1067813-ca8c-4d71-891f-e873c87e82a2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Guillermo_Wisozk@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Guillermo",
                            LastName = "Wisozk",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUILLERMO_WISOZK@YAHOO.COM",
                            NormalizedUserName = "GUILLERMO_WISOZK@YAHOO.COM",
                            PasswordHash = "APqHfOvk/Soro1wZCKqdmXoginhesqj7fKUIc6faqlopOBqnr7pZFu0a2AP5fpMuiQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "97342ba3-d628-4118-a2b6-288cd2f2c290",
                            TwoFactorEnabled = false,
                            UserName = "Guillermo_Wisozk@yahoo.com"
                        },
                        new
                        {
                            Id = "3b76c08a-dcff-40f2-a6f3-c99796e9ecaa",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "837c8aa5-702c-448f-8ad5-857664d9c271",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wade53@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wade",
                            LastName = "Rempel",
                            LockoutEnabled = false,
                            NormalizedEmail = "WADE53@HOTMAIL.COM",
                            NormalizedUserName = "WADE53@HOTMAIL.COM",
                            PasswordHash = "AEsgO1xpL/EXNpBl+g7/sY7Ie5sOf8+pdNenVGvGyMOA0ptcAXye/HhqsrpbdJwleg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "452e10a5-2be7-4135-9a1f-185147d29066",
                            TwoFactorEnabled = false,
                            UserName = "Wade53@hotmail.com"
                        },
                        new
                        {
                            Id = "04cb22f0-d736-4eb6-9a4a-dc1a5c59cb19",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "759f69fe-93f8-490c-b0fc-a1ed082ecc9c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alberto_Kreiger@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alberto",
                            LastName = "Kreiger",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALBERTO_KREIGER@HOTMAIL.COM",
                            NormalizedUserName = "ALBERTO_KREIGER@HOTMAIL.COM",
                            PasswordHash = "AIJonrcBnRmGuw6Pg4y8euvzhXtMQKR1w390IKwoPMt9vA9tmaUUS4683JWxSB/2MQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e75fe27c-2585-411b-9376-b0d06e5634aa",
                            TwoFactorEnabled = false,
                            UserName = "Alberto_Kreiger@hotmail.com"
                        },
                        new
                        {
                            Id = "2c57e708-748b-470b-8828-6638e1e1c798",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "505daf45-1ff6-4049-a486-ba2f73935d0d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alison_Keebler93@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alison",
                            LastName = "Keebler",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALISON_KEEBLER93@HOTMAIL.COM",
                            NormalizedUserName = "ALISON_KEEBLER93@HOTMAIL.COM",
                            PasswordHash = "AApl3UnVieII0AFbRNWngq1CSf4kd1BR07hLoFgkBblPU3xnQA4BgSmCtb2IbMcerQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e104fc72-c422-4276-8ba1-f68f07e0e55c",
                            TwoFactorEnabled = false,
                            UserName = "Alison_Keebler93@hotmail.com"
                        },
                        new
                        {
                            Id = "9d1484d6-8231-46e1-ba56-2e83cc628929",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e6ae3982-e561-4e6e-ac8d-d60b211b8b14",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Karen_Kuvalis60@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Karen",
                            LastName = "Kuvalis",
                            LockoutEnabled = false,
                            NormalizedEmail = "KAREN_KUVALIS60@GMAIL.COM",
                            NormalizedUserName = "KAREN_KUVALIS60@GMAIL.COM",
                            PasswordHash = "AIYJc/P9zeBZKHowfN2Tnc0CxiHpnfpB+1aw8/sAudzVqmoNpr8Qg8r2VoJpuleDzQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "903d92c0-4f8a-4113-8065-94c7cb759532",
                            TwoFactorEnabled = false,
                            UserName = "Karen_Kuvalis60@gmail.com"
                        },
                        new
                        {
                            Id = "8f154a5f-c7cf-4259-97e1-4de0a928fc90",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1a5a9a79-05e2-442c-87a9-42680c23c090",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sue.Schneider@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sue",
                            LastName = "Schneider",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUE.SCHNEIDER@HOTMAIL.COM",
                            NormalizedUserName = "SUE.SCHNEIDER@HOTMAIL.COM",
                            PasswordHash = "AG+A2J2MMRb7zNec47cRYojMCOe2g5Z11VnCczgeOcEyRb67K0nDT3qROkokd024NQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ebb6d551-3bca-4d9d-8450-30451683bc10",
                            TwoFactorEnabled = false,
                            UserName = "Sue.Schneider@hotmail.com"
                        },
                        new
                        {
                            Id = "b21b08ee-5a0d-4955-9df9-48a6214555ab",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c4c2c35f-4e34-4413-98cf-b0b74dbcbed1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Zachary_Schoen@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zachary",
                            LastName = "Schoen",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZACHARY_SCHOEN@HOTMAIL.COM",
                            NormalizedUserName = "ZACHARY_SCHOEN@HOTMAIL.COM",
                            PasswordHash = "AMh0Levo3+GgT7ibOc/CrJe8ZhqCa+D2BtvGQ0KGToVjLCzTTb3UgxZBlHTTQ7pj0A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91ad669e-9c72-4e13-b682-539d9f482891",
                            TwoFactorEnabled = false,
                            UserName = "Zachary_Schoen@hotmail.com"
                        },
                        new
                        {
                            Id = "137a4112-474b-43e8-b6cf-41740a2fc689",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "91363cc5-6ab7-4497-bf3a-3ca44aef38e3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Naomi.Maggio86@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Naomi",
                            LastName = "Maggio",
                            LockoutEnabled = false,
                            NormalizedEmail = "NAOMI.MAGGIO86@HOTMAIL.COM",
                            NormalizedUserName = "NAOMI.MAGGIO86@HOTMAIL.COM",
                            PasswordHash = "APx3iL3N090vU+8j1OsO5xfcSQ8fsaGC9DVWKM2PYIeQwojpCEqY5mdufNXCH/NsHw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a42d8fb-e4a3-4f33-92e8-52c2f6038459",
                            TwoFactorEnabled = false,
                            UserName = "Naomi.Maggio86@hotmail.com"
                        },
                        new
                        {
                            Id = "e04c62ec-8f9d-44e7-9082-e7e956dbd6bf",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e5fbb94c-8a51-4773-a5fa-23fb82676ca6",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Joey.Grady66@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Joey",
                            LastName = "Grady",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOEY.GRADY66@GMAIL.COM",
                            NormalizedUserName = "JOEY.GRADY66@GMAIL.COM",
                            PasswordHash = "AEZpetvFZZxGmmVb4FmPzzwLTmbNbdLx2TS70XVFCxdSMnMfmanjJh/jM+2aa5whbA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8e27fc1-954e-45fc-a485-ed43b440cb77",
                            TwoFactorEnabled = false,
                            UserName = "Joey.Grady66@gmail.com"
                        },
                        new
                        {
                            Id = "d112a06f-8e4d-4044-9aad-178062911246",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "2906c873-0c5f-483c-b483-f164a71b6ba0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Laura63@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Laura",
                            LastName = "Boyer",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAURA63@HOTMAIL.COM",
                            NormalizedUserName = "LAURA63@HOTMAIL.COM",
                            PasswordHash = "AHqDUlJ60lQQCdrhjSVwGLny/Z3PDdfcOtA3dWdVm36pt/AYCg1Jr/6WNYw5hfQoxw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1193a82-0306-477f-9231-55c1af5b2972",
                            TwoFactorEnabled = false,
                            UserName = "Laura63@hotmail.com"
                        },
                        new
                        {
                            Id = "70ce3c90-0c15-48dc-9dd8-4d49964ae12e",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "3258e71d-9ec3-4924-a92b-c5d844105617",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Fernando.Gerlach44@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Fernando",
                            LastName = "Gerlach",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERNANDO.GERLACH44@HOTMAIL.COM",
                            NormalizedUserName = "FERNANDO.GERLACH44@HOTMAIL.COM",
                            PasswordHash = "AN/3CG47u4Acest1CTV0NxZaQn4a9JUIF9hOMAdldWDK+jzkRtD4rPuPfXi0iXPs3g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1eac8284-23ba-4e28-b5f2-b4339705413e",
                            TwoFactorEnabled = false,
                            UserName = "Fernando.Gerlach44@hotmail.com"
                        },
                        new
                        {
                            Id = "b449f45d-d116-409f-a2e7-ee4804586c17",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "c070aeb0-5433-43c4-9672-8e7474c15f88",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Pat_White10@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Pat",
                            LastName = "White",
                            LockoutEnabled = false,
                            NormalizedEmail = "PAT_WHITE10@HOTMAIL.COM",
                            NormalizedUserName = "PAT_WHITE10@HOTMAIL.COM",
                            PasswordHash = "AHklZIELCRggvxemJG5p6mLz6RnvE1Q9C5BJuD0bPKq0QjGIRBCXSIZqrfALtaEj7w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "913fc5e7-6efb-4111-b077-e00b112c7ac8",
                            TwoFactorEnabled = false,
                            UserName = "Pat_White10@hotmail.com"
                        },
                        new
                        {
                            Id = "e1ce5677-bc86-43b3-a02e-c8b33b509684",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "cf0d0d98-c37c-4eb4-a2af-25d4897ca755",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eileen7@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Eileen",
                            LastName = "Leffler",
                            LockoutEnabled = false,
                            NormalizedEmail = "EILEEN7@GMAIL.COM",
                            NormalizedUserName = "EILEEN7@GMAIL.COM",
                            PasswordHash = "AJdx+g2DvZ227uRUvUSMT016ZtKtUPBn9Yy0HSJgKA4ds952p7fYxP4MiXNfTsz+ow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8164a83c-54b0-4fc3-8d95-025e47bf29df",
                            TwoFactorEnabled = false,
                            UserName = "Eileen7@gmail.com"
                        },
                        new
                        {
                            Id = "6adaf8d9-00bd-448a-943d-06400f673f7a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "91052bc7-3afb-4086-b4df-5e3c6e78aa54",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brenda_Waelchi89@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Brenda",
                            LastName = "Waelchi",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRENDA_WAELCHI89@GMAIL.COM",
                            NormalizedUserName = "BRENDA_WAELCHI89@GMAIL.COM",
                            PasswordHash = "APn1+oa6TbyoWgDRX/x3TpjRuFF8pVE0QWFYhzgrWErZDdxoU5s4SziE/JMHLm+9Mg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fb4a118d-dcd7-45c0-aaa2-7e0a074409a8",
                            TwoFactorEnabled = false,
                            UserName = "Brenda_Waelchi89@gmail.com"
                        },
                        new
                        {
                            Id = "4ee607fe-f560-452d-a33d-96f99d829909",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5db264a9-00e6-4ce4-84e2-38b404dcfccc",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Fred96@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Fred",
                            LastName = "Haag",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRED96@GMAIL.COM",
                            NormalizedUserName = "FRED96@GMAIL.COM",
                            PasswordHash = "ALOAjAGsT4ZpgRe77gvFqxSlX5gXlTOrpzP/U8O4n+lzida8fTWiVnXJquSJ9blLXA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "087c3dfa-04e0-4209-8811-c5a1939cfaeb",
                            TwoFactorEnabled = false,
                            UserName = "Fred96@gmail.com"
                        },
                        new
                        {
                            Id = "f85bf20b-f70f-4641-861e-dd2b1b1e9cfb",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "240bf08c-a31b-41f2-bab6-487837f8d690",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Betsy42@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Betsy",
                            LastName = "Satterfield",
                            LockoutEnabled = false,
                            NormalizedEmail = "BETSY42@GMAIL.COM",
                            NormalizedUserName = "BETSY42@GMAIL.COM",
                            PasswordHash = "AFDmtCiMEjfll7N4h8CmUvIqjZHkdSUAVnDi/kPIVhKgsaP4NBsUKak/GWeZNWmbHg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f5d7946a-72c2-42db-99d9-d94ed776bd0f",
                            TwoFactorEnabled = false,
                            UserName = "Betsy42@gmail.com"
                        },
                        new
                        {
                            Id = "83006806-3b11-4e38-ade1-066208151af4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "342c2435-4cee-4fd1-bac9-66dbf4e69f54",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Arlene_Feest@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Arlene",
                            LastName = "Feest",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARLENE_FEEST@YAHOO.COM",
                            NormalizedUserName = "ARLENE_FEEST@YAHOO.COM",
                            PasswordHash = "AH26p6k5dclnZTliUWIS7MDnaU7vIsMt3dkmFdbL31EwJ8j6Tp9svWAPSXM5IiG1eQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "647e6bec-43db-4ea5-96d4-2b21ee5c0304",
                            TwoFactorEnabled = false,
                            UserName = "Arlene_Feest@yahoo.com"
                        },
                        new
                        {
                            Id = "deeb3ca7-1159-488c-8687-70ea52106fbe",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7cbe78d2-99e0-4e0c-9d9a-ba41992053f1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Earl.Welch54@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Earl",
                            LastName = "Welch",
                            LockoutEnabled = false,
                            NormalizedEmail = "EARL.WELCH54@YAHOO.COM",
                            NormalizedUserName = "EARL.WELCH54@YAHOO.COM",
                            PasswordHash = "APAO2JjoAA4u3E6qoTlSeTirFk93BvvJ/s71uPWCQmEERiAdqpvrl3nr5/I3KHwcPw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "68a47680-21ee-4527-9ec8-e33c635c1d39",
                            TwoFactorEnabled = false,
                            UserName = "Earl.Welch54@yahoo.com"
                        },
                        new
                        {
                            Id = "e20ebf82-e447-4cf4-8ab0-c5b3c1810f74",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "317c21fb-b43e-423b-83aa-96cde9b0939f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Fernando53@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Fernando",
                            LastName = "Senger",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERNANDO53@GMAIL.COM",
                            NormalizedUserName = "FERNANDO53@GMAIL.COM",
                            PasswordHash = "AMgIQBw8tkYPiOcYifadFAj6+BpNXk7dZFueS7k8koFJ8g3u58JoRjQZVUFv5J0ZnQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ff60808-8cf5-4a90-a724-5c4074422787",
                            TwoFactorEnabled = false,
                            UserName = "Fernando53@gmail.com"
                        },
                        new
                        {
                            Id = "f63dc90c-465b-4157-a8d1-8ff54736d9cb",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9f917c80-37e7-4c8f-b973-8dead1b6bebe",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ella.Heller@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ella",
                            LastName = "Heller",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELLA.HELLER@GMAIL.COM",
                            NormalizedUserName = "ELLA.HELLER@GMAIL.COM",
                            PasswordHash = "APdKgiRBIsbQKn9Ek3BQ+onW/0dx5TRT83eaGs+9YRDsrrITVboQS979yin9X0YNxg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd45a70b-f4c3-47a5-9f75-f8a6ade1187d",
                            TwoFactorEnabled = false,
                            UserName = "Ella.Heller@gmail.com"
                        },
                        new
                        {
                            Id = "74afca61-8921-485e-a50c-4909f64823a3",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "afa23abd-cbf0-4356-ae48-22c39c335506",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cristina56@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Cristina",
                            LastName = "Paucek",
                            LockoutEnabled = false,
                            NormalizedEmail = "CRISTINA56@HOTMAIL.COM",
                            NormalizedUserName = "CRISTINA56@HOTMAIL.COM",
                            PasswordHash = "AKY4GkQG2K8FbmxrkMMhEz254tPHGH6VB2A1t9LoWxAPFSk8dsAZ0+2PGYhEQQ0D8A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b32daf69-da98-4c7b-8543-cdb562f36994",
                            TwoFactorEnabled = false,
                            UserName = "Cristina56@hotmail.com"
                        },
                        new
                        {
                            Id = "157448a9-6bfc-44a8-8949-00d55f0cf106",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1d4b4ff1-4c45-44d8-8f61-79dd06ba93f5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Allan_Zboncak@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Allan",
                            LastName = "Zboncak",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALLAN_ZBONCAK@YAHOO.COM",
                            NormalizedUserName = "ALLAN_ZBONCAK@YAHOO.COM",
                            PasswordHash = "AFsEDEJKIJ1aCT9AmL51Xqd4jKEVu7nxmakmVBlUkYUPSFMFeGmFq862Tj1w3FKNXw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3aa65f86-b469-4a24-b227-439b519eaded",
                            TwoFactorEnabled = false,
                            UserName = "Allan_Zboncak@yahoo.com"
                        },
                        new
                        {
                            Id = "eaf38669-9232-4bdf-a42b-0be01f42d17c",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "a98a90c5-91fc-4f4a-b949-33370588374b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Guillermo.Homenick28@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Guillermo",
                            LastName = "Homenick",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUILLERMO.HOMENICK28@YAHOO.COM",
                            NormalizedUserName = "GUILLERMO.HOMENICK28@YAHOO.COM",
                            PasswordHash = "AAig8fKsmvAHkVOBhuEls/MtaUCSVqWwwi6xjhlRi8mGFk8J0szFfc0wgugkVnUweg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f428d50-769d-4c5d-abbc-9006e18a17a5",
                            TwoFactorEnabled = false,
                            UserName = "Guillermo.Homenick28@yahoo.com"
                        },
                        new
                        {
                            Id = "c70735fd-7815-4690-9df2-221392f96826",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b90ee8ec-fa9c-4f28-a0b1-9293a2048a5d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nichole0@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nichole",
                            LastName = "Smith",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICHOLE0@GMAIL.COM",
                            NormalizedUserName = "NICHOLE0@GMAIL.COM",
                            PasswordHash = "AJKSlquZI+XDKjQUP0jJitPHzVDuvoL3qc6AvpjRf5LGGdhcNyJ94OBxQd3pNQrMnA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f761f02c-95dd-456a-9740-853c0ba325bd",
                            TwoFactorEnabled = false,
                            UserName = "Nichole0@gmail.com"
                        },
                        new
                        {
                            Id = "9d08f0fb-be8b-428a-9bf1-7987706187e7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "50bb810d-67d2-4b5c-90f8-3f96c9478d16",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alfredo.Roberts@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alfredo",
                            LastName = "Roberts",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALFREDO.ROBERTS@GMAIL.COM",
                            NormalizedUserName = "ALFREDO.ROBERTS@GMAIL.COM",
                            PasswordHash = "AKbkIMkbee4OBSfnXvvA1Y/UIRhwpvZqyR1kTjCl8jgnApBwpkmzMqK8MgRl2PCZhA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "03842328-7470-4177-a869-59d80bb8486e",
                            TwoFactorEnabled = false,
                            UserName = "Alfredo.Roberts@gmail.com"
                        },
                        new
                        {
                            Id = "c268e84c-c4b9-4cce-9fad-7a50e7de1c39",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b0f41213-9ae7-49fe-8904-f042b8232b1b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kevin97@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kevin",
                            LastName = "Kuhlman",
                            LockoutEnabled = false,
                            NormalizedEmail = "KEVIN97@HOTMAIL.COM",
                            NormalizedUserName = "KEVIN97@HOTMAIL.COM",
                            PasswordHash = "ALMufKJX+nWH7ygeIOqC9+YUInoJ3+SwiKCl+vhKMQyrzm6jN4QsqPDt5moi9Nsmtw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3563ace7-4431-4a2c-be4b-066bca266b75",
                            TwoFactorEnabled = false,
                            UserName = "Kevin97@hotmail.com"
                        },
                        new
                        {
                            Id = "632e4d14-c323-454d-84ae-fc770f0e8c19",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "3d40ebe3-7763-4e4c-9f2b-f5785ff02306",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rochelle.Wyman79@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rochelle",
                            LastName = "Wyman",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROCHELLE.WYMAN79@HOTMAIL.COM",
                            NormalizedUserName = "ROCHELLE.WYMAN79@HOTMAIL.COM",
                            PasswordHash = "ANiMBuiU73QywbVdAGmab9yRG6OoibmZ36EWOdMf6SQkwbbY15aMXGs29mgHRg8JsA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b948437-dcc0-4594-bfc3-68e74c1be50a",
                            TwoFactorEnabled = false,
                            UserName = "Rochelle.Wyman79@hotmail.com"
                        },
                        new
                        {
                            Id = "f8dc1a85-39da-4cb2-b5b3-9e32e35ab988",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "39781356-7540-4df3-a041-1aa00fc2dd05",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Al_Boyer@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Al",
                            LastName = "Boyer",
                            LockoutEnabled = false,
                            NormalizedEmail = "AL_BOYER@YAHOO.COM",
                            NormalizedUserName = "AL_BOYER@YAHOO.COM",
                            PasswordHash = "AA+doyc5vzC+swj1fiHDD5u+NYzFZfnWW31duO3l2gg3dtA0uJaZEwVKq6NV58Mwig==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87b33fc3-2758-4c30-a25a-3e505ba37972",
                            TwoFactorEnabled = false,
                            UserName = "Al_Boyer@yahoo.com"
                        },
                        new
                        {
                            Id = "eb2a6164-1f2e-4b76-96e3-592071683630",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e1f4de89-0311-4b66-bb9e-75eb55e434e2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Stuart30@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Stuart",
                            LastName = "Larson",
                            LockoutEnabled = false,
                            NormalizedEmail = "STUART30@YAHOO.COM",
                            NormalizedUserName = "STUART30@YAHOO.COM",
                            PasswordHash = "AF9ssLBDIVSQ8cP+lKBcLHLKFaZr248bJ7LMpc3B4xuud/wK/fNsSl3EHeoDizUcgQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f89b89b-f8cb-42ef-8ab5-8e1e00a77a96",
                            TwoFactorEnabled = false,
                            UserName = "Stuart30@yahoo.com"
                        },
                        new
                        {
                            Id = "3fcd094d-fe33-4cf7-8728-a69be13eb323",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "a3bbe829-882a-4d56-97b6-20f60c865b0b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Myron.Schmeler@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Myron",
                            LastName = "Schmeler",
                            LockoutEnabled = false,
                            NormalizedEmail = "MYRON.SCHMELER@YAHOO.COM",
                            NormalizedUserName = "MYRON.SCHMELER@YAHOO.COM",
                            PasswordHash = "ABp7RT4Qj0M4U4ygDqTR3bZZ77/aQx5gqAUEzxMQwJKTLWGScO1hT0d8UOFAniOptg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0bb23841-c42d-40f2-a669-c294154a92ab",
                            TwoFactorEnabled = false,
                            UserName = "Myron.Schmeler@yahoo.com"
                        },
                        new
                        {
                            Id = "c7beaffb-22ab-4145-bf4f-c16ec16a4d84",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "27ff8e45-6ed2-4824-a089-db3273930a66",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jimmy14@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jimmy",
                            LastName = "Lowe",
                            LockoutEnabled = false,
                            NormalizedEmail = "JIMMY14@GMAIL.COM",
                            NormalizedUserName = "JIMMY14@GMAIL.COM",
                            PasswordHash = "ACji9luWUxb/0/83SPf20jStvm9bv0RyD2ok+aeEWLrBlQdMVssFbkzpt7apk8QPxw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d9a84bc4-b252-44b9-b1b0-7b4b09854514",
                            TwoFactorEnabled = false,
                            UserName = "Jimmy14@gmail.com"
                        },
                        new
                        {
                            Id = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "278541c0-b3ec-4acb-aaa2-ed13353af16a",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Randolph.Kreiger15@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Randolph",
                            LastName = "Kreiger",
                            LockoutEnabled = false,
                            NormalizedEmail = "RANDOLPH.KREIGER15@HOTMAIL.COM",
                            NormalizedUserName = "RANDOLPH.KREIGER15@HOTMAIL.COM",
                            PasswordHash = "ABT3qstY+PFmxy+7YoM7VUxEVqMeQgVrlre0dl+jXcQDdO7ArfRmrTsr1wkHuqkmsQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2709849e-a1dd-4ef7-a454-66dbb4a6a68d",
                            TwoFactorEnabled = false,
                            UserName = "Randolph.Kreiger15@hotmail.com"
                        },
                        new
                        {
                            Id = "e976aa09-62d0-4d43-9a85-b3c6328ac75b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "ebda0751-6562-447f-89de-3380465a94ea",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Scott.Douglas86@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Scott",
                            LastName = "Douglas",
                            LockoutEnabled = false,
                            NormalizedEmail = "SCOTT.DOUGLAS86@YAHOO.COM",
                            NormalizedUserName = "SCOTT.DOUGLAS86@YAHOO.COM",
                            PasswordHash = "APpT2CsQbFvgw9BfTtFe04Z7DImpYY2eMrCIG8Zrih2IekHq7X5wRg00Plier3pzvA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d0d3d51-e64f-4c02-880f-4410440ae570",
                            TwoFactorEnabled = false,
                            UserName = "Scott.Douglas86@yahoo.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "1010 Aidan Cliffs, Rosendomouth, El Salvador",
                            Email = "Bill95@gmail.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "f521279c-a6cd-4676-bd1e-13c566729fb2",
                            DepartmentID = 4,
                            Email = "Amber_Cronin@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Amber",
                            HourlyRate = 199.352841167409360m,
                            IdentificationNumber = "3215",
                            IsActive = true,
                            LastName = "Cronin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 8, 27, 20, 49, 2, 977, DateTimeKind.Unspecified).AddTicks(6485),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "6be611ed-5965-4645-ad54-49081b396a08",
                            DepartmentID = 4,
                            Email = "Daniel_Schamberger@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Daniel",
                            HourlyRate = 197.837629433645690m,
                            IdentificationNumber = "9918",
                            IsActive = true,
                            LastName = "Schamberger",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 27, 6, 10, 51, 292, DateTimeKind.Unspecified).AddTicks(8290),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "755de770-7de1-48db-b7c1-1887177937cf",
                            DepartmentID = 4,
                            Email = "Sally_OConnell@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sally",
                            HourlyRate = 190.5939387393155780m,
                            IdentificationNumber = "5268",
                            IsActive = true,
                            LastName = "O'Connell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 9, 14, 14, 51, 37, 800, DateTimeKind.Unspecified).AddTicks(3115),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "591f8422-8282-4411-8ff9-3636a2a026f0",
                            DepartmentID = 4,
                            Email = "Brooke19@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Brooke",
                            HourlyRate = 197.527081392485220m,
                            IdentificationNumber = "1690",
                            IsActive = true,
                            LastName = "Mante",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 7, 23, 14, 24, 46, 488, DateTimeKind.Unspecified).AddTicks(6823),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "2e2591ee-68c3-4712-9c5b-97ee1f5a67bd",
                            DepartmentID = 4,
                            Email = "Antonia.Casper62@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Antonia",
                            HourlyRate = 197.548477797558750m,
                            IdentificationNumber = "8740",
                            IsActive = true,
                            LastName = "Casper",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 2, 13, 0, 23, 7, 369, DateTimeKind.Unspecified).AddTicks(3850),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "2cf041c9-180d-4016-bc3f-ac1da78324c6",
                            DepartmentID = 4,
                            Email = "Herman_Christiansen@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Herman",
                            HourlyRate = 190.4186320260253880m,
                            IdentificationNumber = "9263",
                            IsActive = true,
                            LastName = "Christiansen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2020, 12, 3, 2, 9, 42, 92, DateTimeKind.Unspecified).AddTicks(7696),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "45f722a8-d6ed-462a-b94a-5a00f22a29bc",
                            DepartmentID = 4,
                            Email = "Lester_Bergstrom@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lester",
                            HourlyRate = 197.16123404780460m,
                            IdentificationNumber = "1652",
                            IsActive = true,
                            LastName = "Bergstrom",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2021, 12, 24, 4, 16, 3, 201, DateTimeKind.Unspecified).AddTicks(5996),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "c6c9a895-e49d-44ba-8f6e-a286100b1227",
                            DepartmentID = 1,
                            Email = "Johanna_Kautzer76@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Johanna",
                            HourlyRate = 190.9844739972541450m,
                            IdentificationNumber = "8733",
                            IsActive = true,
                            LastName = "Kautzer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 28, 18, 45, 42, 873, DateTimeKind.Unspecified).AddTicks(2144),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "a871e5c7-0733-4124-801a-fb0ea09d3971",
                            DepartmentID = 1,
                            Email = "Henrietta57@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Henrietta",
                            HourlyRate = 198.742714705291540m,
                            IdentificationNumber = "2988",
                            IsActive = true,
                            LastName = "Hane",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 12, 1, 3, 36, 55, 30, DateTimeKind.Unspecified).AddTicks(2332),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "fe7ac844-1eb9-43f8-a796-c2dca50c5d3d",
                            DepartmentID = 1,
                            Email = "Megan.Bahringer83@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Megan",
                            HourlyRate = 198.467489647896720m,
                            IdentificationNumber = "8993",
                            IsActive = true,
                            LastName = "Bahringer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 12, 28, 17, 1, 53, 583, DateTimeKind.Unspecified).AddTicks(9623),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "1ce051a7-58fb-4f44-b360-63c6cbb31ab6",
                            DepartmentID = 1,
                            Email = "Patti.Wiegand88@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Patti",
                            HourlyRate = 197.797566753717870m,
                            IdentificationNumber = "9870",
                            IsActive = true,
                            LastName = "Wiegand",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 6, 24, 18, 49, 45, 679, DateTimeKind.Unspecified).AddTicks(3552),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "3e5cb8d5-786b-4669-ad22-faa1f646a13c",
                            DepartmentID = 1,
                            Email = "Bobbie.Kihn@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Bobbie",
                            HourlyRate = 196.728418593634120m,
                            IdentificationNumber = "5174",
                            IsActive = true,
                            LastName = "Kihn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 9, 1, 22, 57, 224, DateTimeKind.Unspecified).AddTicks(5266),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "bc79a5bb-b25d-4d6c-a13f-37ea4162a6d9",
                            DepartmentID = 1,
                            Email = "Pat_Rippin@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Pat",
                            HourlyRate = 191.751698172535610m,
                            IdentificationNumber = "6861",
                            IsActive = true,
                            LastName = "Rippin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 7, 2, 4, 27, 42, 133, DateTimeKind.Unspecified).AddTicks(4074),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "ded6dcfc-1729-407b-8806-642767708015",
                            DepartmentID = 1,
                            Email = "Guillermo_Wisozk@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Guillermo",
                            HourlyRate = 197.66227410997370m,
                            IdentificationNumber = "6321",
                            IsActive = true,
                            LastName = "Wisozk",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 14, 20, 27, 55, 599, DateTimeKind.Unspecified).AddTicks(4207),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "3b76c08a-dcff-40f2-a6f3-c99796e9ecaa",
                            DepartmentID = 1,
                            Email = "Wade53@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wade",
                            HourlyRate = 196.697028701518210m,
                            IdentificationNumber = "6823",
                            IsActive = true,
                            LastName = "Rempel",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 7, 22, 17, 48, 26, 436, DateTimeKind.Unspecified).AddTicks(1626),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "04cb22f0-d736-4eb6-9a4a-dc1a5c59cb19",
                            DepartmentID = 1,
                            Email = "Alberto_Kreiger@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alberto",
                            HourlyRate = 196.356326894069240m,
                            IdentificationNumber = "9151",
                            IsActive = true,
                            LastName = "Kreiger",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 3, 10, 5, 58, 44, 876, DateTimeKind.Unspecified).AddTicks(248),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "2c57e708-748b-470b-8828-6638e1e1c798",
                            DepartmentID = 1,
                            Email = "Alison_Keebler93@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alison",
                            HourlyRate = 197.455390033989860m,
                            IdentificationNumber = "3805",
                            IsActive = true,
                            LastName = "Keebler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 5, 7, 15, 2, 3, 782, DateTimeKind.Unspecified).AddTicks(3091),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "9d1484d6-8231-46e1-ba56-2e83cc628929",
                            DepartmentID = 1,
                            Email = "Karen_Kuvalis60@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Karen",
                            HourlyRate = 197.530310460147590m,
                            IdentificationNumber = "2243",
                            IsActive = true,
                            LastName = "Kuvalis",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 6, 5, 4, 56, 45, 604, DateTimeKind.Unspecified).AddTicks(1708),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "8f154a5f-c7cf-4259-97e1-4de0a928fc90",
                            DepartmentID = 3,
                            Email = "Sue.Schneider@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sue",
                            HourlyRate = 193.190725740599780m,
                            IdentificationNumber = "2396",
                            IsActive = true,
                            LastName = "Schneider",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 12, 9, 17, 47, 526, DateTimeKind.Unspecified).AddTicks(2773),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "b21b08ee-5a0d-4955-9df9-48a6214555ab",
                            DepartmentID = 3,
                            Email = "Zachary_Schoen@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Zachary",
                            HourlyRate = 192.516712687218890m,
                            IdentificationNumber = "8075",
                            IsActive = true,
                            LastName = "Schoen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 3, 18, 15, 30, 15, 222, DateTimeKind.Unspecified).AddTicks(1459),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "137a4112-474b-43e8-b6cf-41740a2fc689",
                            DepartmentID = 3,
                            Email = "Naomi.Maggio86@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Naomi",
                            HourlyRate = 198.704200721673760m,
                            IdentificationNumber = "5711",
                            IsActive = true,
                            LastName = "Maggio",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 7, 3, 1, 14, 54, 906, DateTimeKind.Unspecified).AddTicks(5490),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "e04c62ec-8f9d-44e7-9082-e7e956dbd6bf",
                            DepartmentID = 3,
                            Email = "Joey.Grady66@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Joey",
                            HourlyRate = 199.043196374104910m,
                            IdentificationNumber = "1358",
                            IsActive = true,
                            LastName = "Grady",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 29, 14, 37, 2, 885, DateTimeKind.Unspecified).AddTicks(6292),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "d112a06f-8e4d-4044-9aad-178062911246",
                            DepartmentID = 3,
                            Email = "Laura63@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Laura",
                            HourlyRate = 190.802847892419830m,
                            IdentificationNumber = "4304",
                            IsActive = true,
                            LastName = "Boyer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 6, 9, 35, 53, 58, DateTimeKind.Unspecified).AddTicks(2325),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "70ce3c90-0c15-48dc-9dd8-4d49964ae12e",
                            DepartmentID = 3,
                            Email = "Fernando.Gerlach44@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Fernando",
                            HourlyRate = 199.839673275053350m,
                            IdentificationNumber = "8884",
                            IsActive = true,
                            LastName = "Gerlach",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 1, 14, 0, 41, 42, 482, DateTimeKind.Unspecified).AddTicks(1897),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "b449f45d-d116-409f-a2e7-ee4804586c17",
                            DepartmentID = 3,
                            Email = "Pat_White10@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Pat",
                            HourlyRate = 196.996481519656480m,
                            IdentificationNumber = "5513",
                            IsActive = true,
                            LastName = "White",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 5, 5, 4, 26, 27, 632, DateTimeKind.Unspecified).AddTicks(4490),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "e1ce5677-bc86-43b3-a02e-c8b33b509684",
                            DepartmentID = 3,
                            Email = "Eileen7@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Eileen",
                            HourlyRate = 196.546679882587250m,
                            IdentificationNumber = "1801",
                            IsActive = true,
                            LastName = "Leffler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 14, 15, 18, 30, 999, DateTimeKind.Unspecified).AddTicks(656),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "6adaf8d9-00bd-448a-943d-06400f673f7a",
                            DepartmentID = 3,
                            Email = "Brenda_Waelchi89@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Brenda",
                            HourlyRate = 191.026429450617370m,
                            IdentificationNumber = "1692",
                            IsActive = true,
                            LastName = "Waelchi",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 2, 12, 21, 49, 15, 181, DateTimeKind.Unspecified).AddTicks(7791),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "4ee607fe-f560-452d-a33d-96f99d829909",
                            DepartmentID = 3,
                            Email = "Fred96@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Fred",
                            HourlyRate = 194.218671440248690m,
                            IdentificationNumber = "8854",
                            IsActive = true,
                            LastName = "Haag",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 6, 9, 6, 41, 11, 312, DateTimeKind.Unspecified).AddTicks(8371),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "f85bf20b-f70f-4641-861e-dd2b1b1e9cfb",
                            DepartmentID = 3,
                            Email = "Betsy42@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Betsy",
                            HourlyRate = 196.099911539861890m,
                            IdentificationNumber = "3370",
                            IsActive = true,
                            LastName = "Satterfield",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 8, 1, 6, 41, 10, 12, DateTimeKind.Unspecified).AddTicks(8032),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "83006806-3b11-4e38-ade1-066208151af4",
                            DepartmentID = 3,
                            Email = "Arlene_Feest@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Arlene",
                            HourlyRate = 190.9334278995792510m,
                            IdentificationNumber = "7187",
                            IsActive = true,
                            LastName = "Feest",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 18, 0, 39, 15, 815, DateTimeKind.Unspecified).AddTicks(3891),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "deeb3ca7-1159-488c-8687-70ea52106fbe",
                            DepartmentID = 3,
                            Email = "Earl.Welch54@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Earl",
                            HourlyRate = 199.574965555022920m,
                            IdentificationNumber = "9935",
                            IsActive = true,
                            LastName = "Welch",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 21, 1, 28, 33, 573, DateTimeKind.Unspecified).AddTicks(3283),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "e20ebf82-e447-4cf4-8ab0-c5b3c1810f74",
                            DepartmentID = 3,
                            Email = "Fernando53@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Fernando",
                            HourlyRate = 192.385299593389640m,
                            IdentificationNumber = "3267",
                            IsActive = true,
                            LastName = "Senger",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 20, 0, 56, 12, 466, DateTimeKind.Unspecified).AddTicks(9028),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "f63dc90c-465b-4157-a8d1-8ff54736d9cb",
                            DepartmentID = 3,
                            Email = "Ella.Heller@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ella",
                            HourlyRate = 194.641657008156950m,
                            IdentificationNumber = "5145",
                            IsActive = true,
                            LastName = "Heller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 1, 28, 19, 57, 47, 796, DateTimeKind.Unspecified).AddTicks(7296),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "74afca61-8921-485e-a50c-4909f64823a3",
                            DepartmentID = 3,
                            Email = "Cristina56@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Cristina",
                            HourlyRate = 190.4885816483239560m,
                            IdentificationNumber = "5162",
                            IsActive = true,
                            LastName = "Paucek",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 7, 31, 0, 53, 51, 108, DateTimeKind.Unspecified).AddTicks(9591),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "157448a9-6bfc-44a8-8949-00d55f0cf106",
                            DepartmentID = 3,
                            Email = "Allan_Zboncak@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Allan",
                            HourlyRate = 195.193733854775190m,
                            IdentificationNumber = "5536",
                            IsActive = true,
                            LastName = "Zboncak",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 8, 9, 8, 15, 3, 277, DateTimeKind.Unspecified).AddTicks(490),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "eaf38669-9232-4bdf-a42b-0be01f42d17c",
                            DepartmentID = 3,
                            Email = "Guillermo.Homenick28@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Guillermo",
                            HourlyRate = 193.808230652384570m,
                            IdentificationNumber = "9690",
                            IsActive = true,
                            LastName = "Homenick",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 28, 10, 33, 45, 363, DateTimeKind.Unspecified).AddTicks(2059),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "c70735fd-7815-4690-9df2-221392f96826",
                            DepartmentID = 3,
                            Email = "Nichole0@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Nichole",
                            HourlyRate = 197.294092959395650m,
                            IdentificationNumber = "1227",
                            IsActive = true,
                            LastName = "Smith",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 26, 19, 30, 32, 635, DateTimeKind.Unspecified).AddTicks(5861),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "9d08f0fb-be8b-428a-9bf1-7987706187e7",
                            DepartmentID = 3,
                            Email = "Alfredo.Roberts@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alfredo",
                            HourlyRate = 199.560083937626370m,
                            IdentificationNumber = "6601",
                            IsActive = true,
                            LastName = "Roberts",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 7, 25, 20, 24, 5, 564, DateTimeKind.Unspecified).AddTicks(6549),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "c268e84c-c4b9-4cce-9fad-7a50e7de1c39",
                            DepartmentID = 3,
                            Email = "Kevin97@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Kevin",
                            HourlyRate = 197.42294277410160m,
                            IdentificationNumber = "1537",
                            IsActive = true,
                            LastName = "Kuhlman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 6, 16, 1, 33, 9, 502, DateTimeKind.Unspecified).AddTicks(5722),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "632e4d14-c323-454d-84ae-fc770f0e8c19",
                            DepartmentID = 3,
                            Email = "Rochelle.Wyman79@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rochelle",
                            HourlyRate = 193.532962213984210m,
                            IdentificationNumber = "2305",
                            IsActive = true,
                            LastName = "Wyman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 8, 24, 20, 14, 22, 250, DateTimeKind.Unspecified).AddTicks(3306),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "f8dc1a85-39da-4cb2-b5b3-9e32e35ab988",
                            DepartmentID = 3,
                            Email = "Al_Boyer@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Al",
                            HourlyRate = 190.1256879047144610m,
                            IdentificationNumber = "6655",
                            IsActive = true,
                            LastName = "Boyer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 9, 22, 23, 59, 55, 816, DateTimeKind.Unspecified).AddTicks(6108),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "eb2a6164-1f2e-4b76-96e3-592071683630",
                            DepartmentID = 3,
                            Email = "Stuart30@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Stuart",
                            HourlyRate = 193.788724692440m,
                            IdentificationNumber = "6346",
                            IsActive = true,
                            LastName = "Larson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 15, 2, 57, 11, 270, DateTimeKind.Unspecified).AddTicks(8675),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "3fcd094d-fe33-4cf7-8728-a69be13eb323",
                            DepartmentID = 1,
                            Email = "Myron.Schmeler@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Myron",
                            HourlyRate = 193.45763701175230m,
                            IdentificationNumber = "9732",
                            IsActive = true,
                            LastName = "Schmeler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 7, 31, 6, 44, 24, 909, DateTimeKind.Unspecified).AddTicks(6489),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "c7beaffb-22ab-4145-bf4f-c16ec16a4d84",
                            DepartmentID = 2,
                            Email = "Jimmy14@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jimmy",
                            HourlyRate = 198.610372910560280m,
                            IdentificationNumber = "6523",
                            IsActive = true,
                            LastName = "Lowe",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 12, 25, 22, 29, 15, 49, DateTimeKind.Unspecified).AddTicks(656),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            DepartmentID = 5,
                            Email = "Randolph.Kreiger15@hotmail.com",
                            EmployeeStatus = 0,
                            FirstName = "Randolph",
                            HourlyRate = 191.91857128027760m,
                            IdentificationNumber = "4362",
                            IsActive = true,
                            LastName = "Kreiger",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 16, 9, 53, 41, 909, DateTimeKind.Unspecified).AddTicks(551),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "e976aa09-62d0-4d43-9a85-b3c6328ac75b",
                            DepartmentID = 6,
                            Email = "Scott.Douglas86@yahoo.com",
                            EmployeeStatus = 1,
                            FirstName = "Scott",
                            HourlyRate = 195.126984615403690m,
                            IdentificationNumber = "9323",
                            IsActive = true,
                            LastName = "Douglas",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 7, 12, 54, 34, 868, DateTimeKind.Unspecified).AddTicks(7645),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "03efe6b4-0645-4831-adf2-8fdb00f4743e",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "b1c1b88b-e28f-493d-b51c-43567fa0b1a3",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "512260c0-3ea6-45f1-9b46-0361360e02bd",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "bc9c8aaf-6526-4a9e-8a51-0364bd9d6993",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "cec4d98f-8f7b-42e0-8e85-1665b7f0206c",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "51415179-8f29-4ab2-a6f4-07ce6762b7a3",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "5d514937-5afb-447b-b9b9-ecdc8fc85cb6",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "5946a65d-a39d-4aa0-a8cc-284acfb09c22",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "57f49665-3223-49c4-820e-0241dd9b09e1",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1e80c629-cc52-4cdb-86f6-701d7dafabc1",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "f521279c-a6cd-4676-bd1e-13c566729fb2",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "f521279c-a6cd-4676-bd1e-13c566729fb2",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6be611ed-5965-4645-ad54-49081b396a08",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "6be611ed-5965-4645-ad54-49081b396a08",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "755de770-7de1-48db-b7c1-1887177937cf",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "755de770-7de1-48db-b7c1-1887177937cf",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "591f8422-8282-4411-8ff9-3636a2a026f0",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "591f8422-8282-4411-8ff9-3636a2a026f0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2e2591ee-68c3-4712-9c5b-97ee1f5a67bd",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "2e2591ee-68c3-4712-9c5b-97ee1f5a67bd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2cf041c9-180d-4016-bc3f-ac1da78324c6",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "2cf041c9-180d-4016-bc3f-ac1da78324c6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "45f722a8-d6ed-462a-b94a-5a00f22a29bc",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "45f722a8-d6ed-462a-b94a-5a00f22a29bc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c6c9a895-e49d-44ba-8f6e-a286100b1227",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "c6c9a895-e49d-44ba-8f6e-a286100b1227",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a871e5c7-0733-4124-801a-fb0ea09d3971",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "a871e5c7-0733-4124-801a-fb0ea09d3971",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fe7ac844-1eb9-43f8-a796-c2dca50c5d3d",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "fe7ac844-1eb9-43f8-a796-c2dca50c5d3d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1ce051a7-58fb-4f44-b360-63c6cbb31ab6",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "1ce051a7-58fb-4f44-b360-63c6cbb31ab6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3e5cb8d5-786b-4669-ad22-faa1f646a13c",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3e5cb8d5-786b-4669-ad22-faa1f646a13c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bc79a5bb-b25d-4d6c-a13f-37ea4162a6d9",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "bc79a5bb-b25d-4d6c-a13f-37ea4162a6d9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ded6dcfc-1729-407b-8806-642767708015",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "ded6dcfc-1729-407b-8806-642767708015",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3b76c08a-dcff-40f2-a6f3-c99796e9ecaa",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3b76c08a-dcff-40f2-a6f3-c99796e9ecaa",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "04cb22f0-d736-4eb6-9a4a-dc1a5c59cb19",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "04cb22f0-d736-4eb6-9a4a-dc1a5c59cb19",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2c57e708-748b-470b-8828-6638e1e1c798",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "2c57e708-748b-470b-8828-6638e1e1c798",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9d1484d6-8231-46e1-ba56-2e83cc628929",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "9d1484d6-8231-46e1-ba56-2e83cc628929",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8f154a5f-c7cf-4259-97e1-4de0a928fc90",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8f154a5f-c7cf-4259-97e1-4de0a928fc90",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b21b08ee-5a0d-4955-9df9-48a6214555ab",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b21b08ee-5a0d-4955-9df9-48a6214555ab",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "137a4112-474b-43e8-b6cf-41740a2fc689",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "137a4112-474b-43e8-b6cf-41740a2fc689",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e04c62ec-8f9d-44e7-9082-e7e956dbd6bf",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e04c62ec-8f9d-44e7-9082-e7e956dbd6bf",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d112a06f-8e4d-4044-9aad-178062911246",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d112a06f-8e4d-4044-9aad-178062911246",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "70ce3c90-0c15-48dc-9dd8-4d49964ae12e",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "70ce3c90-0c15-48dc-9dd8-4d49964ae12e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b449f45d-d116-409f-a2e7-ee4804586c17",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b449f45d-d116-409f-a2e7-ee4804586c17",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e1ce5677-bc86-43b3-a02e-c8b33b509684",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e1ce5677-bc86-43b3-a02e-c8b33b509684",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6adaf8d9-00bd-448a-943d-06400f673f7a",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6adaf8d9-00bd-448a-943d-06400f673f7a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4ee607fe-f560-452d-a33d-96f99d829909",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4ee607fe-f560-452d-a33d-96f99d829909",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f85bf20b-f70f-4641-861e-dd2b1b1e9cfb",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f85bf20b-f70f-4641-861e-dd2b1b1e9cfb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "83006806-3b11-4e38-ade1-066208151af4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "83006806-3b11-4e38-ade1-066208151af4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "deeb3ca7-1159-488c-8687-70ea52106fbe",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "deeb3ca7-1159-488c-8687-70ea52106fbe",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e20ebf82-e447-4cf4-8ab0-c5b3c1810f74",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e20ebf82-e447-4cf4-8ab0-c5b3c1810f74",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f63dc90c-465b-4157-a8d1-8ff54736d9cb",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f63dc90c-465b-4157-a8d1-8ff54736d9cb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "74afca61-8921-485e-a50c-4909f64823a3",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "74afca61-8921-485e-a50c-4909f64823a3",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "157448a9-6bfc-44a8-8949-00d55f0cf106",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "157448a9-6bfc-44a8-8949-00d55f0cf106",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "eaf38669-9232-4bdf-a42b-0be01f42d17c",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "eaf38669-9232-4bdf-a42b-0be01f42d17c",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c70735fd-7815-4690-9df2-221392f96826",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c70735fd-7815-4690-9df2-221392f96826",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9d08f0fb-be8b-428a-9bf1-7987706187e7",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9d08f0fb-be8b-428a-9bf1-7987706187e7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c268e84c-c4b9-4cce-9fad-7a50e7de1c39",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c268e84c-c4b9-4cce-9fad-7a50e7de1c39",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "632e4d14-c323-454d-84ae-fc770f0e8c19",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "632e4d14-c323-454d-84ae-fc770f0e8c19",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f8dc1a85-39da-4cb2-b5b3-9e32e35ab988",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f8dc1a85-39da-4cb2-b5b3-9e32e35ab988",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "eb2a6164-1f2e-4b76-96e3-592071683630",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "eb2a6164-1f2e-4b76-96e3-592071683630",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3fcd094d-fe33-4cf7-8728-a69be13eb323",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3fcd094d-fe33-4cf7-8728-a69be13eb323",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c7beaffb-22ab-4145-bf4f-c16ec16a4d84",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "c7beaffb-22ab-4145-bf4f-c16ec16a4d84",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6b512af0-fb2f-4d07-b052-eb04200b023f",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "e976aa09-62d0-4d43-9a85-b3c6328ac75b",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "e976aa09-62d0-4d43-9a85-b3c6328ac75b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e976aa09-62d0-4d43-9a85-b3c6328ac75b",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
