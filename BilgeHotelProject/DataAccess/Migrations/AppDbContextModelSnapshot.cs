// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "cbd6ca5e-672b-4244-93f0-92e85d0e48d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1cef7d82-632b-4e34-85b8-e7abfe8f58d0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "valilik@bilgehotel.com",
                            EmailConfirmed = true,
                            FirstName = "Bilge",
                            LastName = "Hotel",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALILIK@BILGEHOTEL.COM",
                            NormalizedUserName = "VALILIK@BILGEHOTEL.COM",
                            PasswordHash = "AHNPLju4yYwGG+VqvmvossrMrZGdKyYJBQSpItcgMIn31TBF7RCfQtyE6uNRK09Rcw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7a7bdca-9dca-432f-a3d1-0f9ca39feeac",
                            TwoFactorEnabled = false,
                            UserName = "valilik@bilgehotel.com"
                        },
                        new
                        {
                            Id = "4f7ce9a5-6295-4cbb-8f7e-b39ccd7d2601",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2dc5f57d-ed74-44ca-9dc9-599e98dcd3cf",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jeremy.Cassin4@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Jeremy",
                            LastName = "Cassin",
                            LockoutEnabled = false,
                            NormalizedEmail = "JEREMY.CASSIN4@YAHOO.COM",
                            NormalizedUserName = "JEREMY.CASSIN4@YAHOO.COM",
                            PasswordHash = "AHVtBkPFppBzRSlTVtz0jQUfFe89jn5PNFT8VNDdmvpNYI7NkkQLGiuSDw0MwlD0hg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e37b48e5-8a3a-416e-9d8c-167b64c93156",
                            TwoFactorEnabled = false,
                            UserName = "Jeremy.Cassin4@yahoo.com"
                        },
                        new
                        {
                            Id = "6251bfd1-6a86-468e-b521-d2bd5bd1fab1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c66d4a65-0fd2-474b-8dca-8c7c7b84855b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eddie14@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Eddie",
                            LastName = "Christiansen",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDDIE14@YAHOO.COM",
                            NormalizedUserName = "EDDIE14@YAHOO.COM",
                            PasswordHash = "AJqsZBxRkAU9SVlC0deK21YgAES+YDWDYBYgsPilYncDIOWZJQFwWIrTvcLfkhRrVQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7de173eb-9e8c-4b62-9a20-24a4acaed050",
                            TwoFactorEnabled = false,
                            UserName = "Eddie14@yahoo.com"
                        },
                        new
                        {
                            Id = "69c199e2-4d83-424c-a63d-43c48e347d81",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7d421fee-fa41-4767-92bc-4f7cbca08e32",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Pat.Miller27@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Pat",
                            LastName = "Miller",
                            LockoutEnabled = false,
                            NormalizedEmail = "PAT.MILLER27@GMAIL.COM",
                            NormalizedUserName = "PAT.MILLER27@GMAIL.COM",
                            PasswordHash = "ABiLvUf9uPe5s/qogis6w4D4kBrQ8SM69DJ/2DNXBJUrhfmQbDowqqodPEDJamTGrA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6e624561-9f77-4e97-83cf-6b5e5bcc953e",
                            TwoFactorEnabled = false,
                            UserName = "Pat.Miller27@gmail.com"
                        },
                        new
                        {
                            Id = "23325d5c-376d-43a0-a56a-9640344d2add",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "12e588a5-81cd-4896-a87e-d7d76c55a303",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ginger_Braun59@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ginger",
                            LastName = "Braun",
                            LockoutEnabled = false,
                            NormalizedEmail = "GINGER_BRAUN59@GMAIL.COM",
                            NormalizedUserName = "GINGER_BRAUN59@GMAIL.COM",
                            PasswordHash = "AA5u1/OasmS8mZLbVzDKPydw+kiaYKgL3k3yGzFnlpiaKo/+MwU59Antj+OaeGpxBg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82287f48-54ee-44e7-ab6c-a20e44f7dd73",
                            TwoFactorEnabled = false,
                            UserName = "Ginger_Braun59@gmail.com"
                        },
                        new
                        {
                            Id = "96ede2c4-7c30-4ae6-9269-c6d921062bf9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e7a3a9d-fd08-4f4c-a5fc-7cd6a3d7f1c7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Myra4@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Myra",
                            LastName = "Watsica",
                            LockoutEnabled = false,
                            NormalizedEmail = "MYRA4@HOTMAIL.COM",
                            NormalizedUserName = "MYRA4@HOTMAIL.COM",
                            PasswordHash = "AO8T7gYTjjQ+Y1S23YWe3fs/wt/+YKP8335cQ5sWY9+5inpVZmCoqW2kpq19gXkx9w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "90f8caca-b5a5-4a77-bd64-41729bec61f3",
                            TwoFactorEnabled = false,
                            UserName = "Myra4@hotmail.com"
                        },
                        new
                        {
                            Id = "d38ae425-80d4-4884-9cc6-661bec7c5992",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "24c6cd17-896b-4782-b5cf-f98c9bc0dbbb",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Clint_Braun73@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Clint",
                            LastName = "Braun",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLINT_BRAUN73@GMAIL.COM",
                            NormalizedUserName = "CLINT_BRAUN73@GMAIL.COM",
                            PasswordHash = "AG0A25GUIA1zz8+UUy7apdUsmJwoBAqXmTA3M2VKeTtTX6W1aYsfY9P0dkV+tqLcZw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e751189d-09b1-46cd-9342-0f0e8902e304",
                            TwoFactorEnabled = false,
                            UserName = "Clint_Braun73@gmail.com"
                        },
                        new
                        {
                            Id = "504039e4-19af-4539-a87b-8c228f3fe7b6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a490fb52-9028-4742-b4d0-1a7e9a1451a3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dale_DAmore66@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dale",
                            LastName = "D'Amore",
                            LockoutEnabled = false,
                            NormalizedEmail = "DALE_DAMORE66@GMAIL.COM",
                            NormalizedUserName = "DALE_DAMORE66@GMAIL.COM",
                            PasswordHash = "AFw7RHj9SzmRSLOpOPr2d/FXNoVSvdZ2rdsXVzrMb1fGyqA6TddaeBeCgVApsYtvgQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9e4d7576-4636-44c1-94d3-b8aad7a69e95",
                            TwoFactorEnabled = false,
                            UserName = "Dale_DAmore66@gmail.com"
                        },
                        new
                        {
                            Id = "9e1d18ea-f2a2-43d3-8166-5abf46f868b1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "195ac6c2-8736-4066-805b-d757f76eeab8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kendra.Larson68@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Kendra",
                            LastName = "Larson",
                            LockoutEnabled = false,
                            NormalizedEmail = "KENDRA.LARSON68@YAHOO.COM",
                            NormalizedUserName = "KENDRA.LARSON68@YAHOO.COM",
                            PasswordHash = "AIBQdDAVwrOP1iXZZTuBn6kHv7id4WEUgV1tiJkXLaaNMFt2w6z+g/wLCX0eAmkSGA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "975087d3-bc62-455e-b572-10b4b92f8f01",
                            TwoFactorEnabled = false,
                            UserName = "Kendra.Larson68@yahoo.com"
                        },
                        new
                        {
                            Id = "7285fc22-3947-4259-9d7b-2ce5fd47fdea",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9f5f7b7d-8f1c-437a-9608-5b598adfe475",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elmer32@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Elmer",
                            LastName = "Ryan",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELMER32@HOTMAIL.COM",
                            NormalizedUserName = "ELMER32@HOTMAIL.COM",
                            PasswordHash = "AJZalJ9xTvPPgAtIC/MbCYu/2QtHcwlryEGJzH1I2+I0+PdfyISOSsMp0YcFT+Mopg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43e7f88f-65c0-481f-8d6d-c5a66e25f6d9",
                            TwoFactorEnabled = false,
                            UserName = "Elmer32@hotmail.com"
                        },
                        new
                        {
                            Id = "4a0a01c7-e573-4d15-b581-52dfb20a9e72",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bf9c651f-9451-49f4-ad36-217bf08c78e2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Veronica.Nitzsche76@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Veronica",
                            LastName = "Nitzsche",
                            LockoutEnabled = false,
                            NormalizedEmail = "VERONICA.NITZSCHE76@YAHOO.COM",
                            NormalizedUserName = "VERONICA.NITZSCHE76@YAHOO.COM",
                            PasswordHash = "AOW36sNWumhjniqUZS1CNbL6FWs17aAWKJo8lE5rs/CwlYlOioY8x6Q8ctsZHBOxOg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dabb9704-0620-4678-b616-1dbbf5aad1f0",
                            TwoFactorEnabled = false,
                            UserName = "Veronica.Nitzsche76@yahoo.com"
                        },
                        new
                        {
                            Id = "e27fc89c-3f88-4084-8fcb-450602c4bfa9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0dc36532-c561-408b-9846-b4f9d05921c0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Connie_Emard74@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Connie",
                            LastName = "Emard",
                            LockoutEnabled = false,
                            NormalizedEmail = "CONNIE_EMARD74@HOTMAIL.COM",
                            NormalizedUserName = "CONNIE_EMARD74@HOTMAIL.COM",
                            PasswordHash = "ADWEpeMciBOm+3WbrTWIUwCi0sB6gqqni6JSUUnwFnrq3c5KFyFbxaTd7kFV1h7dwQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f4af82e8-f72e-4362-9882-83d393f717b3",
                            TwoFactorEnabled = false,
                            UserName = "Connie_Emard74@hotmail.com"
                        },
                        new
                        {
                            Id = "73543b77-c9ba-49af-b8f6-94f3942a6299",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fba68f95-dc04-40be-a32b-92d59d31df75",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lela_Buckridge@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Lela",
                            LastName = "Buckridge",
                            LockoutEnabled = false,
                            NormalizedEmail = "LELA_BUCKRIDGE@YAHOO.COM",
                            NormalizedUserName = "LELA_BUCKRIDGE@YAHOO.COM",
                            PasswordHash = "AIE7K5QXF7tDN6VFUPhZIGrVjMEbLRNSStBYt7zQpQMLalabVxDL1e9Z8k5JRwJP0g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "774c5d77-2924-43a8-a6eb-86ee28e0aa26",
                            TwoFactorEnabled = false,
                            UserName = "Lela_Buckridge@yahoo.com"
                        },
                        new
                        {
                            Id = "bf72edbd-72c0-48d8-8e95-30dc2d5ec54a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4abc7807-ea8b-45b4-976b-bf8d3b0d1f10",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rosie93@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rosie",
                            LastName = "Lakin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSIE93@HOTMAIL.COM",
                            NormalizedUserName = "ROSIE93@HOTMAIL.COM",
                            PasswordHash = "AOmIQqgwBFgUOnpvOCywFNlLRP5yTJoOgNdBZpKw4MSIgNqx7a6Nv+8zGuj+SmS7gQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa8cf484-297d-4cba-b2a1-7092994af983",
                            TwoFactorEnabled = false,
                            UserName = "Rosie93@hotmail.com"
                        },
                        new
                        {
                            Id = "f98d197a-8641-4e97-963b-1931ce645a72",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ae91aee0-86f4-4f83-af51-7e84e0487216",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cora_Waters12@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Cora",
                            LastName = "Waters",
                            LockoutEnabled = false,
                            NormalizedEmail = "CORA_WATERS12@GMAIL.COM",
                            NormalizedUserName = "CORA_WATERS12@GMAIL.COM",
                            PasswordHash = "ABcOYdO2+rYGMjWr6UXuvVuoH7yg5SCA2jWk8RYtaAY3udjRQcxi+7/GyeCMmPMbuA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16e458d5-cdd7-4add-b5d8-b47459d34ee9",
                            TwoFactorEnabled = false,
                            UserName = "Cora_Waters12@gmail.com"
                        },
                        new
                        {
                            Id = "4e57de01-388c-454a-9b91-120559cf3d83",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bba0c21-87e4-4655-9264-b68e69ac007e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rosa94@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Rosa",
                            LastName = "Grant",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSA94@YAHOO.COM",
                            NormalizedUserName = "ROSA94@YAHOO.COM",
                            PasswordHash = "AIjDSrfDlgfGtiNDlbB7+57H2e7W0Lss4r+PyBIqXRsur2ltzPmt1uWZLJaTFn2c7g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "004e5710-c1e7-4a3b-ab5a-7f0781fb0be6",
                            TwoFactorEnabled = false,
                            UserName = "Rosa94@yahoo.com"
                        },
                        new
                        {
                            Id = "09b6d160-f680-4cef-ba42-fa02e7f674f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f991f3a0-0830-4a6f-b279-6147b1b82a22",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Luz10@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Luz",
                            LastName = "VonRueden",
                            LockoutEnabled = false,
                            NormalizedEmail = "LUZ10@HOTMAIL.COM",
                            NormalizedUserName = "LUZ10@HOTMAIL.COM",
                            PasswordHash = "AFC4IHqi8ZMKDhNlg4+Y3NQsBjLuV7kLfAPNOdVcg/eVwz0UDaWKv/hXKlxapA7J9Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3759e67-bf18-4939-968d-5d70e1ee52e7",
                            TwoFactorEnabled = false,
                            UserName = "Luz10@hotmail.com"
                        },
                        new
                        {
                            Id = "078aca27-7b6e-4a00-a105-f2b298af643d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d2ac482e-95ee-4308-9a60-56e971943e57",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Martha.Gleason@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Martha",
                            LastName = "Gleason",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARTHA.GLEASON@HOTMAIL.COM",
                            NormalizedUserName = "MARTHA.GLEASON@HOTMAIL.COM",
                            PasswordHash = "AG09ysGuzc7VF16+4apQlL2kWpZZC6u5nWUeZfSydbXN46gk61gKtdGYUWy7+/oRYQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b5d7abbd-67a9-40ea-9f9a-4bece1f11a23",
                            TwoFactorEnabled = false,
                            UserName = "Martha.Gleason@hotmail.com"
                        },
                        new
                        {
                            Id = "201c205c-af77-44ab-aa08-2417da763225",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "55673e72-fb65-4f17-a409-037b271d0e08",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Misty_Daugherty38@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Misty",
                            LastName = "Daugherty",
                            LockoutEnabled = false,
                            NormalizedEmail = "MISTY_DAUGHERTY38@GMAIL.COM",
                            NormalizedUserName = "MISTY_DAUGHERTY38@GMAIL.COM",
                            PasswordHash = "AKr9oP+1SZLqnHX8IUCSYA+afQds2rMHjWvykuHcMHuGcoox0xjckk89xjC++okEJw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b360179-03fe-457f-b15f-f5a999d57649",
                            TwoFactorEnabled = false,
                            UserName = "Misty_Daugherty38@gmail.com"
                        },
                        new
                        {
                            Id = "b0622e14-32bc-4fee-b2b1-89e4587224d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ea8a367-e2d8-4c54-96c5-462e5975eec0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wesley.Turner@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wesley",
                            LastName = "Turner",
                            LockoutEnabled = false,
                            NormalizedEmail = "WESLEY.TURNER@HOTMAIL.COM",
                            NormalizedUserName = "WESLEY.TURNER@HOTMAIL.COM",
                            PasswordHash = "AKYuloZQVLsb6hVDlOWZzncKqg4MnkyZkRRSAmba6cD+m9MPi0Qlp3Tk50NB4j9Aow==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eed93fb1-c6c8-4cdb-b74d-d706be78b3c4",
                            TwoFactorEnabled = false,
                            UserName = "Wesley.Turner@hotmail.com"
                        },
                        new
                        {
                            Id = "e4dbe198-d5a0-4688-a301-4d7fc1172034",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "51284e77-0d01-4b42-8d40-f4a6f2b06b7d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Virgil.Haag@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Virgil",
                            LastName = "Haag",
                            LockoutEnabled = false,
                            NormalizedEmail = "VIRGIL.HAAG@YAHOO.COM",
                            NormalizedUserName = "VIRGIL.HAAG@YAHOO.COM",
                            PasswordHash = "ABYbSw/KA1AduH4iCSkLC+gKpDmxPHwTxgdE1FalPOTZQIExhX3g8Xgf8hWx+vEAew==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e4ba693-5d7b-4eeb-ab16-a5ab6db6affd",
                            TwoFactorEnabled = false,
                            UserName = "Virgil.Haag@yahoo.com"
                        },
                        new
                        {
                            Id = "7e1a58cc-095b-4eac-b101-79725c59c82e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b006e7f2-712a-43e0-85ab-0d2f376c3b89",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Stewart8@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Stewart",
                            LastName = "Stracke",
                            LockoutEnabled = false,
                            NormalizedEmail = "STEWART8@GMAIL.COM",
                            NormalizedUserName = "STEWART8@GMAIL.COM",
                            PasswordHash = "AMmiIKooUfi1996fCSnro5NC2SuDtETwmRcMvOhL5uGbXrwIthczBehjbFpNG9ZXSA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f0583a45-05d4-43ff-adf3-5d0b64994391",
                            TwoFactorEnabled = false,
                            UserName = "Stewart8@gmail.com"
                        },
                        new
                        {
                            Id = "cedcb7ea-a87e-4b3a-82d2-09c69f6938e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7e29518-317b-4e7d-b1b4-5668fcba1afc",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cornelius_Stiedemann@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Cornelius",
                            LastName = "Stiedemann",
                            LockoutEnabled = false,
                            NormalizedEmail = "CORNELIUS_STIEDEMANN@YAHOO.COM",
                            NormalizedUserName = "CORNELIUS_STIEDEMANN@YAHOO.COM",
                            PasswordHash = "AB0jJCBtztHjcFyq7UINdraxY/eCGDBexwxJ0zfZ8njQiQUK9BY32f+YvubcfHBy4Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "af139699-e068-401a-906c-fd94c594927a",
                            TwoFactorEnabled = false,
                            UserName = "Cornelius_Stiedemann@yahoo.com"
                        },
                        new
                        {
                            Id = "bc57a858-e461-4a86-a3a4-fc0ed69866cb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b181555-0559-4e3a-9434-2fec4bfaa7e3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Hattie_Ankunding62@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Hattie",
                            LastName = "Ankunding",
                            LockoutEnabled = false,
                            NormalizedEmail = "HATTIE_ANKUNDING62@YAHOO.COM",
                            NormalizedUserName = "HATTIE_ANKUNDING62@YAHOO.COM",
                            PasswordHash = "AFlx+q2WRIPL0PrsUgYoquHIxMTC0xEdDENiCISI/GMPwuwO1cPsWom9OaDh9g/5jA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "109f1b5e-c00d-4114-a23f-a347dc1e644f",
                            TwoFactorEnabled = false,
                            UserName = "Hattie_Ankunding62@yahoo.com"
                        },
                        new
                        {
                            Id = "f8e01904-94ac-47f3-b0d8-db5e6cac802d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a8af029-c893-4ea1-a0bf-c845f444b67c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Gilbert.Hilll81@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Gilbert",
                            LastName = "Hilll",
                            LockoutEnabled = false,
                            NormalizedEmail = "GILBERT.HILLL81@YAHOO.COM",
                            NormalizedUserName = "GILBERT.HILLL81@YAHOO.COM",
                            PasswordHash = "AKx1IS30sqXwmhS4+00uiFQZBs3deMQ/xOLx7azqbG9Jwp1HNqdqhQB/K7eml7C+UA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0e119aa-408c-46d1-ad55-2d4c88830fff",
                            TwoFactorEnabled = false,
                            UserName = "Gilbert.Hilll81@yahoo.com"
                        },
                        new
                        {
                            Id = "d78f5d28-ae66-4c5a-a887-6d46a345dc50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f531022-02d4-4233-aa7c-8cf1feca22ac",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Caroline_Bechtelar39@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Caroline",
                            LastName = "Bechtelar",
                            LockoutEnabled = false,
                            NormalizedEmail = "CAROLINE_BECHTELAR39@GMAIL.COM",
                            NormalizedUserName = "CAROLINE_BECHTELAR39@GMAIL.COM",
                            PasswordHash = "ANIr9Bw0WgDsC2xoYciviIEuG4D+7bn881BbJSRRmqM0ai7kxEaYg4poTArv9f2jpA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c170565c-65b2-4b90-a83a-445cbd7398bc",
                            TwoFactorEnabled = false,
                            UserName = "Caroline_Bechtelar39@gmail.com"
                        },
                        new
                        {
                            Id = "5d40b661-2307-42c0-8efa-29d0c1ea00f5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "221868b2-a35f-4b02-8372-b1d3b5890ed7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kay84@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Kay",
                            LastName = "Prohaska",
                            LockoutEnabled = false,
                            NormalizedEmail = "KAY84@YAHOO.COM",
                            NormalizedUserName = "KAY84@YAHOO.COM",
                            PasswordHash = "ALpA/RhHdOHAeghWMejMsReiCsY2bwoWxg+HPNMXdD4KO2lKfqHxaqj6RV2YmC7rxQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "494536ff-c668-4ca4-a1db-617f768e9a4a",
                            TwoFactorEnabled = false,
                            UserName = "Kay84@yahoo.com"
                        },
                        new
                        {
                            Id = "1e261708-b457-4b01-b4c1-cc2d2d4a520b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67fbba81-5c50-4c51-83d3-4578d2d233d7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rita.Rippin44@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rita",
                            LastName = "Rippin",
                            LockoutEnabled = false,
                            NormalizedEmail = "RITA.RIPPIN44@HOTMAIL.COM",
                            NormalizedUserName = "RITA.RIPPIN44@HOTMAIL.COM",
                            PasswordHash = "AC/XdUbNLTdmswljpIkiL7JPeDXIzIvQi5NJZZTt7sJLdYtZe/s5ijgN7Q61WowiAg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "56814d25-d012-4e14-99e2-bed97b28e66c",
                            TwoFactorEnabled = false,
                            UserName = "Rita.Rippin44@hotmail.com"
                        },
                        new
                        {
                            Id = "f74d8e99-8af3-4b4d-a947-7dd14d7eee35",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ac276b4-c912-410f-9cf4-c210f9e2a1da",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jennie_McKenzie@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jennie",
                            LastName = "McKenzie",
                            LockoutEnabled = false,
                            NormalizedEmail = "JENNIE_MCKENZIE@HOTMAIL.COM",
                            NormalizedUserName = "JENNIE_MCKENZIE@HOTMAIL.COM",
                            PasswordHash = "ALbYSW4s4yNR258VghkoJKgqFhDmeNw/nJJ/qAPQQYxNyfN9b5rlVcryz3SCgzQRIA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8f108638-a9d7-4f83-a392-084b6d8376ec",
                            TwoFactorEnabled = false,
                            UserName = "Jennie_McKenzie@hotmail.com"
                        },
                        new
                        {
                            Id = "1d276bc6-d83d-4c99-b2cb-ac47259a6536",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "72f07701-dd74-45a9-974e-e8236849f462",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ben_Kohler38@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ben",
                            LastName = "Kohler",
                            LockoutEnabled = false,
                            NormalizedEmail = "BEN_KOHLER38@GMAIL.COM",
                            NormalizedUserName = "BEN_KOHLER38@GMAIL.COM",
                            PasswordHash = "ANWERFamY5DEZQZCjhHVo6pYL3O1rVSDIQwtHrMbkF4XPoKXQGv1V5L0PVdLpNZ7sg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "22871a46-9cfa-4274-9ed8-6fd23c5be887",
                            TwoFactorEnabled = false,
                            UserName = "Ben_Kohler38@gmail.com"
                        },
                        new
                        {
                            Id = "49c33160-ee6e-4dbe-8c77-56d8fedb6865",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a96c2c53-728c-4ebc-b80c-62647bc936fe",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Earnest_Mitchell22@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Earnest",
                            LastName = "Mitchell",
                            LockoutEnabled = false,
                            NormalizedEmail = "EARNEST_MITCHELL22@YAHOO.COM",
                            NormalizedUserName = "EARNEST_MITCHELL22@YAHOO.COM",
                            PasswordHash = "ANIDRs0yEGbjdoQBN96oE0DD+1ZLDpdcL49DByu4e8+tpvW9Las/LIztfUkcNkrqSw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a92e3097-749f-47bc-b9ff-98d548aa446b",
                            TwoFactorEnabled = false,
                            UserName = "Earnest_Mitchell22@yahoo.com"
                        },
                        new
                        {
                            Id = "ccf54ccd-fe63-4bc9-9185-acf1902ca1cc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c0420c9-00b1-4136-ae16-376281029160",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Edward.Muller5@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Edward",
                            LastName = "Muller",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDWARD.MULLER5@HOTMAIL.COM",
                            NormalizedUserName = "EDWARD.MULLER5@HOTMAIL.COM",
                            PasswordHash = "AJRIVjmJnBcgbHHlNXmxQM2D+kGsn7L26FTNpqmBrQEsd72yxdKjyWQoq/HY1lvMlw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "77d3a393-0003-4f7b-a3eb-0a2cbf2839ff",
                            TwoFactorEnabled = false,
                            UserName = "Edward.Muller5@hotmail.com"
                        },
                        new
                        {
                            Id = "89bb616f-5d85-4ffd-b372-e0e0ed7bcbf4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ea3f0f1-5aa7-45c5-a5d5-71632227b6ad",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Camille_Stracke56@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Camille",
                            LastName = "Stracke",
                            LockoutEnabled = false,
                            NormalizedEmail = "CAMILLE_STRACKE56@YAHOO.COM",
                            NormalizedUserName = "CAMILLE_STRACKE56@YAHOO.COM",
                            PasswordHash = "ANURxiwyxuS3dRHRWkBUAQxlVA3GzpeGxXshuj27x82eFDSN9RtXLpm+jm5FgpRm0g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d4a702c-49ab-4486-bb8b-10efa96d9ae8",
                            TwoFactorEnabled = false,
                            UserName = "Camille_Stracke56@yahoo.com"
                        },
                        new
                        {
                            Id = "04424223-c870-4a90-9c76-1fe4788041f7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3eb1b7c-a988-47be-bbde-db4d75534b2b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brenda_Graham@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Brenda",
                            LastName = "Graham",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRENDA_GRAHAM@YAHOO.COM",
                            NormalizedUserName = "BRENDA_GRAHAM@YAHOO.COM",
                            PasswordHash = "AKq5f8h/IJ41wzeo1a8CJksPuo9PqxLPZhOYMNlT6Cc07sNdYRBfGr/XrDtE/LZF2w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "59ef8db9-a684-4313-a719-835b010dc5fc",
                            TwoFactorEnabled = false,
                            UserName = "Brenda_Graham@yahoo.com"
                        },
                        new
                        {
                            Id = "507e0bf1-a9b8-4621-b43e-428b5d1b4e3d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04e46680-d27c-499b-b09e-0358ec6fadc3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Willie_Hudson74@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Willie",
                            LastName = "Hudson",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILLIE_HUDSON74@YAHOO.COM",
                            NormalizedUserName = "WILLIE_HUDSON74@YAHOO.COM",
                            PasswordHash = "AAHad1NbWhPfFl2GGeDkn3wW9uai3ZtaO0HSIbnrtjpZq12L3X7g3oJZSDn+Z9RrEQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e612cf5-feeb-497b-9a2e-485876849f6c",
                            TwoFactorEnabled = false,
                            UserName = "Willie_Hudson74@yahoo.com"
                        },
                        new
                        {
                            Id = "59b0a516-dc46-4296-b099-f6fb98b82325",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d26516e5-46c1-4aa6-bfb4-b52b7cb8b334",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vickie_Schaefer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Vickie",
                            LastName = "Schaefer",
                            LockoutEnabled = false,
                            NormalizedEmail = "VICKIE_SCHAEFER@HOTMAIL.COM",
                            NormalizedUserName = "VICKIE_SCHAEFER@HOTMAIL.COM",
                            PasswordHash = "AO1xsSPTe/cBN+DIdbbuZ3dl8Nsun3+ErybMVujJadanc6t4LmTLvduoeMDIqiPjKQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b156f0e-8c6d-4335-9f01-7a4d1ca6af94",
                            TwoFactorEnabled = false,
                            UserName = "Vickie_Schaefer@hotmail.com"
                        },
                        new
                        {
                            Id = "23c9dc4d-dbc0-453e-8c75-fa2c106bc948",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0108fcc8-c1cb-417a-b949-d4aeec5544e0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nicole.Mosciski@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Nicole",
                            LastName = "Mosciski",
                            LockoutEnabled = false,
                            NormalizedEmail = "NICOLE.MOSCISKI@YAHOO.COM",
                            NormalizedUserName = "NICOLE.MOSCISKI@YAHOO.COM",
                            PasswordHash = "AGYBwuAD/CUIK3eMrRO+n59kzks/Atmj3BwJEaU/eh1QUb8Q9DjedyiqszqztdlyoQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "872c5e47-a659-4b25-b771-83dcd0888ce6",
                            TwoFactorEnabled = false,
                            UserName = "Nicole.Mosciski@yahoo.com"
                        },
                        new
                        {
                            Id = "9d834ef1-80bb-4461-bac3-309b1d63e329",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca2230a4-105a-4b60-a514-cca9c48073ee",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Darnell83@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Darnell",
                            LastName = "Waelchi",
                            LockoutEnabled = false,
                            NormalizedEmail = "DARNELL83@GMAIL.COM",
                            NormalizedUserName = "DARNELL83@GMAIL.COM",
                            PasswordHash = "AK8oaE2iUfdXh9xOm/GbAZd1j9jbId3+24exOi7914WZHGrn8wOdEX2KUR1qkiW4zQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b7f0fb5b-1d16-4996-a3df-30240dd0e8c9",
                            TwoFactorEnabled = false,
                            UserName = "Darnell83@gmail.com"
                        },
                        new
                        {
                            Id = "545e20b2-a909-4949-bd52-a90770b47452",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "937d672a-ae76-4bc8-aea4-75261dc94272",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Aaron_McGlynn64@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Aaron",
                            LastName = "McGlynn",
                            LockoutEnabled = false,
                            NormalizedEmail = "AARON_MCGLYNN64@YAHOO.COM",
                            NormalizedUserName = "AARON_MCGLYNN64@YAHOO.COM",
                            PasswordHash = "AHjrmUqC3MP60aNnMDOX7OjroZQhSFFYFXZErRRRmW5PlyrJamz3a8pMdxyTFIIsVw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f88d816-eacb-4a4c-8929-0ff63354cff7",
                            TwoFactorEnabled = false,
                            UserName = "Aaron_McGlynn64@yahoo.com"
                        },
                        new
                        {
                            Id = "be4f444f-5371-444c-a361-60a8f77c872b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20d4bbea-5f9f-4d65-a5f6-7d99f0386aef",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Phillip86@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Phillip",
                            LastName = "Kautzer",
                            LockoutEnabled = false,
                            NormalizedEmail = "PHILLIP86@HOTMAIL.COM",
                            NormalizedUserName = "PHILLIP86@HOTMAIL.COM",
                            PasswordHash = "AD4rbSp2lBGvoUXA3LHgEFLNtAhg3U++uqVp9EKzo9csLCk9i34q/z/W+2It5wm7/g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "daa6fa5a-96d5-46fa-bd9e-18dfe3a8b4ab",
                            TwoFactorEnabled = false,
                            UserName = "Phillip86@hotmail.com"
                        },
                        new
                        {
                            Id = "13fb1c19-74b3-41c8-9228-93186c262f87",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a4abc36-4b74-4a09-a9b3-24b4278ec4e8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Perry.Denesik@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Perry",
                            LastName = "Denesik",
                            LockoutEnabled = false,
                            NormalizedEmail = "PERRY.DENESIK@HOTMAIL.COM",
                            NormalizedUserName = "PERRY.DENESIK@HOTMAIL.COM",
                            PasswordHash = "AMqmaowu3mXxLmU81dyH7w1yz1g+ufRAR6S8t5TUl0UFMPBpBSWoxj4SRDiJbkOL1Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "27721b06-79fa-4ef1-9061-eef3ee932ada",
                            TwoFactorEnabled = false,
                            UserName = "Perry.Denesik@hotmail.com"
                        },
                        new
                        {
                            Id = "ea1676eb-0861-411a-85e9-a489bfc40a38",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bd13d73-6925-4bf0-ad19-2aa5c2c9f069",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Victoria26@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Victoria",
                            LastName = "Howell",
                            LockoutEnabled = false,
                            NormalizedEmail = "VICTORIA26@GMAIL.COM",
                            NormalizedUserName = "VICTORIA26@GMAIL.COM",
                            PasswordHash = "ADYZMBcLA9wWGTyc0lLkNzaLjw9iCSQ41HajWuTvQEKy6AkZiVKw4LV4z6iTsSZ1Cw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3261cfe7-3e3e-4e8e-a5cd-6a893b176d78",
                            TwoFactorEnabled = false,
                            UserName = "Victoria26@gmail.com"
                        },
                        new
                        {
                            Id = "fa5fd19b-46e4-4ad5-b61c-c7550a3921ba",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "55085be4-118f-4c7f-8b5a-77c38d6dbce0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Craig.Murazik@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Craig",
                            LastName = "Murazik",
                            LockoutEnabled = false,
                            NormalizedEmail = "CRAIG.MURAZIK@GMAIL.COM",
                            NormalizedUserName = "CRAIG.MURAZIK@GMAIL.COM",
                            PasswordHash = "AHZ/9XUc0Ng+WvkEw19HBzP1gxHUgcODroOLiOoG4+tbGfEs5w1CK/AijeyHJb21Bw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b8f1bcc-5eb1-465e-a17e-986e3ac0b842",
                            TwoFactorEnabled = false,
                            UserName = "Craig.Murazik@gmail.com"
                        },
                        new
                        {
                            Id = "6750220c-db37-41ac-abc2-ba89db5e34df",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91608438-17e4-439a-9f29-a23f7c56d3ef",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Preston.Hyatt27@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Preston",
                            LastName = "Hyatt",
                            LockoutEnabled = false,
                            NormalizedEmail = "PRESTON.HYATT27@HOTMAIL.COM",
                            NormalizedUserName = "PRESTON.HYATT27@HOTMAIL.COM",
                            PasswordHash = "AKZanl4ZIMRLwSYtLvHwSXe3QuDivum61GOE41Mq37Jole9dclQPOQoHiiXLrPcg6A==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cda68d4f-7560-4f82-9c06-bf1add79e818",
                            TwoFactorEnabled = false,
                            UserName = "Preston.Hyatt27@hotmail.com"
                        },
                        new
                        {
                            Id = "5c307b3f-3706-43cc-9b5c-1112191cfad8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ca91322-b37d-4b65-8131-9890c9bf5885",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bertha70@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Bertha",
                            LastName = "Rosenbaum",
                            LockoutEnabled = false,
                            NormalizedEmail = "BERTHA70@YAHOO.COM",
                            NormalizedUserName = "BERTHA70@YAHOO.COM",
                            PasswordHash = "AHfnSR+nDBwG2F2DdGuz6P9zGAtMSLmWsUzKbcXykZ4TJRILdFox/VsOrokDn7M5Ug==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d29e0ba1-5c0f-42ae-8589-078bae0af8db",
                            TwoFactorEnabled = false,
                            UserName = "Bertha70@yahoo.com"
                        },
                        new
                        {
                            Id = "c2779518-1f30-4806-a8b7-471e97509137",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c38b1f1a-5b2e-4565-968d-f9603f036227",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Francisco.Boyer@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Francisco",
                            LastName = "Boyer",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRANCISCO.BOYER@YAHOO.COM",
                            NormalizedUserName = "FRANCISCO.BOYER@YAHOO.COM",
                            PasswordHash = "AFAskGohfgq/t2RCxxyvmzcZA5amI5tdtJ80EsGF+Vdmxw+nJlcr89fvWwHoEmqvDA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c2f3481a-ca9c-48af-ae64-a5ea169529d0",
                            TwoFactorEnabled = false,
                            UserName = "Francisco.Boyer@yahoo.com"
                        },
                        new
                        {
                            Id = "496b7fc0-0129-4f90-8a63-f3e3b8271f43",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9a64dda2-a67d-424c-9c31-34e9e832d7df",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Erica16@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Erica",
                            LastName = "Murray",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERICA16@HOTMAIL.COM",
                            NormalizedUserName = "ERICA16@HOTMAIL.COM",
                            PasswordHash = "AP3eiC4YOMNM7TEgJQ7lqXO7/EM5qPIdKd44fM33m0J2F7mfsBiw4iShZx9ivBr/sQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3869cc1-39c4-49b0-a887-bbbdf7e6b95d",
                            TwoFactorEnabled = false,
                            UserName = "Erica16@hotmail.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "47950 Bailey Court, Dayanaport, Albania",
                            Email = "Jessica.Zieme85@gmail.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "4f7ce9a5-6295-4cbb-8f7e-b39ccd7d2601",
                            DepartmentID = 4,
                            Email = "Jeremy.Cassin4@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jeremy",
                            HourlyRate = 29.447189727540680m,
                            IdentificationNumber = "4657",
                            IsActive = true,
                            LastName = "Cassin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 11, 17, 12, 48, 19, 617, DateTimeKind.Unspecified).AddTicks(3176),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "6251bfd1-6a86-468e-b521-d2bd5bd1fab1",
                            DepartmentID = 4,
                            Email = "Eddie14@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Eddie",
                            HourlyRate = 23.755418180374160m,
                            IdentificationNumber = "9193",
                            IsActive = true,
                            LastName = "Christiansen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 27, 12, 54, 44, 131, DateTimeKind.Unspecified).AddTicks(541),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "69c199e2-4d83-424c-a63d-43c48e347d81",
                            DepartmentID = 4,
                            Email = "Pat.Miller27@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Pat",
                            HourlyRate = 21.449939888645870m,
                            IdentificationNumber = "2805",
                            IsActive = true,
                            LastName = "Miller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 9, 16, 21, 5, 1, 688, DateTimeKind.Unspecified).AddTicks(995),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "23325d5c-376d-43a0-a56a-9640344d2add",
                            DepartmentID = 4,
                            Email = "Ginger_Braun59@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ginger",
                            HourlyRate = 26.528175355181180m,
                            IdentificationNumber = "1680",
                            IsActive = true,
                            LastName = "Braun",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 5, 3, 8, 23, 1, 347, DateTimeKind.Unspecified).AddTicks(9957),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "96ede2c4-7c30-4ae6-9269-c6d921062bf9",
                            DepartmentID = 4,
                            Email = "Myra4@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Myra",
                            HourlyRate = 27.915634465364570m,
                            IdentificationNumber = "2343",
                            IsActive = true,
                            LastName = "Watsica",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 8, 28, 2, 46, 16, 312, DateTimeKind.Unspecified).AddTicks(9347),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "d38ae425-80d4-4884-9cc6-661bec7c5992",
                            DepartmentID = 4,
                            Email = "Clint_Braun73@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Clint",
                            HourlyRate = 29.175872997928350m,
                            IdentificationNumber = "4717",
                            IsActive = true,
                            LastName = "Braun",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2019, 9, 27, 21, 38, 57, 231, DateTimeKind.Unspecified).AddTicks(4628),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "504039e4-19af-4539-a87b-8c228f3fe7b6",
                            DepartmentID = 4,
                            Email = "Dale_DAmore66@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dale",
                            HourlyRate = 25.809468243182390m,
                            IdentificationNumber = "6938",
                            IsActive = true,
                            LastName = "D'Amore",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2021, 9, 14, 2, 57, 40, 474, DateTimeKind.Unspecified).AddTicks(752),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "9e1d18ea-f2a2-43d3-8166-5abf46f868b1",
                            DepartmentID = 1,
                            Email = "Kendra.Larson68@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Kendra",
                            HourlyRate = 28.636739020532340m,
                            IdentificationNumber = "5501",
                            IsActive = true,
                            LastName = "Larson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 2, 16, 11, 43, 6, 618, DateTimeKind.Unspecified).AddTicks(9533),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "7285fc22-3947-4259-9d7b-2ce5fd47fdea",
                            DepartmentID = 1,
                            Email = "Elmer32@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Elmer",
                            HourlyRate = 22.883416681030490m,
                            IdentificationNumber = "1634",
                            IsActive = true,
                            LastName = "Ryan",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 5, 16, 4, 9, 15, 52, DateTimeKind.Unspecified).AddTicks(1655),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "4a0a01c7-e573-4d15-b581-52dfb20a9e72",
                            DepartmentID = 1,
                            Email = "Veronica.Nitzsche76@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Veronica",
                            HourlyRate = 25.060012571075940m,
                            IdentificationNumber = "5054",
                            IsActive = true,
                            LastName = "Nitzsche",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 11, 1, 1, 42, 0, 192, DateTimeKind.Unspecified).AddTicks(9364),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "e27fc89c-3f88-4084-8fcb-450602c4bfa9",
                            DepartmentID = 1,
                            Email = "Connie_Emard74@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Connie",
                            HourlyRate = 21.50015050149530m,
                            IdentificationNumber = "7512",
                            IsActive = true,
                            LastName = "Emard",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 1, 30, 15, 10, 43, 771, DateTimeKind.Unspecified).AddTicks(3947),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "73543b77-c9ba-49af-b8f6-94f3942a6299",
                            DepartmentID = 1,
                            Email = "Lela_Buckridge@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Lela",
                            HourlyRate = 24.03381821887280m,
                            IdentificationNumber = "3626",
                            IsActive = true,
                            LastName = "Buckridge",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 3, 2, 4, 59, 412, DateTimeKind.Unspecified).AddTicks(5311),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "bf72edbd-72c0-48d8-8e95-30dc2d5ec54a",
                            DepartmentID = 1,
                            Email = "Rosie93@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rosie",
                            HourlyRate = 22.454976147252590m,
                            IdentificationNumber = "7054",
                            IsActive = true,
                            LastName = "Lakin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 6, 1, 22, 54, 30, 847, DateTimeKind.Unspecified).AddTicks(5276),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "f98d197a-8641-4e97-963b-1931ce645a72",
                            DepartmentID = 1,
                            Email = "Cora_Waters12@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Cora",
                            HourlyRate = 21.588149695465410m,
                            IdentificationNumber = "8787",
                            IsActive = true,
                            LastName = "Waters",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 10, 7, 49, 50, 246, DateTimeKind.Unspecified).AddTicks(2945),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "4e57de01-388c-454a-9b91-120559cf3d83",
                            DepartmentID = 1,
                            Email = "Rosa94@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Rosa",
                            HourlyRate = 27.797159602771120m,
                            IdentificationNumber = "9121",
                            IsActive = true,
                            LastName = "Grant",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 4, 18, 16, 52, 12, 850, DateTimeKind.Unspecified).AddTicks(190),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "09b6d160-f680-4cef-ba42-fa02e7f674f0",
                            DepartmentID = 1,
                            Email = "Luz10@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Luz",
                            HourlyRate = 20.913775642827980m,
                            IdentificationNumber = "9891",
                            IsActive = true,
                            LastName = "VonRueden",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 6, 21, 9, 3, 37, 135, DateTimeKind.Unspecified).AddTicks(9066),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "078aca27-7b6e-4a00-a105-f2b298af643d",
                            DepartmentID = 1,
                            Email = "Martha.Gleason@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Martha",
                            HourlyRate = 28.159166261627880m,
                            IdentificationNumber = "8024",
                            IsActive = true,
                            LastName = "Gleason",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 1, 26, 17, 40, 16, 675, DateTimeKind.Unspecified).AddTicks(6790),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "201c205c-af77-44ab-aa08-2417da763225",
                            DepartmentID = 1,
                            Email = "Misty_Daugherty38@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Misty",
                            HourlyRate = 22.229061025301490m,
                            IdentificationNumber = "7569",
                            IsActive = true,
                            LastName = "Daugherty",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 11, 27, 12, 33, 18, 966, DateTimeKind.Unspecified).AddTicks(1982),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "b0622e14-32bc-4fee-b2b1-89e4587224d3",
                            DepartmentID = 3,
                            Email = "Wesley.Turner@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wesley",
                            HourlyRate = 21.064824867558120m,
                            IdentificationNumber = "5403",
                            IsActive = true,
                            LastName = "Turner",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 3, 28, 20, 37, 21, 325, DateTimeKind.Unspecified).AddTicks(481),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "e4dbe198-d5a0-4688-a301-4d7fc1172034",
                            DepartmentID = 3,
                            Email = "Virgil.Haag@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Virgil",
                            HourlyRate = 20.3611329013300750m,
                            IdentificationNumber = "5482",
                            IsActive = true,
                            LastName = "Haag",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 11, 15, 5, 5, 52, 389, DateTimeKind.Unspecified).AddTicks(2425),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "7e1a58cc-095b-4eac-b101-79725c59c82e",
                            DepartmentID = 3,
                            Email = "Stewart8@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Stewart",
                            HourlyRate = 26.279374103191950m,
                            IdentificationNumber = "5262",
                            IsActive = true,
                            LastName = "Stracke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 6, 22, 3, 45, 51, 138, DateTimeKind.Unspecified).AddTicks(1980),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "cedcb7ea-a87e-4b3a-82d2-09c69f6938e5",
                            DepartmentID = 3,
                            Email = "Cornelius_Stiedemann@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Cornelius",
                            HourlyRate = 21.51650515455590m,
                            IdentificationNumber = "2362",
                            IsActive = true,
                            LastName = "Stiedemann",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 27, 8, 12, 30, 375, DateTimeKind.Unspecified).AddTicks(4220),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "bc57a858-e461-4a86-a3a4-fc0ed69866cb",
                            DepartmentID = 3,
                            Email = "Hattie_Ankunding62@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Hattie",
                            HourlyRate = 29.907255805985660m,
                            IdentificationNumber = "9820",
                            IsActive = true,
                            LastName = "Ankunding",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 15, 19, 0, 49, 123, DateTimeKind.Unspecified).AddTicks(9472),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "f8e01904-94ac-47f3-b0d8-db5e6cac802d",
                            DepartmentID = 3,
                            Email = "Gilbert.Hilll81@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Gilbert",
                            HourlyRate = 21.86750333377510m,
                            IdentificationNumber = "5636",
                            IsActive = true,
                            LastName = "Hilll",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 1, 8, 15, 31, 38, 186, DateTimeKind.Unspecified).AddTicks(6215),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "d78f5d28-ae66-4c5a-a887-6d46a345dc50",
                            DepartmentID = 3,
                            Email = "Caroline_Bechtelar39@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Caroline",
                            HourlyRate = 20.0002790801228392310m,
                            IdentificationNumber = "3708",
                            IsActive = true,
                            LastName = "Bechtelar",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 12, 8, 10, 42, 52, 381, DateTimeKind.Unspecified).AddTicks(2410),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "5d40b661-2307-42c0-8efa-29d0c1ea00f5",
                            DepartmentID = 3,
                            Email = "Kay84@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Kay",
                            HourlyRate = 25.732072650330180m,
                            IdentificationNumber = "6418",
                            IsActive = true,
                            LastName = "Prohaska",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 26, 17, 41, 45, 458, DateTimeKind.Unspecified).AddTicks(2404),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "1e261708-b457-4b01-b4c1-cc2d2d4a520b",
                            DepartmentID = 3,
                            Email = "Rita.Rippin44@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rita",
                            HourlyRate = 25.016473762233030m,
                            IdentificationNumber = "7585",
                            IsActive = true,
                            LastName = "Rippin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 6, 17, 0, 6, 29, 617, DateTimeKind.Unspecified).AddTicks(7349),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "f74d8e99-8af3-4b4d-a947-7dd14d7eee35",
                            DepartmentID = 3,
                            Email = "Jennie_McKenzie@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jennie",
                            HourlyRate = 25.527832641046420m,
                            IdentificationNumber = "7593",
                            IsActive = true,
                            LastName = "McKenzie",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 12, 28, 0, 22, 30, 719, DateTimeKind.Unspecified).AddTicks(5669),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "1d276bc6-d83d-4c99-b2cb-ac47259a6536",
                            DepartmentID = 3,
                            Email = "Ben_Kohler38@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ben",
                            HourlyRate = 29.701043753745520m,
                            IdentificationNumber = "8155",
                            IsActive = true,
                            LastName = "Kohler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 7, 28, 23, 52, 17, 677, DateTimeKind.Unspecified).AddTicks(4424),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "49c33160-ee6e-4dbe-8c77-56d8fedb6865",
                            DepartmentID = 3,
                            Email = "Earnest_Mitchell22@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Earnest",
                            HourlyRate = 25.745486941070060m,
                            IdentificationNumber = "4020",
                            IsActive = true,
                            LastName = "Mitchell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 8, 13, 23, 17, 25, 202, DateTimeKind.Unspecified).AddTicks(4115),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "ccf54ccd-fe63-4bc9-9185-acf1902ca1cc",
                            DepartmentID = 3,
                            Email = "Edward.Muller5@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Edward",
                            HourlyRate = 28.905358164992820m,
                            IdentificationNumber = "7502",
                            IsActive = true,
                            LastName = "Muller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 8, 5, 15, 2, 991, DateTimeKind.Unspecified).AddTicks(6758),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "89bb616f-5d85-4ffd-b372-e0e0ed7bcbf4",
                            DepartmentID = 3,
                            Email = "Camille_Stracke56@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Camille",
                            HourlyRate = 28.328110844980980m,
                            IdentificationNumber = "4822",
                            IsActive = true,
                            LastName = "Stracke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 10, 27, 16, 39, 21, 346, DateTimeKind.Unspecified).AddTicks(7903),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "04424223-c870-4a90-9c76-1fe4788041f7",
                            DepartmentID = 3,
                            Email = "Brenda_Graham@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Brenda",
                            HourlyRate = 29.064142158750510m,
                            IdentificationNumber = "8474",
                            IsActive = true,
                            LastName = "Graham",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 28, 3, 40, 33, 808, DateTimeKind.Unspecified).AddTicks(3975),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "507e0bf1-a9b8-4621-b43e-428b5d1b4e3d",
                            DepartmentID = 3,
                            Email = "Willie_Hudson74@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Willie",
                            HourlyRate = 25.191390554044110m,
                            IdentificationNumber = "3335",
                            IsActive = true,
                            LastName = "Hudson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 4, 3, 14, 8, 2, 364, DateTimeKind.Unspecified).AddTicks(2550),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "59b0a516-dc46-4296-b099-f6fb98b82325",
                            DepartmentID = 3,
                            Email = "Vickie_Schaefer@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Vickie",
                            HourlyRate = 28.858398072821270m,
                            IdentificationNumber = "6233",
                            IsActive = true,
                            LastName = "Schaefer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 9, 4, 20, 58, 0, 898, DateTimeKind.Unspecified).AddTicks(263),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "23c9dc4d-dbc0-453e-8c75-fa2c106bc948",
                            DepartmentID = 3,
                            Email = "Nicole.Mosciski@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Nicole",
                            HourlyRate = 20.9169192290478010m,
                            IdentificationNumber = "1765",
                            IsActive = true,
                            LastName = "Mosciski",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 4, 5, 22, 30, 46, 448, DateTimeKind.Unspecified).AddTicks(3448),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "9d834ef1-80bb-4461-bac3-309b1d63e329",
                            DepartmentID = 3,
                            Email = "Darnell83@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Darnell",
                            HourlyRate = 27.549330041533960m,
                            IdentificationNumber = "3994",
                            IsActive = true,
                            LastName = "Waelchi",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 10, 20, 15, 59, 13, 121, DateTimeKind.Unspecified).AddTicks(9677),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "545e20b2-a909-4949-bd52-a90770b47452",
                            DepartmentID = 3,
                            Email = "Aaron_McGlynn64@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Aaron",
                            HourlyRate = 21.654550517748370m,
                            IdentificationNumber = "2081",
                            IsActive = true,
                            LastName = "McGlynn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 9, 6, 7, 50, 10, 924, DateTimeKind.Unspecified).AddTicks(8113),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "be4f444f-5371-444c-a361-60a8f77c872b",
                            DepartmentID = 3,
                            Email = "Phillip86@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Phillip",
                            HourlyRate = 27.869371482110290m,
                            IdentificationNumber = "7293",
                            IsActive = true,
                            LastName = "Kautzer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 2, 3, 1, 14, 51, 600, DateTimeKind.Unspecified).AddTicks(4830),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "13fb1c19-74b3-41c8-9228-93186c262f87",
                            DepartmentID = 3,
                            Email = "Perry.Denesik@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Perry",
                            HourlyRate = 24.031598555870170m,
                            IdentificationNumber = "4458",
                            IsActive = true,
                            LastName = "Denesik",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 3, 18, 15, 5, 0, 945, DateTimeKind.Unspecified).AddTicks(828),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "ea1676eb-0861-411a-85e9-a489bfc40a38",
                            DepartmentID = 3,
                            Email = "Victoria26@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Victoria",
                            HourlyRate = 23.91543599959250m,
                            IdentificationNumber = "9187",
                            IsActive = true,
                            LastName = "Howell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 3, 10, 21, 52, 56, DateTimeKind.Unspecified).AddTicks(5730),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "fa5fd19b-46e4-4ad5-b61c-c7550a3921ba",
                            DepartmentID = 3,
                            Email = "Craig.Murazik@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Craig",
                            HourlyRate = 21.194186565090990m,
                            IdentificationNumber = "4352",
                            IsActive = true,
                            LastName = "Murazik",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 5, 7, 11, 22, 0, 123, DateTimeKind.Unspecified).AddTicks(3654),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "6750220c-db37-41ac-abc2-ba89db5e34df",
                            DepartmentID = 1,
                            Email = "Preston.Hyatt27@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Preston",
                            HourlyRate = 23.95162986775470m,
                            IdentificationNumber = "3337",
                            IsActive = true,
                            LastName = "Hyatt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 21, 3, 18, 6, 264, DateTimeKind.Unspecified).AddTicks(9222),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "5c307b3f-3706-43cc-9b5c-1112191cfad8",
                            DepartmentID = 2,
                            Email = "Bertha70@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Bertha",
                            HourlyRate = 23.882716979776840m,
                            IdentificationNumber = "6936",
                            IsActive = true,
                            LastName = "Rosenbaum",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 4, 4, 14, 45, 48, 64, DateTimeKind.Unspecified).AddTicks(1901),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            DepartmentID = 5,
                            Email = "Francisco.Boyer@yahoo.com",
                            EmployeeStatus = 0,
                            FirstName = "Francisco",
                            HourlyRate = 23.453677042133020m,
                            IdentificationNumber = "1767",
                            IsActive = true,
                            LastName = "Boyer",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 5, 15, 7, 10, 26, 632, DateTimeKind.Unspecified).AddTicks(2275),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "496b7fc0-0129-4f90-8a63-f3e3b8271f43",
                            DepartmentID = 6,
                            Email = "Erica16@hotmail.com",
                            EmployeeStatus = 1,
                            FirstName = "Erica",
                            HourlyRate = 20.0686148461273940m,
                            IdentificationNumber = "5993",
                            IsActive = true,
                            LastName = "Murray",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 20, 3, 33, 34, 64, DateTimeKind.Unspecified).AddTicks(5794),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "b6920541-d456-413e-ae6e-211cc47a12d2",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "de8209ce-61bd-4984-87dc-5b7649b4003f",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "db214d5f-71c2-4851-9ed6-337e2c01cfa0",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "9a4bf2d6-1b64-457b-8b29-00e8eb1db8b3",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "30a06449-e697-4fb9-bac3-2d70835eaee1",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "8f479cd3-50c1-42bf-9cc4-a95e1f473b29",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "dbdd0250-8202-4426-a297-39f61b017a99",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "11d54461-a261-488e-b6f7-0222c8289941",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        },
                        new
                        {
                            Id = "faf7c5c9-62cc-4c83-8f95-d51395940793",
                            ConcurrencyStamp = "6b7a277f-bd9b-4c2e-a545-c1fee380ec60",
                            Name = "valilik",
                            NormalizedName = "VALILIK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "cbd6ca5e-672b-4244-93f0-92e85d0e48d4",
                            RoleId = "faf7c5c9-62cc-4c83-8f95-d51395940793"
                        },
                        new
                        {
                            UserId = "4f7ce9a5-6295-4cbb-8f7e-b39ccd7d2601",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "4f7ce9a5-6295-4cbb-8f7e-b39ccd7d2601",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6251bfd1-6a86-468e-b521-d2bd5bd1fab1",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "6251bfd1-6a86-468e-b521-d2bd5bd1fab1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "69c199e2-4d83-424c-a63d-43c48e347d81",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "69c199e2-4d83-424c-a63d-43c48e347d81",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "23325d5c-376d-43a0-a56a-9640344d2add",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "23325d5c-376d-43a0-a56a-9640344d2add",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "96ede2c4-7c30-4ae6-9269-c6d921062bf9",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "96ede2c4-7c30-4ae6-9269-c6d921062bf9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d38ae425-80d4-4884-9cc6-661bec7c5992",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "d38ae425-80d4-4884-9cc6-661bec7c5992",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "504039e4-19af-4539-a87b-8c228f3fe7b6",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "504039e4-19af-4539-a87b-8c228f3fe7b6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9e1d18ea-f2a2-43d3-8166-5abf46f868b1",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "9e1d18ea-f2a2-43d3-8166-5abf46f868b1",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7285fc22-3947-4259-9d7b-2ce5fd47fdea",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "7285fc22-3947-4259-9d7b-2ce5fd47fdea",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4a0a01c7-e573-4d15-b581-52dfb20a9e72",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "4a0a01c7-e573-4d15-b581-52dfb20a9e72",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e27fc89c-3f88-4084-8fcb-450602c4bfa9",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "e27fc89c-3f88-4084-8fcb-450602c4bfa9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "73543b77-c9ba-49af-b8f6-94f3942a6299",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "73543b77-c9ba-49af-b8f6-94f3942a6299",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bf72edbd-72c0-48d8-8e95-30dc2d5ec54a",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "bf72edbd-72c0-48d8-8e95-30dc2d5ec54a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f98d197a-8641-4e97-963b-1931ce645a72",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "f98d197a-8641-4e97-963b-1931ce645a72",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4e57de01-388c-454a-9b91-120559cf3d83",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "4e57de01-388c-454a-9b91-120559cf3d83",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "09b6d160-f680-4cef-ba42-fa02e7f674f0",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "09b6d160-f680-4cef-ba42-fa02e7f674f0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "078aca27-7b6e-4a00-a105-f2b298af643d",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "078aca27-7b6e-4a00-a105-f2b298af643d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "201c205c-af77-44ab-aa08-2417da763225",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "201c205c-af77-44ab-aa08-2417da763225",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b0622e14-32bc-4fee-b2b1-89e4587224d3",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b0622e14-32bc-4fee-b2b1-89e4587224d3",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e4dbe198-d5a0-4688-a301-4d7fc1172034",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e4dbe198-d5a0-4688-a301-4d7fc1172034",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7e1a58cc-095b-4eac-b101-79725c59c82e",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7e1a58cc-095b-4eac-b101-79725c59c82e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "cedcb7ea-a87e-4b3a-82d2-09c69f6938e5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "cedcb7ea-a87e-4b3a-82d2-09c69f6938e5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bc57a858-e461-4a86-a3a4-fc0ed69866cb",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bc57a858-e461-4a86-a3a4-fc0ed69866cb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f8e01904-94ac-47f3-b0d8-db5e6cac802d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f8e01904-94ac-47f3-b0d8-db5e6cac802d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "d78f5d28-ae66-4c5a-a887-6d46a345dc50",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "d78f5d28-ae66-4c5a-a887-6d46a345dc50",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5d40b661-2307-42c0-8efa-29d0c1ea00f5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5d40b661-2307-42c0-8efa-29d0c1ea00f5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1e261708-b457-4b01-b4c1-cc2d2d4a520b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "1e261708-b457-4b01-b4c1-cc2d2d4a520b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f74d8e99-8af3-4b4d-a947-7dd14d7eee35",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f74d8e99-8af3-4b4d-a947-7dd14d7eee35",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1d276bc6-d83d-4c99-b2cb-ac47259a6536",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "1d276bc6-d83d-4c99-b2cb-ac47259a6536",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "49c33160-ee6e-4dbe-8c77-56d8fedb6865",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "49c33160-ee6e-4dbe-8c77-56d8fedb6865",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ccf54ccd-fe63-4bc9-9185-acf1902ca1cc",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ccf54ccd-fe63-4bc9-9185-acf1902ca1cc",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "89bb616f-5d85-4ffd-b372-e0e0ed7bcbf4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "89bb616f-5d85-4ffd-b372-e0e0ed7bcbf4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "04424223-c870-4a90-9c76-1fe4788041f7",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "04424223-c870-4a90-9c76-1fe4788041f7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "507e0bf1-a9b8-4621-b43e-428b5d1b4e3d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "507e0bf1-a9b8-4621-b43e-428b5d1b4e3d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "59b0a516-dc46-4296-b099-f6fb98b82325",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "59b0a516-dc46-4296-b099-f6fb98b82325",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "23c9dc4d-dbc0-453e-8c75-fa2c106bc948",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "23c9dc4d-dbc0-453e-8c75-fa2c106bc948",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "9d834ef1-80bb-4461-bac3-309b1d63e329",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "9d834ef1-80bb-4461-bac3-309b1d63e329",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "545e20b2-a909-4949-bd52-a90770b47452",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "545e20b2-a909-4949-bd52-a90770b47452",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "be4f444f-5371-444c-a361-60a8f77c872b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "be4f444f-5371-444c-a361-60a8f77c872b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "13fb1c19-74b3-41c8-9228-93186c262f87",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "13fb1c19-74b3-41c8-9228-93186c262f87",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ea1676eb-0861-411a-85e9-a489bfc40a38",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ea1676eb-0861-411a-85e9-a489bfc40a38",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "fa5fd19b-46e4-4ad5-b61c-c7550a3921ba",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "fa5fd19b-46e4-4ad5-b61c-c7550a3921ba",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6750220c-db37-41ac-abc2-ba89db5e34df",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "6750220c-db37-41ac-abc2-ba89db5e34df",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5c307b3f-3706-43cc-9b5c-1112191cfad8",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "5c307b3f-3706-43cc-9b5c-1112191cfad8",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "c2779518-1f30-4806-a8b7-471e97509137",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "496b7fc0-0129-4f90-8a63-f3e3b8271f43",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "496b7fc0-0129-4f90-8a63-f3e3b8271f43",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "496b7fc0-0129-4f90-8a63-f3e3b8271f43",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
