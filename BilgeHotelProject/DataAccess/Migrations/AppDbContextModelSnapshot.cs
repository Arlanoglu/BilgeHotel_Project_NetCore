// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c0f0dda-f64e-4760-8c55-374f7b42089e",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "75eb149a-6e9f-4832-bb84-439c8b7191a3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Irene10@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Irene",
                            LastName = "Pollich",
                            LockoutEnabled = false,
                            NormalizedEmail = "IRENE10@GMAIL.COM",
                            NormalizedUserName = "IRENE10@GMAIL.COM",
                            PasswordHash = "AD6sZTobtQinBMZbiWapj3TfczVSOVBgsv3hUKPZ44EU4DHn1eKioiSAQGBQT2/tCw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "31f4afd2-cf75-4962-9481-edb5c1b1a249",
                            TwoFactorEnabled = false,
                            UserName = "Irene10@gmail.com"
                        },
                        new
                        {
                            Id = "a8ce5158-6ebb-4ede-8154-296c471e76dd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b98f9e11-eea3-4976-8e19-170b7082762d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Samuel_Murray20@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Samuel",
                            LastName = "Murray",
                            LockoutEnabled = false,
                            NormalizedEmail = "SAMUEL_MURRAY20@YAHOO.COM",
                            NormalizedUserName = "SAMUEL_MURRAY20@YAHOO.COM",
                            PasswordHash = "AMRqPpLPMDMjwVpL1hdQFiUQPJ8GU8FCrUbf0xj76KrQm1eOR7j1S11nUqoVPa85fA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e93c63e1-85f7-43cd-87de-147a2c8d21d8",
                            TwoFactorEnabled = false,
                            UserName = "Samuel_Murray20@yahoo.com"
                        },
                        new
                        {
                            Id = "0f6cfb56-f35d-46e4-9b2f-f0e5264a696f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e896795c-ebb7-4cf6-a0bb-7eb1301b708b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rosemary24@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rosemary",
                            LastName = "Ullrich",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSEMARY24@HOTMAIL.COM",
                            NormalizedUserName = "ROSEMARY24@HOTMAIL.COM",
                            PasswordHash = "AMGplRAFGLI3g/vJZQma8288e/QH38ysylJF4Qx5wWnOZEsy1dvlLdwtMV+lx75gOg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "096b7398-7212-4304-95ab-4c0cc6eb9e12",
                            TwoFactorEnabled = false,
                            UserName = "Rosemary24@hotmail.com"
                        },
                        new
                        {
                            Id = "7e7deb9d-2f0e-4496-83f6-3f7f1c02d3c5",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "428942ab-d697-49ae-b2e1-ce626cea7bcd",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Dawn.Schaefer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Dawn",
                            LastName = "Schaefer",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAWN.SCHAEFER@HOTMAIL.COM",
                            NormalizedUserName = "DAWN.SCHAEFER@HOTMAIL.COM",
                            PasswordHash = "ANiOHSyl7EsdzCjLevYzKwbOnsvXy2WMwNIpR7uHtyf92IZNklp8o9HpizAtbvHqBA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adb20ea9-cc2c-4a1b-93a5-87c302b3efe0",
                            TwoFactorEnabled = false,
                            UserName = "Dawn.Schaefer@hotmail.com"
                        },
                        new
                        {
                            Id = "68a18ffe-ec3a-40f6-ac08-2b39dc044d6a",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "5572efab-dad2-4f8f-87f9-9c1eb4798156",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rogelio.Yundt27@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rogelio",
                            LastName = "Yundt",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROGELIO.YUNDT27@HOTMAIL.COM",
                            NormalizedUserName = "ROGELIO.YUNDT27@HOTMAIL.COM",
                            PasswordHash = "AA9AW1shRb1PT8maCZM/rEFyCgsKj9tCTsKMwOP1EkAQzqxphNCRNCbezi6qdoDAPA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7d828763-4c75-48d1-8ab7-5f0ca795ed96",
                            TwoFactorEnabled = false,
                            UserName = "Rogelio.Yundt27@hotmail.com"
                        },
                        new
                        {
                            Id = "2eff5e09-9423-413b-bc53-bc1005a69ab5",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "736341d1-7bfc-481b-9aa2-18dac361d947",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lynne91@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lynne",
                            LastName = "Herman",
                            LockoutEnabled = false,
                            NormalizedEmail = "LYNNE91@HOTMAIL.COM",
                            NormalizedUserName = "LYNNE91@HOTMAIL.COM",
                            PasswordHash = "AGPAngp2bi8+kGx0Ge0shTdO+7smOj9FjW6fiRxlU6w4ed6fctf7z4lh8iYPv47PDA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c01b7282-e492-4b0f-9b54-ac1417931605",
                            TwoFactorEnabled = false,
                            UserName = "Lynne91@hotmail.com"
                        },
                        new
                        {
                            Id = "b708da78-f5dd-4b9f-980a-8878435cfa7f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e1f62dc8-a130-4872-9764-93965b53adbd",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Damon36@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Damon",
                            LastName = "Aufderhar",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAMON36@YAHOO.COM",
                            NormalizedUserName = "DAMON36@YAHOO.COM",
                            PasswordHash = "AB5CqZMMr2Wkj3L1VLvQA3lqgO0qprcSa2LEE44U+wkCcJ10bU1pBkP9mVF7nJH1sQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "720b478a-a45d-4865-8cfc-64997af1096d",
                            TwoFactorEnabled = false,
                            UserName = "Damon36@yahoo.com"
                        },
                        new
                        {
                            Id = "186d7d00-399f-461b-8e74-0b185d04d390",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "78d9093d-a08e-47ad-b334-58a3f5275e5c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Flora.McGlynn@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Flora",
                            LastName = "McGlynn",
                            LockoutEnabled = false,
                            NormalizedEmail = "FLORA.MCGLYNN@YAHOO.COM",
                            NormalizedUserName = "FLORA.MCGLYNN@YAHOO.COM",
                            PasswordHash = "AKDnC4nYyVodPS9ckCPDcUvulCG8gVy1kg0i8Jvz1OFFgUsxZratWEEqK9Uxxg4YKg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ed31075a-8938-4a05-bd94-4afabce8ea01",
                            TwoFactorEnabled = false,
                            UserName = "Flora.McGlynn@yahoo.com"
                        },
                        new
                        {
                            Id = "91568893-feb4-4c07-a523-6ce308888ddd",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "2de991b2-efee-4d09-bf2d-94eb51382d53",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Clayton.Howell67@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Clayton",
                            LastName = "Howell",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAYTON.HOWELL67@HOTMAIL.COM",
                            NormalizedUserName = "CLAYTON.HOWELL67@HOTMAIL.COM",
                            PasswordHash = "AHFIa04ylPIVFdhYNb9lKNSIfoK+xAOqa1SrajACfR+QTS4Q8leStkvkmZ8EmlFscg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "505d489e-748f-4f28-ad8d-bc96d1f51386",
                            TwoFactorEnabled = false,
                            UserName = "Clayton.Howell67@hotmail.com"
                        },
                        new
                        {
                            Id = "bdc19aee-648f-4e35-bffd-0a151340f9ce",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "a82f979e-92a0-467a-b566-7bb130478055",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cornelius85@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Cornelius",
                            LastName = "Mueller",
                            LockoutEnabled = false,
                            NormalizedEmail = "CORNELIUS85@HOTMAIL.COM",
                            NormalizedUserName = "CORNELIUS85@HOTMAIL.COM",
                            PasswordHash = "AJVoATNo+/VCgP7q2cbp/N2ig+AoO+7XEM9/aR/EzIy9dUj6LepyhU9EHgNhkr4Erw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82e7da04-b600-437e-974b-55adcd501cf7",
                            TwoFactorEnabled = false,
                            UserName = "Cornelius85@hotmail.com"
                        },
                        new
                        {
                            Id = "746bf451-2f0f-40bf-b10a-4c6faf62c132",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f1c7b45e-2008-49c5-ab4e-a2276eb5992b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alfonso68@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alfonso",
                            LastName = "Murray",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALFONSO68@GMAIL.COM",
                            NormalizedUserName = "ALFONSO68@GMAIL.COM",
                            PasswordHash = "AOzJ6eMl9CpG6TjjgASBOOKsNWYGiQ4H3xkT+3cdETHtXhGrQwnalhT4JdQwLd4OcQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7dda579c-57cc-4544-a544-44c504e936fc",
                            TwoFactorEnabled = false,
                            UserName = "Alfonso68@gmail.com"
                        },
                        new
                        {
                            Id = "758cac08-c79e-4683-bd68-bc7b13feca19",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "759d48b0-568e-4274-a3d5-95cdd268c329",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sergio.Deckow67@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sergio",
                            LastName = "Deckow",
                            LockoutEnabled = false,
                            NormalizedEmail = "SERGIO.DECKOW67@HOTMAIL.COM",
                            NormalizedUserName = "SERGIO.DECKOW67@HOTMAIL.COM",
                            PasswordHash = "AKwLG52l7pbLwf9XQLw5VmIlkEqaaZ1ROqux7+H98EkZSDuaK7jOVg6Y7dJSP6wAIA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b0563c51-aa8d-41e7-8c62-9555ae039c04",
                            TwoFactorEnabled = false,
                            UserName = "Sergio.Deckow67@hotmail.com"
                        },
                        new
                        {
                            Id = "4b0ba339-7c65-4d0d-b421-1f84ff78db57",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8439968b-34bd-4423-9cf7-0d20df515cb7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Sam_Powlowski83@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sam",
                            LastName = "Powlowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "SAM_POWLOWSKI83@GMAIL.COM",
                            NormalizedUserName = "SAM_POWLOWSKI83@GMAIL.COM",
                            PasswordHash = "AITzhNtWNMMMeic6rqvyw2iOiUDAN9jmy0pgApDuZugv7v11frDMPqCaJMnF0FT2jg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "93c26763-21e1-466a-8a4b-a34ff1bd9aae",
                            TwoFactorEnabled = false,
                            UserName = "Sam_Powlowski83@gmail.com"
                        },
                        new
                        {
                            Id = "16edb950-186f-42f4-9cec-6a33f8d69a1d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "aa891fd7-24e6-44ec-9e08-328fc5b3bc12",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Edith21@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Edith",
                            LastName = "Schneider",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDITH21@GMAIL.COM",
                            NormalizedUserName = "EDITH21@GMAIL.COM",
                            PasswordHash = "AL6DKK32IUqsdZW369zoLorX3S+JgcbwuQrVKzjvYcbuIc6gMNoUuFmovIO/FvPC5Q==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3f0e1b6f-1391-421a-a08b-38d44258828a",
                            TwoFactorEnabled = false,
                            UserName = "Edith21@gmail.com"
                        },
                        new
                        {
                            Id = "3465ba99-caf2-4849-af96-6a55851a5b77",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4bf7efeb-9dd3-4fe6-a062-40365ae1a2ff",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Paulette_Jerde30@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Paulette",
                            LastName = "Jerde",
                            LockoutEnabled = false,
                            NormalizedEmail = "PAULETTE_JERDE30@YAHOO.COM",
                            NormalizedUserName = "PAULETTE_JERDE30@YAHOO.COM",
                            PasswordHash = "AG4OYoX41WG/rEr8R9p958Eix4W5HwV4a4GrsVpj+bCCqEmTATVvZSPELZtukGpF+g==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6a73a8bd-18a5-475c-97ae-9c2f28ebea3a",
                            TwoFactorEnabled = false,
                            UserName = "Paulette_Jerde30@yahoo.com"
                        },
                        new
                        {
                            Id = "ed31056b-7fb0-4e77-b7e8-4085cbc926d7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "4eec4a7f-7af7-41e1-886e-4b584e72c200",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lee.Mayer99@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lee",
                            LastName = "Mayer",
                            LockoutEnabled = false,
                            NormalizedEmail = "LEE.MAYER99@GMAIL.COM",
                            NormalizedUserName = "LEE.MAYER99@GMAIL.COM",
                            PasswordHash = "AN/XwxjjJp2Tu3GkPoLztaxgtlbpWZM5gO34nS0uOOEeueYJTiWMtQxqz0Q48JS5Pg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "38cb8e1d-fba9-44f2-b627-f7f847c28ad8",
                            TwoFactorEnabled = false,
                            UserName = "Lee.Mayer99@gmail.com"
                        },
                        new
                        {
                            Id = "0083f5f9-e6fd-475a-a2df-f43523008feb",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8cbfd3aa-94d7-4672-93fe-5c3eec86eb7c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jodi70@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Jodi",
                            LastName = "Volkman",
                            LockoutEnabled = false,
                            NormalizedEmail = "JODI70@YAHOO.COM",
                            NormalizedUserName = "JODI70@YAHOO.COM",
                            PasswordHash = "AFIH3XQZERGiDbXqi3tQ2pXNeQJtCU3fdCs+vRD8Ux6iKZMemMBnbbZcfCA9isjZkg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "096060c9-a0a4-46b7-8cb5-001d95c0427a",
                            TwoFactorEnabled = false,
                            UserName = "Jodi70@yahoo.com"
                        },
                        new
                        {
                            Id = "65ddf361-0344-465d-ab9e-b818daaf0be7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "73bb9168-6c5d-41c2-984b-9b6f38bcfaa2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Justin.Gerhold@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Justin",
                            LastName = "Gerhold",
                            LockoutEnabled = false,
                            NormalizedEmail = "JUSTIN.GERHOLD@GMAIL.COM",
                            NormalizedUserName = "JUSTIN.GERHOLD@GMAIL.COM",
                            PasswordHash = "APQr7GNi0o9pQbPsKnONG3QU45SL2dbLJCemBa0kMQb2SZJZypB66ufjinXZOAdukA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5cf801e5-2e88-4edc-b03d-9b2a752399fb",
                            TwoFactorEnabled = false,
                            UserName = "Justin.Gerhold@gmail.com"
                        },
                        new
                        {
                            Id = "5b1c893c-4baa-4e91-99f3-e837cd63585b",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "da534738-ba44-4d99-a918-9abc3c2df68c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tricia.Wiza@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Tricia",
                            LastName = "Wiza",
                            LockoutEnabled = false,
                            NormalizedEmail = "TRICIA.WIZA@YAHOO.COM",
                            NormalizedUserName = "TRICIA.WIZA@YAHOO.COM",
                            PasswordHash = "ADG5Fru8avuHETYpEq0Lz/8Iw+RVAtyLEyO2sx85ZFrMsgeVZ6dyLb8gISDO2LmCfw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "294b0957-12e7-4b41-be4a-213e3ecac023",
                            TwoFactorEnabled = false,
                            UserName = "Tricia.Wiza@yahoo.com"
                        },
                        new
                        {
                            Id = "6e02fba6-cf2e-4ac4-b2c2-077e659740d4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "e9e3451c-b525-446b-9ae9-5d3829725dea",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Janice85@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Janice",
                            LastName = "Gaylord",
                            LockoutEnabled = false,
                            NormalizedEmail = "JANICE85@HOTMAIL.COM",
                            NormalizedUserName = "JANICE85@HOTMAIL.COM",
                            PasswordHash = "AMBahub2Jd1yw4NDIQjiYtKhEYcvlTjreJoPCbTp7nquRQPUORb1mbUXO/xIYVf/Aw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6aedc9e0-b88c-464d-ab36-c1d8ba6c9ff8",
                            TwoFactorEnabled = false,
                            UserName = "Janice85@hotmail.com"
                        },
                        new
                        {
                            Id = "4e66fd1d-0b73-4f78-a631-cfc3fd0f0bf6",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9a9efa00-fead-43ab-9bd1-7e721834c07c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Miriam.Bernier48@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Miriam",
                            LastName = "Bernier",
                            LockoutEnabled = false,
                            NormalizedEmail = "MIRIAM.BERNIER48@HOTMAIL.COM",
                            NormalizedUserName = "MIRIAM.BERNIER48@HOTMAIL.COM",
                            PasswordHash = "AGLO9Hg4hsUrkxCDuS+mM8e6F2QDiz09iO8piblolTZFCHIR8bEtEfUHwe6l1YYLiw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43a6c526-da7a-44ae-8f37-2905eaf1a2bb",
                            TwoFactorEnabled = false,
                            UserName = "Miriam.Bernier48@hotmail.com"
                        },
                        new
                        {
                            Id = "3fbe28a2-383a-4bc1-91c3-39c49600fdf7",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "b22a5d5f-a1ca-455d-b25a-69f533365199",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mack_Hilpert@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Mack",
                            LastName = "Hilpert",
                            LockoutEnabled = false,
                            NormalizedEmail = "MACK_HILPERT@YAHOO.COM",
                            NormalizedUserName = "MACK_HILPERT@YAHOO.COM",
                            PasswordHash = "AODtrWDBvE8QIlb51apuEbrEzMesm1DAmoHfnG4c6kVQxBoaSc9T5YTnSnY9YJNIVA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a7babed-7176-4e5c-910b-c1c8df8374ce",
                            TwoFactorEnabled = false,
                            UserName = "Mack_Hilpert@yahoo.com"
                        },
                        new
                        {
                            Id = "8aefe060-1b14-446e-8780-16342e0d1fa6",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d854bf41-644f-42fe-b42d-48ef837d363f",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elbert28@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Elbert",
                            LastName = "Volkman",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELBERT28@YAHOO.COM",
                            NormalizedUserName = "ELBERT28@YAHOO.COM",
                            PasswordHash = "AKdx6ZBV5miS9EibDMfoWLuKIPVUbRNedjWFKYpaQHdBVkk2ZiIbtiixgSkjF7zDig==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87953814-e532-4e8f-9578-3a088a7aac78",
                            TwoFactorEnabled = false,
                            UserName = "Elbert28@yahoo.com"
                        },
                        new
                        {
                            Id = "33c98c9f-d8f0-42a6-b105-80f246aa2c11",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1224e130-4d08-4e54-9bda-3c51fab0a7ce",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Arlene_Hayes@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Arlene",
                            LastName = "Hayes",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARLENE_HAYES@GMAIL.COM",
                            NormalizedUserName = "ARLENE_HAYES@GMAIL.COM",
                            PasswordHash = "AJqCz2Upvs/n77Hk4Vef5I5DSL3vP2rDTmdAfbwqkZiqLo4BDejsp20p/wq4h3Swpw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fc0dcff-c813-4124-b9c8-2919e020d4bc",
                            TwoFactorEnabled = false,
                            UserName = "Arlene_Hayes@gmail.com"
                        },
                        new
                        {
                            Id = "f0773878-23d7-4835-a421-6e2ed4ab8038",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d7a8cd7d-470a-4455-9e19-0540ee02285e",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Darren9@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Darren",
                            LastName = "Oberbrunner",
                            LockoutEnabled = false,
                            NormalizedEmail = "DARREN9@YAHOO.COM",
                            NormalizedUserName = "DARREN9@YAHOO.COM",
                            PasswordHash = "AJLMRykom99Z8Bip620hEqaoEtrw1z/vAZhGUPc48UilIy2YZnwe1/Ekfi3lxKgbDw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e36951ce-e131-4769-a7b8-317b9056f6e1",
                            TwoFactorEnabled = false,
                            UserName = "Darren9@yahoo.com"
                        },
                        new
                        {
                            Id = "51b8feca-22c2-49aa-a83b-c79b81393563",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "45d3e12c-2b4e-4a90-9815-e4dfdc0bb2d2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Johanna_Donnelly54@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Johanna",
                            LastName = "Donnelly",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHANNA_DONNELLY54@HOTMAIL.COM",
                            NormalizedUserName = "JOHANNA_DONNELLY54@HOTMAIL.COM",
                            PasswordHash = "AK3Gh6Fla+DuDkt04y5cGlMemSV98u6Ocdhr3ArRKnlkIfdb6FEr0DLrxx+HaUa2qA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f8f9af44-1aeb-42bc-b55a-4668032aef07",
                            TwoFactorEnabled = false,
                            UserName = "Johanna_Donnelly54@hotmail.com"
                        },
                        new
                        {
                            Id = "e02a26ff-8714-4309-9b94-cd438dab006d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8ac4c178-208f-4c46-8fa4-74b7fcb65cdf",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Delbert_Lesch81@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Delbert",
                            LastName = "Lesch",
                            LockoutEnabled = false,
                            NormalizedEmail = "DELBERT_LESCH81@HOTMAIL.COM",
                            NormalizedUserName = "DELBERT_LESCH81@HOTMAIL.COM",
                            PasswordHash = "AHVQ4Ftg5P/hJgp/zALMgCiBy/z0XJO+8Mr02xUl1xW3Rdxjhy0NQrWIsxyzrOv2NA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7ea31e9-ff39-4ca6-aa95-c160bc47f0c1",
                            TwoFactorEnabled = false,
                            UserName = "Delbert_Lesch81@hotmail.com"
                        },
                        new
                        {
                            Id = "b7fccc7c-fff8-4ccc-840c-4e6ecec3ddc4",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "3ff60961-5295-44c8-856e-c691bcf7f1f5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Hector20@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Hector",
                            LastName = "Huels",
                            LockoutEnabled = false,
                            NormalizedEmail = "HECTOR20@YAHOO.COM",
                            NormalizedUserName = "HECTOR20@YAHOO.COM",
                            PasswordHash = "AOvOIknD2FG6pqLmH/wZsnyhkp8rf8EjfXG/7F4++X94Yzfel4Dmu49iiQbNMSTXpA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ddaec124-668e-49e4-91c7-0ef656d4647f",
                            TwoFactorEnabled = false,
                            UserName = "Hector20@yahoo.com"
                        },
                        new
                        {
                            Id = "bfdb57ee-9ce1-4f57-a2af-cc89b606c643",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "2115fbed-86dd-4d36-a7c9-87a4f3ccb98c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Donna.Huels@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Donna",
                            LastName = "Huels",
                            LockoutEnabled = false,
                            NormalizedEmail = "DONNA.HUELS@HOTMAIL.COM",
                            NormalizedUserName = "DONNA.HUELS@HOTMAIL.COM",
                            PasswordHash = "AN3NnwItmEgOHwqdt6jySyhtZoh/oHItBELMmBggLJxoAco3pFqW5xnmThmOXpF+zQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30ecfeda-ff0f-4f53-acce-e49689eb8f2a",
                            TwoFactorEnabled = false,
                            UserName = "Donna.Huels@hotmail.com"
                        },
                        new
                        {
                            Id = "a1f2c838-8c0f-42d6-a480-1da6bd1ff4a9",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "daa01998-d9ed-4baf-b44a-0379ede740d8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kristi.Moen1@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Kristi",
                            LastName = "Moen",
                            LockoutEnabled = false,
                            NormalizedEmail = "KRISTI.MOEN1@YAHOO.COM",
                            NormalizedUserName = "KRISTI.MOEN1@YAHOO.COM",
                            PasswordHash = "AKGofR+R3pI4gQyz+UJki4BLywWX2R78ixlA5EnLvbNbn0feELYaAvYcI8Tw6rSAVg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5d60fb5d-5831-49d4-83ae-d3714b89db84",
                            TwoFactorEnabled = false,
                            UserName = "Kristi.Moen1@yahoo.com"
                        },
                        new
                        {
                            Id = "7adeb4ea-e823-4699-ad3b-7eb2a3f0b749",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f5fcd88b-296c-460e-9b14-d07df571b4d4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Winifred25@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Winifred",
                            LastName = "Corwin",
                            LockoutEnabled = false,
                            NormalizedEmail = "WINIFRED25@HOTMAIL.COM",
                            NormalizedUserName = "WINIFRED25@HOTMAIL.COM",
                            PasswordHash = "ABL9ZNindSQYdCVIu3J1ntZ8dhf4Kv9whq5OgwTfYguXetu3oUQm0b2UXDoDwfy5XA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30b7a3f1-d7a4-488a-b472-f1c623cf895b",
                            TwoFactorEnabled = false,
                            UserName = "Winifred25@hotmail.com"
                        },
                        new
                        {
                            Id = "24a7031f-3180-41fc-a471-555024ca8d66",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6074203e-e76b-48f8-b029-89f069b4a048",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kayla.Reilly19@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kayla",
                            LastName = "Reilly",
                            LockoutEnabled = false,
                            NormalizedEmail = "KAYLA.REILLY19@HOTMAIL.COM",
                            NormalizedUserName = "KAYLA.REILLY19@HOTMAIL.COM",
                            PasswordHash = "AE/L5DZuFbTMFC/HM8u9GwPHqQa7rdNT60kSSEVyQ5XnVlwUXn0wKR8uzw0JB6E+MQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fe5dcecc-7ec6-4875-ba9c-5be824e4707a",
                            TwoFactorEnabled = false,
                            UserName = "Kayla.Reilly19@hotmail.com"
                        },
                        new
                        {
                            Id = "5342700a-8c50-47ad-9599-039c6540fc99",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f7bd41c5-25dd-4b0f-97e4-476ae6584745",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Louise10@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Louise",
                            LastName = "Dickens",
                            LockoutEnabled = false,
                            NormalizedEmail = "LOUISE10@GMAIL.COM",
                            NormalizedUserName = "LOUISE10@GMAIL.COM",
                            PasswordHash = "AEgZjNN1n49Mr4j7jNyEUkc4CnMdqAEB7Hp5ZD/I5bknzd0P/Ii4N7CEvOOHzfr5LA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "697d85db-7a9e-46ef-848e-0cdcbcc090ce",
                            TwoFactorEnabled = false,
                            UserName = "Louise10@gmail.com"
                        },
                        new
                        {
                            Id = "a7263790-59f1-4f6d-b0ec-3bd74899d1d0",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "701827cc-fb85-4184-99b5-440ee59aabe8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Leland_Kessler77@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Leland",
                            LastName = "Kessler",
                            LockoutEnabled = false,
                            NormalizedEmail = "LELAND_KESSLER77@YAHOO.COM",
                            NormalizedUserName = "LELAND_KESSLER77@YAHOO.COM",
                            PasswordHash = "APfvQz21azfKVRi4N18TXoFihCQ8oZcyUKTOQC44x6G4onx0Y35HL9/u/OldJ7TI2w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "72c633bc-80fa-48c5-9031-bce2ccbcbf94",
                            TwoFactorEnabled = false,
                            UserName = "Leland_Kessler77@yahoo.com"
                        },
                        new
                        {
                            Id = "bf58fa77-59af-4b38-af7f-6cc60249b8a5",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6c0698e6-2662-487d-a94d-feaf78b33eff",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Otis_Sporer30@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Otis",
                            LastName = "Sporer",
                            LockoutEnabled = false,
                            NormalizedEmail = "OTIS_SPORER30@GMAIL.COM",
                            NormalizedUserName = "OTIS_SPORER30@GMAIL.COM",
                            PasswordHash = "ALczKB8FhE/uXZSC1L+LRkR9leWlRaaBBV0Gk0O/K0zaMNdryEsCGr+3qBw1rtbioA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29cd5c43-566a-4f82-8321-b8d288636b7b",
                            TwoFactorEnabled = false,
                            UserName = "Otis_Sporer30@gmail.com"
                        },
                        new
                        {
                            Id = "8d796e71-5df5-4fbf-8518-05885e3d5b75",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "818346ac-7ddf-40f2-ac0b-cba8e7cc909a",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wayne41@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Wayne",
                            LastName = "Kassulke",
                            LockoutEnabled = false,
                            NormalizedEmail = "WAYNE41@HOTMAIL.COM",
                            NormalizedUserName = "WAYNE41@HOTMAIL.COM",
                            PasswordHash = "AKE53Dp5q1/x1fzrww25Aef2220PjEwlsFSCPzblCf2A5wR35AYOpCzi15URYIUXWg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33b9b1db-b4a1-48d7-89f5-79e6f22baf0b",
                            TwoFactorEnabled = false,
                            UserName = "Wayne41@hotmail.com"
                        },
                        new
                        {
                            Id = "04ec5159-4484-4f9b-9ef1-ac947433ecd3",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "6fb6aff7-81dc-4d9a-bb39-d8e2edccf7f7",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Robyn.Quitzon@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Robyn",
                            LastName = "Quitzon",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROBYN.QUITZON@HOTMAIL.COM",
                            NormalizedUserName = "ROBYN.QUITZON@HOTMAIL.COM",
                            PasswordHash = "AApn0pwbLxqTduYN7FpmSC4fZfPDEC1HGHXhbZNN91vYUw9tNrCHMHPZ8pHIj1bUFg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44b407be-5c41-425f-9a25-7c0da96967d5",
                            TwoFactorEnabled = false,
                            UserName = "Robyn.Quitzon@hotmail.com"
                        },
                        new
                        {
                            Id = "4239338b-9d71-4d98-87ab-75cb6805d7db",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "53c23197-748f-4710-b435-d514af50bc71",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Estelle28@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Estelle",
                            LastName = "Kris",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTELLE28@HOTMAIL.COM",
                            NormalizedUserName = "ESTELLE28@HOTMAIL.COM",
                            PasswordHash = "AJYpTIHgfWRxoapgYmyMSmmo7RUaUXwbotbbGklsVzUyBEUMqynSPW3fWxQn9SRMeA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11c6b5e4-b1eb-4379-a174-53ca7b45c4db",
                            TwoFactorEnabled = false,
                            UserName = "Estelle28@hotmail.com"
                        },
                        new
                        {
                            Id = "8a644b3f-f1c5-4934-8cad-d6b6b0472b3f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "bfffbee5-8412-44e3-82f1-fbbbbd2fb67b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ellis_Schowalter@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ellis",
                            LastName = "Schowalter",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELLIS_SCHOWALTER@HOTMAIL.COM",
                            NormalizedUserName = "ELLIS_SCHOWALTER@HOTMAIL.COM",
                            PasswordHash = "AEQTtd/VUWI7lerROOXEVkDr61gmWJk47s9x4nlEOnF4wWYPH4tSx+hP9gPhTkEyHQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a574392-1e01-445e-8faa-60647212c2c0",
                            TwoFactorEnabled = false,
                            UserName = "Ellis_Schowalter@hotmail.com"
                        },
                        new
                        {
                            Id = "0dbb3350-ac77-4695-94c2-c41095fcb649",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "9d993450-fab7-44be-92c7-0fdedd4bc154",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Stacy16@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Stacy",
                            LastName = "Lebsack",
                            LockoutEnabled = false,
                            NormalizedEmail = "STACY16@HOTMAIL.COM",
                            NormalizedUserName = "STACY16@HOTMAIL.COM",
                            PasswordHash = "APaTDf8/fp2+EG5Q/nGjzO0QHqC03vsjhv+SnoDSRSjrC6GXKjGP9LbmFMx127zbmQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8275eeb5-7934-41e6-b8dc-7a165085e111",
                            TwoFactorEnabled = false,
                            UserName = "Stacy16@hotmail.com"
                        },
                        new
                        {
                            Id = "ead7f891-0ef9-49ee-a5c2-cb7302311447",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "624bb009-6273-4922-a569-ecd71d68fad5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kimberly.Braun68@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kimberly",
                            LastName = "Braun",
                            LockoutEnabled = false,
                            NormalizedEmail = "KIMBERLY.BRAUN68@GMAIL.COM",
                            NormalizedUserName = "KIMBERLY.BRAUN68@GMAIL.COM",
                            PasswordHash = "AEGGtHrr1XS/EdSwcEjsBfEjbJgsNaAmJ58yORxxS46vghkFrQJcgZA+4mkbhgW7XA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adee2c8e-2ce1-4a85-a0c5-855339612add",
                            TwoFactorEnabled = false,
                            UserName = "Kimberly.Braun68@gmail.com"
                        },
                        new
                        {
                            Id = "498253b1-8809-4cc6-9889-2da6fedaf631",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "7dfd93fd-6b5f-4f3e-895c-aea8f90002fa",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Everett59@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Everett",
                            LastName = "Olson",
                            LockoutEnabled = false,
                            NormalizedEmail = "EVERETT59@GMAIL.COM",
                            NormalizedUserName = "EVERETT59@GMAIL.COM",
                            PasswordHash = "ABHas8A2qZY/Seem+AEPr60WONA23AlLr4cu+aDxvpYOcMCoZcPS0zf86X2yEI/4Dg==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36e75960-96f2-47d3-9c06-a9a8ec2bcf25",
                            TwoFactorEnabled = false,
                            UserName = "Everett59@gmail.com"
                        },
                        new
                        {
                            Id = "f080f977-63eb-4b54-8047-9de9bf5798df",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "285709db-8271-4d2b-9c15-88bbdd9036ec",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Calvin_Little@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Calvin",
                            LastName = "Little",
                            LockoutEnabled = false,
                            NormalizedEmail = "CALVIN_LITTLE@HOTMAIL.COM",
                            NormalizedUserName = "CALVIN_LITTLE@HOTMAIL.COM",
                            PasswordHash = "AHx5EdNokecnqd7Laoj7M48Etn+5EYTt5UO9yF3bgZx5vYHqdR3fvCqayP1CXwhsYQ==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7a943ed-1110-490c-9ee3-af5dec7fed37",
                            TwoFactorEnabled = false,
                            UserName = "Calvin_Little@hotmail.com"
                        },
                        new
                        {
                            Id = "b51b9fee-6cc2-4cec-8fd4-fbf936cc4d5f",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "341b668e-079c-417a-b370-fbf0e76c4ff6",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elisa51@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Elisa",
                            LastName = "Hegmann",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELISA51@YAHOO.COM",
                            NormalizedUserName = "ELISA51@YAHOO.COM",
                            PasswordHash = "AGUk4wBYuehecrnVhhoQBOM3cF74H+8ERrjQMWPuPwUS784BGpS2pU1X9r5EZ3szLw==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5c6a2f20-9d9c-42a1-a832-b89b4d60f100",
                            TwoFactorEnabled = false,
                            UserName = "Elisa51@yahoo.com"
                        },
                        new
                        {
                            Id = "73ff4615-f322-439e-9251-83e45d2d8188",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "34192c9c-0e49-4372-b3a5-33601c07eb0d",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Rafael_Weissnat27@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Rafael",
                            LastName = "Weissnat",
                            LockoutEnabled = false,
                            NormalizedEmail = "RAFAEL_WEISSNAT27@YAHOO.COM",
                            NormalizedUserName = "RAFAEL_WEISSNAT27@YAHOO.COM",
                            PasswordHash = "AIDbMhgIRdRyG1IHpzqPzgr5UWNkngLE18/lkO0FIqYF/9RLTZEsxqv4AjYi+r338w==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3f3e662a-0ac9-4fbf-898b-fc66d629ee14",
                            TwoFactorEnabled = false,
                            UserName = "Rafael_Weissnat27@yahoo.com"
                        },
                        new
                        {
                            Id = "1c5463b5-5ce9-4b2a-974d-94026ee3e28d",
                            AccessFailedCount = 0,
                            ActivationKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "37ec58ed-4e60-4e33-99b8-1076660184aa",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Freda86@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Freda",
                            LastName = "Bauch",
                            LockoutEnabled = false,
                            NormalizedEmail = "FREDA86@HOTMAIL.COM",
                            NormalizedUserName = "FREDA86@HOTMAIL.COM",
                            PasswordHash = "AG9vobQNcdldC7OOu4OGm26CBwuFHpDgbYdW+7rbZrIZFoj1u2kgpvIPVT39R/55fA==",
                            PhoneNumber = "05111111111",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4ec7462b-f351-4d4a-bb9c-eb63edbfcadc",
                            TwoFactorEnabled = false,
                            UserName = "Freda86@hotmail.com"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "93521 McDermott Divide, Gulgowskiland, Greenland",
                            Email = "Mack23@yahoo.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppUserId = "3c0f0dda-f64e-4760-8c55-374f7b42089e",
                            DepartmentID = 4,
                            Email = "Irene10@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Irene",
                            HourlyRate = 197.439600395709090m,
                            IdentificationNumber = "2793",
                            IsActive = true,
                            LastName = "Pollich",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 5, 9, 1, 59, 40, 368, DateTimeKind.Unspecified).AddTicks(870),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 2,
                            AppUserId = "a8ce5158-6ebb-4ede-8154-296c471e76dd",
                            DepartmentID = 4,
                            Email = "Samuel_Murray20@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Samuel",
                            HourlyRate = 191.163035054301390m,
                            IdentificationNumber = "1568",
                            IsActive = true,
                            LastName = "Murray",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 9, 13, 4, 54, 59, 720, DateTimeKind.Unspecified).AddTicks(7549),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 3,
                            AppUserId = "0f6cfb56-f35d-46e4-9b2f-f0e5264a696f",
                            DepartmentID = 4,
                            Email = "Rosemary24@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rosemary",
                            HourlyRate = 191.620506407516310m,
                            IdentificationNumber = "1847",
                            IsActive = true,
                            LastName = "Ullrich",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 11, 24, 5, 25, 14, 633, DateTimeKind.Unspecified).AddTicks(4564),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 4,
                            AppUserId = "7e7deb9d-2f0e-4496-83f6-3f7f1c02d3c5",
                            DepartmentID = 4,
                            Email = "Dawn.Schaefer@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Dawn",
                            HourlyRate = 199.766172249692570m,
                            IdentificationNumber = "3919",
                            IsActive = true,
                            LastName = "Schaefer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 5, 7, 5, 30, 52, 25, DateTimeKind.Unspecified).AddTicks(6147),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 5,
                            AppUserId = "68a18ffe-ec3a-40f6-ac08-2b39dc044d6a",
                            DepartmentID = 4,
                            Email = "Rogelio.Yundt27@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rogelio",
                            HourlyRate = 196.701255821018130m,
                            IdentificationNumber = "5047",
                            IsActive = true,
                            LastName = "Yundt",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 3, 8, 19, 49, 31, 601, DateTimeKind.Unspecified).AddTicks(769),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 6,
                            AppUserId = "2eff5e09-9423-413b-bc53-bc1005a69ab5",
                            DepartmentID = 4,
                            Email = "Lynne91@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lynne",
                            HourlyRate = 192.465373302095280m,
                            IdentificationNumber = "8411",
                            IsActive = true,
                            LastName = "Herman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2022, 1, 29, 17, 22, 35, 309, DateTimeKind.Unspecified).AddTicks(1633),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 7,
                            AppUserId = "b708da78-f5dd-4b9f-980a-8878435cfa7f",
                            DepartmentID = 4,
                            Email = "Damon36@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Damon",
                            HourlyRate = 197.213234676613120m,
                            IdentificationNumber = "9934",
                            IsActive = true,
                            LastName = "Aufderhar",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 3,
                            StartDateOfWork = new DateTime(2020, 4, 8, 6, 22, 41, 147, DateTimeKind.Unspecified).AddTicks(1160),
                            Status = 0,
                            Title = "Resepsiyonist"
                        },
                        new
                        {
                            ID = 8,
                            AppUserId = "186d7d00-399f-461b-8e74-0b185d04d390",
                            DepartmentID = 1,
                            Email = "Flora.McGlynn@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Flora",
                            HourlyRate = 197.653185784655240m,
                            IdentificationNumber = "3649",
                            IsActive = true,
                            LastName = "McGlynn",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 13, 17, 26, 55, 199, DateTimeKind.Unspecified).AddTicks(3350),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 9,
                            AppUserId = "91568893-feb4-4c07-a523-6ce308888ddd",
                            DepartmentID = 1,
                            Email = "Clayton.Howell67@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Clayton",
                            HourlyRate = 190.33269607011820m,
                            IdentificationNumber = "1113",
                            IsActive = true,
                            LastName = "Howell",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 27, 10, 25, 34, 708, DateTimeKind.Unspecified).AddTicks(9151),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 10,
                            AppUserId = "bdc19aee-648f-4e35-bffd-0a151340f9ce",
                            DepartmentID = 1,
                            Email = "Cornelius85@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Cornelius",
                            HourlyRate = 196.700575415371250m,
                            IdentificationNumber = "9684",
                            IsActive = true,
                            LastName = "Mueller",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 2, 10, 21, 4, 59, 736, DateTimeKind.Unspecified).AddTicks(9401),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 11,
                            AppUserId = "746bf451-2f0f-40bf-b10a-4c6faf62c132",
                            DepartmentID = 1,
                            Email = "Alfonso68@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Alfonso",
                            HourlyRate = 193.876531209739170m,
                            IdentificationNumber = "5929",
                            IsActive = true,
                            LastName = "Murray",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 3, 2, 27, 1, 866, DateTimeKind.Unspecified).AddTicks(2231),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 12,
                            AppUserId = "758cac08-c79e-4683-bd68-bc7b13feca19",
                            DepartmentID = 1,
                            Email = "Sergio.Deckow67@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sergio",
                            HourlyRate = 194.702825497231830m,
                            IdentificationNumber = "3045",
                            IsActive = true,
                            LastName = "Deckow",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 11, 5, 46, 8, 244, DateTimeKind.Unspecified).AddTicks(4831),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 13,
                            AppUserId = "4b0ba339-7c65-4d0d-b421-1f84ff78db57",
                            DepartmentID = 1,
                            Email = "Sam_Powlowski83@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sam",
                            HourlyRate = 199.910395047585660m,
                            IdentificationNumber = "5230",
                            IsActive = true,
                            LastName = "Powlowski",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 9, 2, 17, 46, 43, 168, DateTimeKind.Unspecified).AddTicks(3015),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 14,
                            AppUserId = "16edb950-186f-42f4-9cec-6a33f8d69a1d",
                            DepartmentID = 1,
                            Email = "Edith21@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Edith",
                            HourlyRate = 198.790448773089070m,
                            IdentificationNumber = "5084",
                            IsActive = true,
                            LastName = "Schneider",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 3, 5, 0, 51, 24, 516, DateTimeKind.Unspecified).AddTicks(9946),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 15,
                            AppUserId = "3465ba99-caf2-4849-af96-6a55851a5b77",
                            DepartmentID = 1,
                            Email = "Paulette_Jerde30@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Paulette",
                            HourlyRate = 197.063454607065510m,
                            IdentificationNumber = "1881",
                            IsActive = true,
                            LastName = "Jerde",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 7, 2, 14, 13, 51, 426, DateTimeKind.Unspecified).AddTicks(4965),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 16,
                            AppUserId = "ed31056b-7fb0-4e77-b7e8-4085cbc926d7",
                            DepartmentID = 1,
                            Email = "Lee.Mayer99@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Lee",
                            HourlyRate = 194.236644378042150m,
                            IdentificationNumber = "9604",
                            IsActive = true,
                            LastName = "Mayer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 7, 6, 2, 51, 58, 799, DateTimeKind.Unspecified).AddTicks(3996),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 17,
                            AppUserId = "0083f5f9-e6fd-475a-a2df-f43523008feb",
                            DepartmentID = 1,
                            Email = "Jodi70@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jodi",
                            HourlyRate = 196.430273641101210m,
                            IdentificationNumber = "8961",
                            IsActive = true,
                            LastName = "Volkman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 2, 2, 5, 13, 3, 660, DateTimeKind.Unspecified).AddTicks(845),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 18,
                            AppUserId = "65ddf361-0344-465d-ab9e-b818daaf0be7",
                            DepartmentID = 1,
                            Email = "Justin.Gerhold@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Justin",
                            HourlyRate = 190.1135315234370210m,
                            IdentificationNumber = "7752",
                            IsActive = true,
                            LastName = "Gerhold",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 3, 22, 21, 50, 13, 875, DateTimeKind.Unspecified).AddTicks(1876),
                            Status = 0,
                            Title = "Temizlik Görevlisi"
                        },
                        new
                        {
                            ID = 19,
                            AppUserId = "5b1c893c-4baa-4e91-99f3-e837cd63585b",
                            DepartmentID = 3,
                            Email = "Tricia.Wiza@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Tricia",
                            HourlyRate = 190.1131398277884070m,
                            IdentificationNumber = "6569",
                            IsActive = true,
                            LastName = "Wiza",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 1, 9, 20, 12, 14, 715, DateTimeKind.Unspecified).AddTicks(7339),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 20,
                            AppUserId = "6e02fba6-cf2e-4ac4-b2c2-077e659740d4",
                            DepartmentID = 3,
                            Email = "Janice85@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Janice",
                            HourlyRate = 195.161676814389260m,
                            IdentificationNumber = "3117",
                            IsActive = true,
                            LastName = "Gaylord",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 3, 16, 12, 40, 20, 420, DateTimeKind.Unspecified).AddTicks(191),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 21,
                            AppUserId = "4e66fd1d-0b73-4f78-a631-cfc3fd0f0bf6",
                            DepartmentID = 3,
                            Email = "Miriam.Bernier48@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Miriam",
                            HourlyRate = 193.751820281032390m,
                            IdentificationNumber = "5594",
                            IsActive = true,
                            LastName = "Bernier",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 4, 6, 11, 33, 30, 463, DateTimeKind.Unspecified).AddTicks(5908),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 22,
                            AppUserId = "3fbe28a2-383a-4bc1-91c3-39c49600fdf7",
                            DepartmentID = 3,
                            Email = "Mack_Hilpert@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Mack",
                            HourlyRate = 191.207412654164910m,
                            IdentificationNumber = "9782",
                            IsActive = true,
                            LastName = "Hilpert",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 7, 19, 17, 11, 29, 362, DateTimeKind.Unspecified).AddTicks(2063),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 23,
                            AppUserId = "8aefe060-1b14-446e-8780-16342e0d1fa6",
                            DepartmentID = 3,
                            Email = "Elbert28@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Elbert",
                            HourlyRate = 195.92982682209920m,
                            IdentificationNumber = "3540",
                            IsActive = true,
                            LastName = "Volkman",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 7, 27, 14, 21, 36, 926, DateTimeKind.Unspecified).AddTicks(46),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 24,
                            AppUserId = "33c98c9f-d8f0-42a6-b105-80f246aa2c11",
                            DepartmentID = 3,
                            Email = "Arlene_Hayes@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Arlene",
                            HourlyRate = 193.555256539748640m,
                            IdentificationNumber = "4311",
                            IsActive = true,
                            LastName = "Hayes",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 8, 22, 17, 45, 27, 754, DateTimeKind.Unspecified).AddTicks(5010),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 25,
                            AppUserId = "f0773878-23d7-4835-a421-6e2ed4ab8038",
                            DepartmentID = 3,
                            Email = "Darren9@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Darren",
                            HourlyRate = 190.5531718305094040m,
                            IdentificationNumber = "2984",
                            IsActive = true,
                            LastName = "Oberbrunner",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 1, 13, 12, 10, 52, 893, DateTimeKind.Unspecified).AddTicks(6156),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 26,
                            AppUserId = "51b8feca-22c2-49aa-a83b-c79b81393563",
                            DepartmentID = 3,
                            Email = "Johanna_Donnelly54@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Johanna",
                            HourlyRate = 196.978073053517410m,
                            IdentificationNumber = "2601",
                            IsActive = true,
                            LastName = "Donnelly",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 12, 8, 5, 50, 3, 336, DateTimeKind.Unspecified).AddTicks(9517),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 27,
                            AppUserId = "e02a26ff-8714-4309-9b94-cd438dab006d",
                            DepartmentID = 3,
                            Email = "Delbert_Lesch81@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Delbert",
                            HourlyRate = 195.530074823428910m,
                            IdentificationNumber = "1555",
                            IsActive = true,
                            LastName = "Lesch",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 1, 2, 13, 20, 32, 224, DateTimeKind.Unspecified).AddTicks(1587),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 28,
                            AppUserId = "b7fccc7c-fff8-4ccc-840c-4e6ecec3ddc4",
                            DepartmentID = 3,
                            Email = "Hector20@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Hector",
                            HourlyRate = 195.101441673516040m,
                            IdentificationNumber = "6235",
                            IsActive = true,
                            LastName = "Huels",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2022, 3, 19, 9, 15, 36, 232, DateTimeKind.Unspecified).AddTicks(2878),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 29,
                            AppUserId = "bfdb57ee-9ce1-4f57-a2af-cc89b606c643",
                            DepartmentID = 3,
                            Email = "Donna.Huels@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Donna",
                            HourlyRate = 191.973969299334090m,
                            IdentificationNumber = "9175",
                            IsActive = true,
                            LastName = "Huels",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 1, 23, 12, 52, 54, 966, DateTimeKind.Unspecified).AddTicks(4516),
                            Status = 0,
                            Title = "Aşçı"
                        },
                        new
                        {
                            ID = 30,
                            AppUserId = "a1f2c838-8c0f-42d6-a480-1da6bd1ff4a9",
                            DepartmentID = 3,
                            Email = "Kristi.Moen1@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Kristi",
                            HourlyRate = 196.036900335940020m,
                            IdentificationNumber = "5511",
                            IsActive = true,
                            LastName = "Moen",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 6, 22, 39, 42, 674, DateTimeKind.Unspecified).AddTicks(643),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 31,
                            AppUserId = "7adeb4ea-e823-4699-ad3b-7eb2a3f0b749",
                            DepartmentID = 3,
                            Email = "Winifred25@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Winifred",
                            HourlyRate = 198.572303959434990m,
                            IdentificationNumber = "2550",
                            IsActive = true,
                            LastName = "Corwin",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 1, 21, 13, 36, 4, 781, DateTimeKind.Unspecified).AddTicks(6702),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 32,
                            AppUserId = "24a7031f-3180-41fc-a471-555024ca8d66",
                            DepartmentID = 3,
                            Email = "Kayla.Reilly19@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Kayla",
                            HourlyRate = 193.229083508825430m,
                            IdentificationNumber = "9513",
                            IsActive = true,
                            LastName = "Reilly",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2022, 2, 27, 10, 56, 46, 22, DateTimeKind.Unspecified).AddTicks(2981),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 33,
                            AppUserId = "5342700a-8c50-47ad-9599-039c6540fc99",
                            DepartmentID = 3,
                            Email = "Louise10@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Louise",
                            HourlyRate = 197.905111535408120m,
                            IdentificationNumber = "1550",
                            IsActive = true,
                            LastName = "Dickens",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 6, 27, 15, 55, 55, 594, DateTimeKind.Unspecified).AddTicks(6028),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 34,
                            AppUserId = "a7263790-59f1-4f6d-b0ec-3bd74899d1d0",
                            DepartmentID = 3,
                            Email = "Leland_Kessler77@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Leland",
                            HourlyRate = 191.96354946678670m,
                            IdentificationNumber = "6975",
                            IsActive = true,
                            LastName = "Kessler",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 3, 4, 19, 17, 25, 865, DateTimeKind.Unspecified).AddTicks(9686),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 35,
                            AppUserId = "bf58fa77-59af-4b38-af7f-6cc60249b8a5",
                            DepartmentID = 3,
                            Email = "Otis_Sporer30@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Otis",
                            HourlyRate = 193.608101319339170m,
                            IdentificationNumber = "8444",
                            IsActive = true,
                            LastName = "Sporer",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 1, 21, 13, 31, 47, 423, DateTimeKind.Unspecified).AddTicks(4589),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 36,
                            AppUserId = "8d796e71-5df5-4fbf-8518-05885e3d5b75",
                            DepartmentID = 3,
                            Email = "Wayne41@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Wayne",
                            HourlyRate = 194.92655759441040m,
                            IdentificationNumber = "7878",
                            IsActive = true,
                            LastName = "Kassulke",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 10, 23, 15, 37, 5, 206, DateTimeKind.Unspecified).AddTicks(8406),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 37,
                            AppUserId = "04ec5159-4484-4f9b-9ef1-ac947433ecd3",
                            DepartmentID = 3,
                            Email = "Robyn.Quitzon@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Robyn",
                            HourlyRate = 199.21755138282550m,
                            IdentificationNumber = "4507",
                            IsActive = true,
                            LastName = "Quitzon",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2020, 8, 30, 8, 45, 57, 520, DateTimeKind.Unspecified).AddTicks(7391),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 38,
                            AppUserId = "4239338b-9d71-4d98-87ab-75cb6805d7db",
                            DepartmentID = 3,
                            Email = "Estelle28@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Estelle",
                            HourlyRate = 199.246293399131990m,
                            IdentificationNumber = "8582",
                            IsActive = true,
                            LastName = "Kris",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 11, 5, 15, 8, 59, 743, DateTimeKind.Unspecified).AddTicks(2515),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 39,
                            AppUserId = "8a644b3f-f1c5-4934-8cad-d6b6b0472b3f",
                            DepartmentID = 3,
                            Email = "Ellis_Schowalter@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ellis",
                            HourlyRate = 197.407718336865180m,
                            IdentificationNumber = "5057",
                            IsActive = true,
                            LastName = "Schowalter",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 9, 17, 22, 26, 4, 840, DateTimeKind.Unspecified).AddTicks(3417),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 40,
                            AppUserId = "0dbb3350-ac77-4695-94c2-c41095fcb649",
                            DepartmentID = 3,
                            Email = "Stacy16@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Stacy",
                            HourlyRate = 198.886408362950390m,
                            IdentificationNumber = "1835",
                            IsActive = true,
                            LastName = "Lebsack",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 9, 27, 4, 30, 2, 669, DateTimeKind.Unspecified).AddTicks(2240),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 41,
                            AppUserId = "ead7f891-0ef9-49ee-a5c2-cb7302311447",
                            DepartmentID = 3,
                            Email = "Kimberly.Braun68@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Kimberly",
                            HourlyRate = 199.969621226177380m,
                            IdentificationNumber = "2219",
                            IsActive = true,
                            LastName = "Braun",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2019, 6, 15, 2, 51, 11, 437, DateTimeKind.Unspecified).AddTicks(8173),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 42,
                            AppUserId = "498253b1-8809-4cc6-9889-2da6fedaf631",
                            DepartmentID = 3,
                            Email = "Everett59@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Everett",
                            HourlyRate = 190.06543837490744810m,
                            IdentificationNumber = "9609",
                            IsActive = true,
                            LastName = "Olson",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 2,
                            StartDateOfWork = new DateTime(2021, 11, 14, 12, 51, 31, 632, DateTimeKind.Unspecified).AddTicks(8589),
                            Status = 0,
                            Title = "Garson"
                        },
                        new
                        {
                            ID = 43,
                            AppUserId = "f080f977-63eb-4b54-8047-9de9bf5798df",
                            DepartmentID = 1,
                            Email = "Calvin_Little@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Calvin",
                            HourlyRate = 196.803197714874150m,
                            IdentificationNumber = "4978",
                            IsActive = true,
                            LastName = "Little",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2020, 9, 16, 12, 38, 4, 205, DateTimeKind.Unspecified).AddTicks(5596),
                            Status = 0,
                            Title = "Elektirikçi"
                        },
                        new
                        {
                            ID = 44,
                            AppUserId = "b51b9fee-6cc2-4cec-8fd4-fbf936cc4d5f",
                            DepartmentID = 2,
                            Email = "Elisa51@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Elisa",
                            HourlyRate = 195.813818446273830m,
                            IdentificationNumber = "4389",
                            IsActive = true,
                            LastName = "Hegmann",
                            MonthlySalary = 0m,
                            OvertimePay = 12m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 2, 24, 13, 18, 16, 333, DateTimeKind.Unspecified).AddTicks(2044),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu"
                        },
                        new
                        {
                            ID = 45,
                            AppUserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            DepartmentID = 5,
                            Email = "Rafael_Weissnat27@yahoo.com",
                            EmployeeStatus = 0,
                            FirstName = "Rafael",
                            HourlyRate = 190.05715055393853720m,
                            IdentificationNumber = "3240",
                            IsActive = true,
                            LastName = "Weissnat",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2021, 8, 30, 23, 14, 36, 46, DateTimeKind.Unspecified).AddTicks(2861),
                            Status = 0,
                            Title = "Müdür"
                        },
                        new
                        {
                            ID = 46,
                            AppUserId = "1c5463b5-5ce9-4b2a-974d-94026ee3e28d",
                            DepartmentID = 6,
                            Email = "Freda86@hotmail.com",
                            EmployeeStatus = 1,
                            FirstName = "Freda",
                            HourlyRate = 193.333762652861780m,
                            IdentificationNumber = "7812",
                            IsActive = true,
                            LastName = "Bauch",
                            MonthlySalary = 10000m,
                            OvertimePay = 0m,
                            PhoneNumber = "05454526235",
                            ShiftID = 1,
                            StartDateOfWork = new DateTime(2019, 9, 21, 22, 34, 34, 47, DateTimeKind.Unspecified).AddTicks(166),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("EmployeesShifts");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Price = 400m,
                            ServiceName = "Hamam",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SettingID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("SettingID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            SettingID = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Month")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.HasIndex("ContactID");

                    b.HasIndex("HomePageID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            ContactID = 1,
                            HomePageID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "f5a56f9a-9bf9-478f-8987-dc520d1d88da",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "39863d36-9f01-48a8-9429-f164573bbef0",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "6e648c1b-091a-4778-918d-23728dadf1ca",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSIYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "a8fce85c-c1a7-44b8-9320-b803c8a42fe0",
                            Name = "insan kaynaklari",
                            NormalizedName = "INSAN KAYNAKLARI"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "6f7943e0-761a-4f32-a7b5-d45d293adc5b",
                            Name = "yardimci hizmetler",
                            NormalizedName = "YARDIMCI HIZMETLER"
                        },
                        new
                        {
                            Id = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1",
                            ConcurrencyStamp = "f16dbcf2-730d-457d-b556-f6b278ed15a2",
                            Name = "bilgi islem",
                            NormalizedName = "BILGI ISLEM"
                        },
                        new
                        {
                            Id = "a98546c7-b529-4836-8d88-6af9667d8008",
                            ConcurrencyStamp = "7af1b97f-3731-4ac2-be2d-d024ec0f268a",
                            Name = "mutfak",
                            NormalizedName = "MUTFAK"
                        },
                        new
                        {
                            Id = "4353147a-1b09-492f-87aa-6b467d30e7e0",
                            ConcurrencyStamp = "cf1573ee-87b2-48b6-a1bc-98033b905d49",
                            Name = "muhasebe",
                            NormalizedName = "MUHASEBE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c0f0dda-f64e-4760-8c55-374f7b42089e",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "3c0f0dda-f64e-4760-8c55-374f7b42089e",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a8ce5158-6ebb-4ede-8154-296c471e76dd",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "a8ce5158-6ebb-4ede-8154-296c471e76dd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0f6cfb56-f35d-46e4-9b2f-f0e5264a696f",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "0f6cfb56-f35d-46e4-9b2f-f0e5264a696f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7e7deb9d-2f0e-4496-83f6-3f7f1c02d3c5",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "7e7deb9d-2f0e-4496-83f6-3f7f1c02d3c5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "68a18ffe-ec3a-40f6-ac08-2b39dc044d6a",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "68a18ffe-ec3a-40f6-ac08-2b39dc044d6a",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "2eff5e09-9423-413b-bc53-bc1005a69ab5",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "2eff5e09-9423-413b-bc53-bc1005a69ab5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b708da78-f5dd-4b9f-980a-8878435cfa7f",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "b708da78-f5dd-4b9f-980a-8878435cfa7f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "186d7d00-399f-461b-8e74-0b185d04d390",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "186d7d00-399f-461b-8e74-0b185d04d390",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "91568893-feb4-4c07-a523-6ce308888ddd",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "91568893-feb4-4c07-a523-6ce308888ddd",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bdc19aee-648f-4e35-bffd-0a151340f9ce",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "bdc19aee-648f-4e35-bffd-0a151340f9ce",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "746bf451-2f0f-40bf-b10a-4c6faf62c132",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "746bf451-2f0f-40bf-b10a-4c6faf62c132",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "758cac08-c79e-4683-bd68-bc7b13feca19",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "758cac08-c79e-4683-bd68-bc7b13feca19",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4b0ba339-7c65-4d0d-b421-1f84ff78db57",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "4b0ba339-7c65-4d0d-b421-1f84ff78db57",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "16edb950-186f-42f4-9cec-6a33f8d69a1d",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "16edb950-186f-42f4-9cec-6a33f8d69a1d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3465ba99-caf2-4849-af96-6a55851a5b77",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "3465ba99-caf2-4849-af96-6a55851a5b77",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ed31056b-7fb0-4e77-b7e8-4085cbc926d7",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "ed31056b-7fb0-4e77-b7e8-4085cbc926d7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0083f5f9-e6fd-475a-a2df-f43523008feb",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "0083f5f9-e6fd-475a-a2df-f43523008feb",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "65ddf361-0344-465d-ab9e-b818daaf0be7",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "65ddf361-0344-465d-ab9e-b818daaf0be7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5b1c893c-4baa-4e91-99f3-e837cd63585b",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5b1c893c-4baa-4e91-99f3-e837cd63585b",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "6e02fba6-cf2e-4ac4-b2c2-077e659740d4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "6e02fba6-cf2e-4ac4-b2c2-077e659740d4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4e66fd1d-0b73-4f78-a631-cfc3fd0f0bf6",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4e66fd1d-0b73-4f78-a631-cfc3fd0f0bf6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "3fbe28a2-383a-4bc1-91c3-39c49600fdf7",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "3fbe28a2-383a-4bc1-91c3-39c49600fdf7",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8aefe060-1b14-446e-8780-16342e0d1fa6",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8aefe060-1b14-446e-8780-16342e0d1fa6",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "33c98c9f-d8f0-42a6-b105-80f246aa2c11",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "33c98c9f-d8f0-42a6-b105-80f246aa2c11",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f0773878-23d7-4835-a421-6e2ed4ab8038",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "f0773878-23d7-4835-a421-6e2ed4ab8038",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "51b8feca-22c2-49aa-a83b-c79b81393563",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "51b8feca-22c2-49aa-a83b-c79b81393563",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "e02a26ff-8714-4309-9b94-cd438dab006d",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "e02a26ff-8714-4309-9b94-cd438dab006d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b7fccc7c-fff8-4ccc-840c-4e6ecec3ddc4",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "b7fccc7c-fff8-4ccc-840c-4e6ecec3ddc4",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bfdb57ee-9ce1-4f57-a2af-cc89b606c643",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bfdb57ee-9ce1-4f57-a2af-cc89b606c643",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a1f2c838-8c0f-42d6-a480-1da6bd1ff4a9",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "a1f2c838-8c0f-42d6-a480-1da6bd1ff4a9",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "7adeb4ea-e823-4699-ad3b-7eb2a3f0b749",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "7adeb4ea-e823-4699-ad3b-7eb2a3f0b749",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "24a7031f-3180-41fc-a471-555024ca8d66",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "24a7031f-3180-41fc-a471-555024ca8d66",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "5342700a-8c50-47ad-9599-039c6540fc99",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "5342700a-8c50-47ad-9599-039c6540fc99",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "a7263790-59f1-4f6d-b0ec-3bd74899d1d0",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "a7263790-59f1-4f6d-b0ec-3bd74899d1d0",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "bf58fa77-59af-4b38-af7f-6cc60249b8a5",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "bf58fa77-59af-4b38-af7f-6cc60249b8a5",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8d796e71-5df5-4fbf-8518-05885e3d5b75",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8d796e71-5df5-4fbf-8518-05885e3d5b75",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "04ec5159-4484-4f9b-9ef1-ac947433ecd3",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "04ec5159-4484-4f9b-9ef1-ac947433ecd3",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "4239338b-9d71-4d98-87ab-75cb6805d7db",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "4239338b-9d71-4d98-87ab-75cb6805d7db",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "8a644b3f-f1c5-4934-8cad-d6b6b0472b3f",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "8a644b3f-f1c5-4934-8cad-d6b6b0472b3f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "0dbb3350-ac77-4695-94c2-c41095fcb649",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "0dbb3350-ac77-4695-94c2-c41095fcb649",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "ead7f891-0ef9-49ee-a5c2-cb7302311447",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "ead7f891-0ef9-49ee-a5c2-cb7302311447",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "498253b1-8809-4cc6-9889-2da6fedaf631",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "498253b1-8809-4cc6-9889-2da6fedaf631",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "f080f977-63eb-4b54-8047-9de9bf5798df",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "f080f977-63eb-4b54-8047-9de9bf5798df",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "b51b9fee-6cc2-4cec-8fd4-fbf936cc4d5f",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "b51b9fee-6cc2-4cec-8fd4-fbf936cc4d5f",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "bcf7061b-0a59-426a-9b49-f520e1b4849b"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "3920b0ec-725e-4b34-ab67-27c7f816936d"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "0cd03d09-4264-4f6e-b0d8-e18fe9c03aa1"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "a98546c7-b529-4836-8d88-6af9667d8008"
                        },
                        new
                        {
                            UserId = "73ff4615-f322-439e-9251-83e45d2d8188",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        },
                        new
                        {
                            UserId = "1c5463b5-5ce9-4b2a-974d-94026ee3e28d",
                            RoleId = "75d8b242-e230-4fe8-ad20-b8e818d97957"
                        },
                        new
                        {
                            UserId = "1c5463b5-5ce9-4b2a-974d-94026ee3e28d",
                            RoleId = "c62f42df-2d75-4102-b281-a8637f2cb0a1"
                        },
                        new
                        {
                            UserId = "1c5463b5-5ce9-4b2a-974d-94026ee3e28d",
                            RoleId = "4353147a-1b09-492f-87aa-6b467d30e7e0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.HasOne("Entities.Concrete.Setting", "Setting")
                        .WithMany("HotelServices")
                        .HasForeignKey("SettingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Settings")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Contact", "Contact")
                        .WithMany("Settings")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("Settings")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");

                    b.Navigation("Contact");

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Navigation("HotelServices");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
