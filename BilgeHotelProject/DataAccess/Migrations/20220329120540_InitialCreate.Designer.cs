// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220329120540_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aboutus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Kemer’in tarihi ve kültürel merkezlerinin kesişim noktasında yer alan, şehrin ilk 5 yıldızlı konaklama tesisi unvanına sahip Bilge Hotel, 35 yıllık deneyimi ile alanının en iyisi olmaya devam ediyor.",
                            Paragraph2 = "Bilge Hotel, Osmanlı sarayları ve Fransız mimarisinden esinlenilerek özenle tasarlanmış yeni konsepti kapsamında; birbirinden farklı şekilde dekore edilmiş lüks oda ve süitleri, Türk ve dünya mutfağının seçkin lezzetlerini servis eden restoranları, A’dan Z’ye yenilenmiş SPA tesisiyle misafirlerine en konforlu konaklama deneyimini sunuyor.",
                            Paragraph3 = "Bilge Hotel iş toplantıları, kutlamalar ve farklı özel etkinlikler için 1000 kişilik kapasiteye ve eksiksiz teknik donanıma sahip salonlarıyla bir şehir otelinin ötesine geçerek kişiye özel lüks hizmetler sunuyor.",
                            Paragraph4 = "Kemer şehir merkezinde yer alan Bilge Otel, alışveriş merkezlerine, Atatürk Kongre ve Kültür Merkezi’ne ve toplu taşıma duraklarına yürüyüş mesafesindedir.",
                            Paragraph5 = "Bilge Hotel Güvenli Turizm Sertifikası, ISO 22000 Gıda Güvenliği Yönetim Sistemi Belgesi, Sıfır Atık Belgesi ve Turuncu Bayrak sahibidir.",
                            PictureUrl = "/img/aboutus-img.jpg",
                            Status = 0,
                            Title = "Bilge Hotel, Kalite ve Konforun Adresi"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "8640 Ivory Skyway, Floydberg, Holy See (Vatican City State)",
                            Email = "Van1@yahoo.com",
                            Facebook = "https://www.facebook.com/bilgehotel",
                            Fax = "05454526235",
                            Instagram = "https://www.instagram.com/bilgehotel",
                            Phone1 = "05454526235",
                            Status = 0,
                            Twitter = "https://www.twitter.com/bilgehotel"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Yardımcı Hizmetler",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Bilgi İşlem",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "Mutfak",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Resepsiyon",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "Yönetim",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "İnsan Kaynakları",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LeavingWorkDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentID = 4,
                            Email = "Laurence49@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Laurence",
                            HourlyRate = 195.455164283260310m,
                            IdentificationNumber = "9560",
                            IsActive = true,
                            LastName = "Weimann",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 12, 22, 2, 42, 53, 713, DateTimeKind.Unspecified).AddTicks(6568),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 2,
                            DepartmentID = 4,
                            Email = "Nicholas.Cummings4@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Nicholas",
                            HourlyRate = 198.930993577898940m,
                            IdentificationNumber = "7811",
                            IsActive = true,
                            LastName = "Cummings",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2022, 3, 5, 3, 16, 4, 891, DateTimeKind.Unspecified).AddTicks(9404),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 3,
                            DepartmentID = 4,
                            Email = "Marco82@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Marco",
                            HourlyRate = 192.576027904905390m,
                            IdentificationNumber = "5284",
                            IsActive = true,
                            LastName = "Prohaska",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 1, 7, 10, 41, 30, 714, DateTimeKind.Unspecified).AddTicks(271),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 4,
                            DepartmentID = 4,
                            Email = "Tomas53@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Tomas",
                            HourlyRate = 197.049719997239170m,
                            IdentificationNumber = "1610",
                            IsActive = true,
                            LastName = "Brown",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 10, 23, 1, 8, 42, 240, DateTimeKind.Unspecified).AddTicks(7756),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 5,
                            DepartmentID = 4,
                            Email = "Rachel.Parker89@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rachel",
                            HourlyRate = 198.334515866979260m,
                            IdentificationNumber = "9282",
                            IsActive = true,
                            LastName = "Parker",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 8, 30, 23, 45, 56, 701, DateTimeKind.Unspecified).AddTicks(5777),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 6,
                            DepartmentID = 4,
                            Email = "Angelina12@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Angelina",
                            HourlyRate = 192.992234417699390m,
                            IdentificationNumber = "2149",
                            IsActive = true,
                            LastName = "Klocko",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 12, 23, 14, 48, 53, 285, DateTimeKind.Unspecified).AddTicks(5764),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 7,
                            DepartmentID = 4,
                            Email = "Elmer_Feil33@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Elmer",
                            HourlyRate = 192.426578780834830m,
                            IdentificationNumber = "8142",
                            IsActive = true,
                            LastName = "Feil",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 11, 25, 15, 48, 28, 709, DateTimeKind.Unspecified).AddTicks(9023),
                            Status = 0,
                            Title = "Resepsiyonist",
                            UserID = 0
                        },
                        new
                        {
                            ID = 8,
                            DepartmentID = 1,
                            Email = "Pearl_Dibbert23@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Pearl",
                            HourlyRate = 199.390017930134210m,
                            IdentificationNumber = "8238",
                            IsActive = true,
                            LastName = "Dibbert",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 5, 10, 20, 32, 19, 79, DateTimeKind.Unspecified).AddTicks(4037),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 9,
                            DepartmentID = 1,
                            Email = "Jesse45@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jesse",
                            HourlyRate = 194.645020367878030m,
                            IdentificationNumber = "8174",
                            IsActive = true,
                            LastName = "Daniel",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 5, 6, 7, 7, 8, 990, DateTimeKind.Unspecified).AddTicks(2884),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 10,
                            DepartmentID = 1,
                            Email = "Dolores_Halvorson@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Dolores",
                            HourlyRate = 195.715326962859990m,
                            IdentificationNumber = "9889",
                            IsActive = true,
                            LastName = "Halvorson",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 11, 11, 3, 55, 35, 364, DateTimeKind.Unspecified).AddTicks(3060),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 11,
                            DepartmentID = 1,
                            Email = "Erma_Gleason28@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Erma",
                            HourlyRate = 197.954779908971290m,
                            IdentificationNumber = "8512",
                            IsActive = true,
                            LastName = "Gleason",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 12, 29, 6, 6, 45, 505, DateTimeKind.Unspecified).AddTicks(8064),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 12,
                            DepartmentID = 1,
                            Email = "Edward.Raynor@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Edward",
                            HourlyRate = 195.968546735108150m,
                            IdentificationNumber = "8633",
                            IsActive = true,
                            LastName = "Raynor",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 3, 28, 7, 7, 25, 144, DateTimeKind.Unspecified).AddTicks(1134),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 13,
                            DepartmentID = 1,
                            Email = "Jerry.Pfannerstill29@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jerry",
                            HourlyRate = 193.252621727647550m,
                            IdentificationNumber = "7916",
                            IsActive = true,
                            LastName = "Pfannerstill",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 12, 20, 12, 12, 29, 782, DateTimeKind.Unspecified).AddTicks(4860),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 14,
                            DepartmentID = 1,
                            Email = "Betty.Wiza@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Betty",
                            HourlyRate = 195.617589725003390m,
                            IdentificationNumber = "6125",
                            IsActive = true,
                            LastName = "Wiza",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 6, 17, 13, 29, 14, 135, DateTimeKind.Unspecified).AddTicks(6323),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 15,
                            DepartmentID = 1,
                            Email = "Herman_Rempel@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Herman",
                            HourlyRate = 198.512981770799020m,
                            IdentificationNumber = "5071",
                            IsActive = true,
                            LastName = "Rempel",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 5, 28, 20, 10, 31, 817, DateTimeKind.Unspecified).AddTicks(3192),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 16,
                            DepartmentID = 1,
                            Email = "Loretta.Mosciski@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Loretta",
                            HourlyRate = 194.390640982608610m,
                            IdentificationNumber = "9745",
                            IsActive = true,
                            LastName = "Mosciski",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 8, 5, 14, 25, 18, 720, DateTimeKind.Unspecified).AddTicks(1476),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 17,
                            DepartmentID = 1,
                            Email = "James74@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "James",
                            HourlyRate = 198.686581360495920m,
                            IdentificationNumber = "3525",
                            IsActive = true,
                            LastName = "Balistreri",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2022, 3, 10, 10, 44, 13, 820, DateTimeKind.Unspecified).AddTicks(7308),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 18,
                            DepartmentID = 1,
                            Email = "Rosemarie.Simonis@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Rosemarie",
                            HourlyRate = 194.221749661593580m,
                            IdentificationNumber = "9446",
                            IsActive = true,
                            LastName = "Simonis",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 3, 8, 12, 40, 39, 427, DateTimeKind.Unspecified).AddTicks(4964),
                            Status = 0,
                            Title = "Temizlik Görevlisi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 19,
                            DepartmentID = 3,
                            Email = "Jon_Dare@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jon",
                            HourlyRate = 199.806647039859860m,
                            IdentificationNumber = "3483",
                            IsActive = true,
                            LastName = "Dare",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 5, 4, 11, 6, 59, 834, DateTimeKind.Unspecified).AddTicks(7186),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 20,
                            DepartmentID = 3,
                            Email = "Theodore37@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Theodore",
                            HourlyRate = 197.912923734594570m,
                            IdentificationNumber = "9995",
                            IsActive = true,
                            LastName = "Anderson",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 7, 27, 10, 32, 43, 874, DateTimeKind.Unspecified).AddTicks(5203),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 21,
                            DepartmentID = 3,
                            Email = "Sharon_Kuphal80@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Sharon",
                            HourlyRate = 195.503846158042480m,
                            IdentificationNumber = "5123",
                            IsActive = true,
                            LastName = "Kuphal",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 3, 2, 18, 26, 22, 103, DateTimeKind.Unspecified).AddTicks(1982),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 22,
                            DepartmentID = 3,
                            Email = "Heather_Sipes@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Heather",
                            HourlyRate = 195.477012272680650m,
                            IdentificationNumber = "9205",
                            IsActive = true,
                            LastName = "Sipes",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 5, 1, 23, 59, 52, 178, DateTimeKind.Unspecified).AddTicks(437),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 23,
                            DepartmentID = 3,
                            Email = "Duane.Kautzer@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Duane",
                            HourlyRate = 195.242887709868550m,
                            IdentificationNumber = "6140",
                            IsActive = true,
                            LastName = "Kautzer",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 12, 14, 4, 35, 51, 791, DateTimeKind.Unspecified).AddTicks(6562),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 24,
                            DepartmentID = 3,
                            Email = "Jacqueline.Walter96@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jacqueline",
                            HourlyRate = 194.618773141232680m,
                            IdentificationNumber = "8333",
                            IsActive = true,
                            LastName = "Walter",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2022, 3, 1, 8, 9, 46, 972, DateTimeKind.Unspecified).AddTicks(1266),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 25,
                            DepartmentID = 3,
                            Email = "Darla.Schmitt@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Darla",
                            HourlyRate = 190.2799355891905420m,
                            IdentificationNumber = "4795",
                            IsActive = true,
                            LastName = "Schmitt",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 12, 20, 2, 15, 50, 375, DateTimeKind.Unspecified).AddTicks(6774),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 26,
                            DepartmentID = 3,
                            Email = "Donald76@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Donald",
                            HourlyRate = 196.533506711262050m,
                            IdentificationNumber = "8582",
                            IsActive = true,
                            LastName = "McKenzie",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 4, 3, 15, 13, 15, 962, DateTimeKind.Unspecified).AddTicks(554),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 27,
                            DepartmentID = 3,
                            Email = "Charles.Bins@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Charles",
                            HourlyRate = 199.846397028233110m,
                            IdentificationNumber = "3700",
                            IsActive = true,
                            LastName = "Bins",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 10, 19, 23, 10, 14, 999, DateTimeKind.Unspecified).AddTicks(8215),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 28,
                            DepartmentID = 3,
                            Email = "Jaime27@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jaime",
                            HourlyRate = 198.450707680755620m,
                            IdentificationNumber = "2572",
                            IsActive = true,
                            LastName = "Kiehn",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 6, 9, 19, 43, 38, 747, DateTimeKind.Unspecified).AddTicks(6004),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 29,
                            DepartmentID = 3,
                            Email = "Jan_Nienow11@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Jan",
                            HourlyRate = 196.434622638129920m,
                            IdentificationNumber = "3109",
                            IsActive = true,
                            LastName = "Nienow",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 8, 9, 12, 39, 29, 904, DateTimeKind.Unspecified).AddTicks(3072),
                            Status = 0,
                            Title = "Aşçı",
                            UserID = 0
                        },
                        new
                        {
                            ID = 30,
                            DepartmentID = 3,
                            Email = "Jason_Quitzon@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Jason",
                            HourlyRate = 199.151514549344550m,
                            IdentificationNumber = "6155",
                            IsActive = true,
                            LastName = "Quitzon",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 9, 5, 17, 39, 24, 449, DateTimeKind.Unspecified).AddTicks(5873),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 31,
                            DepartmentID = 3,
                            Email = "Beatrice_Gutmann33@hotmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Beatrice",
                            HourlyRate = 199.169930996918090m,
                            IdentificationNumber = "4891",
                            IsActive = true,
                            LastName = "Gutmann",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 8, 31, 20, 28, 47, 151, DateTimeKind.Unspecified).AddTicks(4852),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 32,
                            DepartmentID = 3,
                            Email = "Anita4@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Anita",
                            HourlyRate = 191.869438705905080m,
                            IdentificationNumber = "2349",
                            IsActive = true,
                            LastName = "Brekke",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 11, 14, 15, 29, 51, 690, DateTimeKind.Unspecified).AddTicks(4840),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 33,
                            DepartmentID = 3,
                            Email = "Barbara.Will@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Barbara",
                            HourlyRate = 195.826443408535070m,
                            IdentificationNumber = "8499",
                            IsActive = true,
                            LastName = "Will",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 4, 30, 10, 0, 36, 20, DateTimeKind.Unspecified).AddTicks(4958),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 34,
                            DepartmentID = 3,
                            Email = "Steven67@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Steven",
                            HourlyRate = 191.099681468261260m,
                            IdentificationNumber = "4418",
                            IsActive = true,
                            LastName = "Hyatt",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 6, 10, 9, 7, 30, 472, DateTimeKind.Unspecified).AddTicks(8994),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 35,
                            DepartmentID = 3,
                            Email = "Derek.Hirthe32@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Derek",
                            HourlyRate = 198.985939956729270m,
                            IdentificationNumber = "4169",
                            IsActive = true,
                            LastName = "Hirthe",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 5, 10, 20, 7, 4, 547, DateTimeKind.Unspecified).AddTicks(7764),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 36,
                            DepartmentID = 3,
                            Email = "Amos.Bradtke27@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Amos",
                            HourlyRate = 192.831433849796390m,
                            IdentificationNumber = "6278",
                            IsActive = true,
                            LastName = "Bradtke",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 6, 14, 23, 46, 17, 280, DateTimeKind.Unspecified).AddTicks(4748),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 37,
                            DepartmentID = 3,
                            Email = "Candace9@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Candace",
                            HourlyRate = 193.566089367291930m,
                            IdentificationNumber = "5160",
                            IsActive = true,
                            LastName = "Brekke",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 6, 23, 2, 22, 52, 705, DateTimeKind.Unspecified).AddTicks(8864),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 38,
                            DepartmentID = 3,
                            Email = "Preston_Ferry25@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Preston",
                            HourlyRate = 196.895359632044730m,
                            IdentificationNumber = "4324",
                            IsActive = true,
                            LastName = "Ferry",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 8, 10, 6, 7, 29, 880, DateTimeKind.Unspecified).AddTicks(4374),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 39,
                            DepartmentID = 3,
                            Email = "Ross_Konopelski@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Ross",
                            HourlyRate = 193.801610308606930m,
                            IdentificationNumber = "4586",
                            IsActive = true,
                            LastName = "Konopelski",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 2, 10, 11, 55, 6, 472, DateTimeKind.Unspecified).AddTicks(6099),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 40,
                            DepartmentID = 3,
                            Email = "Daniel31@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Daniel",
                            HourlyRate = 193.376599635638580m,
                            IdentificationNumber = "6772",
                            IsActive = true,
                            LastName = "Kessler",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 4, 9, 17, 37, 8, 951, DateTimeKind.Unspecified).AddTicks(7839),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 41,
                            DepartmentID = 3,
                            Email = "Dawn.Swift@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Dawn",
                            HourlyRate = 190.7526731448027640m,
                            IdentificationNumber = "6896",
                            IsActive = true,
                            LastName = "Swift",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2019, 4, 4, 13, 14, 6, 104, DateTimeKind.Unspecified).AddTicks(506),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 42,
                            DepartmentID = 3,
                            Email = "Lynn_Miller30@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Lynn",
                            HourlyRate = 194.033503916130170m,
                            IdentificationNumber = "1537",
                            IsActive = true,
                            LastName = "Miller",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 8, 9, 22, 42, 0, 165, DateTimeKind.Unspecified).AddTicks(8657),
                            Status = 0,
                            Title = "Garson",
                            UserID = 0
                        },
                        new
                        {
                            ID = 43,
                            DepartmentID = 1,
                            Email = "Randall74@gmail.com",
                            EmployeeStatus = 3,
                            FirstName = "Randall",
                            HourlyRate = 199.371023997371560m,
                            IdentificationNumber = "5755",
                            IsActive = true,
                            LastName = "Nader",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2022, 2, 6, 3, 10, 55, 17, DateTimeKind.Unspecified).AddTicks(7988),
                            Status = 0,
                            Title = "Elektirikçi",
                            UserID = 0
                        },
                        new
                        {
                            ID = 44,
                            DepartmentID = 2,
                            Email = "Raul2@yahoo.com",
                            EmployeeStatus = 3,
                            FirstName = "Raul",
                            HourlyRate = 196.215271873499860m,
                            IdentificationNumber = "9608",
                            IsActive = true,
                            LastName = "Schulist",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 1, 20, 22, 44, 24, 483, DateTimeKind.Unspecified).AddTicks(4678),
                            Status = 0,
                            Title = "Bilgi İşlem Sorumlusu",
                            UserID = 0
                        },
                        new
                        {
                            ID = 45,
                            DepartmentID = 5,
                            Email = "Lindsey_Will24@yahoo.com",
                            EmployeeStatus = 0,
                            FirstName = "Lindsey",
                            HourlyRate = 197.231484035603460m,
                            IdentificationNumber = "6473",
                            IsActive = true,
                            LastName = "Will",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2021, 3, 15, 18, 34, 4, 421, DateTimeKind.Unspecified).AddTicks(4191),
                            Status = 0,
                            Title = "Müdür",
                            UserID = 0
                        },
                        new
                        {
                            ID = 46,
                            DepartmentID = 6,
                            Email = "Theodore98@gmail.com",
                            EmployeeStatus = 1,
                            FirstName = "Theodore",
                            HourlyRate = 196.187533510936210m,
                            IdentificationNumber = "1939",
                            IsActive = true,
                            LastName = "Lynch",
                            PhoneNumber = "05454526235",
                            StartDateOfWork = new DateTime(2020, 5, 27, 4, 58, 3, 72, DateTimeKind.Unspecified).AddTicks(2478),
                            Status = 0,
                            Title = "İnsan Kaynakları Müdürü",
                            UserID = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("EmployeeID", "ShiftID");

                    b.HasIndex("ShiftID");

                    b.ToTable("EmployeesShifts");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 2,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 3,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 4,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 5,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 6,
                            ShiftID = 3,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 7,
                            ShiftID = 3,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 8,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 9,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 10,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 11,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 12,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 13,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 14,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 15,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 16,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 17,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 18,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 19,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 20,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 21,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 22,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 23,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 24,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 25,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 26,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 27,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 28,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 29,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 30,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 31,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 32,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 33,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 34,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 35,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 36,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 37,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 38,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 39,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 40,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 41,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 42,
                            ShiftID = 2,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 43,
                            ShiftID = 1,
                            Status = 0
                        },
                        new
                        {
                            EmployeeID = 44,
                            ShiftID = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 600m,
                            ServiceName = "Sauna",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.Property<int>("RoomFacilityID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RoomFacilityID", "RoomTypeID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("FacilitiesOfRooms");

                    b.HasData(
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 1,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 2,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 3,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 4,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 5,
                            RoomTypeID = 7,
                            Status = 0
                        },
                        new
                        {
                            RoomFacilityID = 6,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCardBackSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdCardFrontSideImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<bool>("TurkeyCitizen")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("RegistrationID", "GuestID");

                    b.HasIndex("GuestID");

                    b.ToTable("GuestRegistration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paragraph1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paragraph5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("HomePages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Paragraph1 = "Bilge Hotel Thermal Spa & Convention Center; Kemer şehir merkezinde, güler yüzlü ve profesyonel ekibi ile beklentilerin üzerinde hizmet vermektedir.",
                            Paragraph2 = "Bilge Hotel 35 yıllık deneyimi, misafir memnuniyeti odaklı hizmet anlayışı ile sizleri kaliteye ve konfora davet ediyor.",
                            PictureUrl = "/img/homepage-img.jpg",
                            Status = 0,
                            Subtitle = "Bilge Hotel'e Hoşgeldiniz...",
                            Title = "Kalite ve Konfor"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("HomePageID");

                    b.ToTable("HomePageSlides");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HomePageID = 1,
                            PictureName = "Slide1",
                            PictureUrl = "https://www.almira.com.tr/images/genel1.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            HomePageID = 1,
                            PictureName = "Slide2",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/04.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            HomePageID = 1,
                            PictureName = "Slide3",
                            PictureUrl = "https://www.almira.com.tr/images/gallery/almira/07.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SettingID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("SettingID");

                    b.ToTable("HotelServices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-servisi.jpg",
                            ServiceName = "Oda Servisi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-wi-fi.jpg",
                            ServiceName = "Ücretsiz Wifi",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            IconPicture = "https://roof264.com/media/image/mobil/camasir-yikama.jpg",
                            ServiceName = "Çamaşır Yıkama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            IconPicture = "https://roof264.com/media/image/mobil/oda-ici-kasa.jpg",
                            ServiceName = "Kasa",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            IconPicture = "https://roof264.com/media/image/mobil/toplanti-olanaklari-max-10.jpg",
                            ServiceName = "Toplantı Olanakları",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            IconPicture = "https://roof264.com/media/image/mobil/bagaj-depolama.jpg",
                            ServiceName = "Bagaj Depolama",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            IconPicture = "https://roof264.com/media/image/mobil/hizli-c-in-c-out.jpg",
                            ServiceName = "Hızlı C in / C out",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            IconPicture = "https://roof264.com/media/image/mobil/kuru-temizleme.jpg",
                            ServiceName = "Kuru Temizleme",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            IconPicture = "https://roof264.com/media/image/mobil/bebek-karyolasi.jpg",
                            ServiceName = "Bebek Karyolası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            IconPicture = "https://roof264.com/media/image/mobil/aile-odasi.jpg",
                            ServiceName = "Aile Odası",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            IconPicture = "https://roof264.com/media/image/mobil/sicak-kahvalti.jpg",
                            ServiceName = "Sıcak Kahvaltı",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            IconPicture = "https://roof264.com/media/image/mobil/merkezi-konum.jpg",
                            ServiceName = "Merkezi Konum",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            IconPicture = "https://roof264.com/media/image/mobil/ucretsiz-acik-kapali-otopark.jpg",
                            ServiceName = "Ücretsiz Açık / Kapalı Otopark",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            IconPicture = "https://roof264.com/media/image/mobil/utu-hizmeti.jpg",
                            ServiceName = "Ütü Hizmeti",
                            SettingID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            IconPicture = "https://roof264.com/media/image/mobil/cay-kahve-hizmeti.jpg",
                            ServiceName = "Çay - Kahve Hizmeti",
                            SettingID = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            PictureName = "Görsel1",
                            PictureUrl = "/img/gallery/room-single.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            AboutusID = 1,
                            PictureName = "Görsel2",
                            PictureUrl = "/img/gallery/room-double.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            AboutusID = 1,
                            PictureName = "Görsel3",
                            PictureUrl = "/img/gallery/room-double-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            AboutusID = 1,
                            PictureName = "Görsel4",
                            PictureUrl = "/img/gallery/room-triple.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            AboutusID = 1,
                            PictureName = "Görsel5",
                            PictureUrl = "/img/gallery/room-triple-superrior.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            AboutusID = 1,
                            PictureName = "Görsel6",
                            PictureUrl = "/img/gallery/room-family.jpg",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            AboutusID = 1,
                            PictureName = "Görsel7",
                            PictureUrl = "/img/gallery/room-presidential-suite.jpg",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("ReceptionReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("CheckOutTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 14, 0, 0, 0));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FloorNumber = 1,
                            RoomNumber = "100",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FloorNumber = 1,
                            RoomNumber = "101",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FloorNumber = 1,
                            RoomNumber = "102",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FloorNumber = 1,
                            RoomNumber = "103",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FloorNumber = 1,
                            RoomNumber = "104",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FloorNumber = 1,
                            RoomNumber = "105",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            FloorNumber = 1,
                            RoomNumber = "106",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 8,
                            FloorNumber = 1,
                            RoomNumber = "107",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 9,
                            FloorNumber = 1,
                            RoomNumber = "108",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 10,
                            FloorNumber = 1,
                            RoomNumber = "109",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 11,
                            FloorNumber = 1,
                            RoomNumber = "110",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 12,
                            FloorNumber = 1,
                            RoomNumber = "111",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 13,
                            FloorNumber = 1,
                            RoomNumber = "112",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 14,
                            FloorNumber = 1,
                            RoomNumber = "113",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 15,
                            FloorNumber = 1,
                            RoomNumber = "114",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 16,
                            FloorNumber = 1,
                            RoomNumber = "115",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 17,
                            FloorNumber = 1,
                            RoomNumber = "116",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 18,
                            FloorNumber = 1,
                            RoomNumber = "117",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 19,
                            FloorNumber = 1,
                            RoomNumber = "118",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 20,
                            FloorNumber = 1,
                            RoomNumber = "119",
                            RoomStatus = 5,
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 21,
                            FloorNumber = 2,
                            RoomNumber = "120",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 22,
                            FloorNumber = 2,
                            RoomNumber = "121",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 23,
                            FloorNumber = 2,
                            RoomNumber = "122",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 24,
                            FloorNumber = 2,
                            RoomNumber = "123",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 25,
                            FloorNumber = 2,
                            RoomNumber = "124",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 26,
                            FloorNumber = 2,
                            RoomNumber = "125",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 27,
                            FloorNumber = 2,
                            RoomNumber = "126",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 28,
                            FloorNumber = 2,
                            RoomNumber = "127",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 29,
                            FloorNumber = 2,
                            RoomNumber = "128",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 30,
                            FloorNumber = 2,
                            RoomNumber = "129",
                            RoomStatus = 5,
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 31,
                            FloorNumber = 2,
                            RoomNumber = "130",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 32,
                            FloorNumber = 2,
                            RoomNumber = "131",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 33,
                            FloorNumber = 2,
                            RoomNumber = "132",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 34,
                            FloorNumber = 2,
                            RoomNumber = "133",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 35,
                            FloorNumber = 2,
                            RoomNumber = "134",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 36,
                            FloorNumber = 2,
                            RoomNumber = "135",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 37,
                            FloorNumber = 2,
                            RoomNumber = "136",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 38,
                            FloorNumber = 2,
                            RoomNumber = "137",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 39,
                            FloorNumber = 2,
                            RoomNumber = "138",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 40,
                            FloorNumber = 2,
                            RoomNumber = "139",
                            RoomStatus = 5,
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 41,
                            FloorNumber = 3,
                            RoomNumber = "140",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 42,
                            FloorNumber = 3,
                            RoomNumber = "141",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 43,
                            FloorNumber = 3,
                            RoomNumber = "142",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 44,
                            FloorNumber = 3,
                            RoomNumber = "143",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 45,
                            FloorNumber = 3,
                            RoomNumber = "144",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 46,
                            FloorNumber = 3,
                            RoomNumber = "145",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 47,
                            FloorNumber = 3,
                            RoomNumber = "146",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 48,
                            FloorNumber = 3,
                            RoomNumber = "147",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 49,
                            FloorNumber = 3,
                            RoomNumber = "148",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 50,
                            FloorNumber = 3,
                            RoomNumber = "149",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 51,
                            FloorNumber = 3,
                            RoomNumber = "150",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 52,
                            FloorNumber = 3,
                            RoomNumber = "151",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 53,
                            FloorNumber = 3,
                            RoomNumber = "152",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 54,
                            FloorNumber = 3,
                            RoomNumber = "153",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 55,
                            FloorNumber = 3,
                            RoomNumber = "154",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 56,
                            FloorNumber = 3,
                            RoomNumber = "155",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 57,
                            FloorNumber = 3,
                            RoomNumber = "156",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 58,
                            FloorNumber = 3,
                            RoomNumber = "157",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 59,
                            FloorNumber = 3,
                            RoomNumber = "158",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 60,
                            FloorNumber = 3,
                            RoomNumber = "159",
                            RoomStatus = 5,
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 61,
                            FloorNumber = 4,
                            RoomNumber = "160",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 62,
                            FloorNumber = 4,
                            RoomNumber = "161",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 63,
                            FloorNumber = 4,
                            RoomNumber = "162",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 64,
                            FloorNumber = 4,
                            RoomNumber = "163",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 65,
                            FloorNumber = 4,
                            RoomNumber = "164",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 66,
                            FloorNumber = 4,
                            RoomNumber = "165",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 67,
                            FloorNumber = 4,
                            RoomNumber = "166",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 68,
                            FloorNumber = 4,
                            RoomNumber = "167",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 69,
                            FloorNumber = 4,
                            RoomNumber = "168",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 70,
                            FloorNumber = 4,
                            RoomNumber = "169",
                            RoomStatus = 5,
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 71,
                            FloorNumber = 4,
                            RoomNumber = "170",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 72,
                            FloorNumber = 4,
                            RoomNumber = "171",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 73,
                            FloorNumber = 4,
                            RoomNumber = "172",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 74,
                            FloorNumber = 4,
                            RoomNumber = "173",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 75,
                            FloorNumber = 4,
                            RoomNumber = "174",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 76,
                            FloorNumber = 4,
                            RoomNumber = "175",
                            RoomStatus = 5,
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 77,
                            FloorNumber = 4,
                            RoomNumber = "176",
                            RoomStatus = 5,
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomFacilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacilityName = "Klima",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            FacilityName = "Tv",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            FacilityName = "Saç Kurutma Makinesi",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            FacilityName = "Kablosuz Internet",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            FacilityName = "Minibar",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            FacilityName = "Balkon",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomPictures");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PictureUrl = "/img/roomtypes/room-single.jpg",
                            RoomTypeID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            PictureUrl = "/img/roomtypes/room-double.jpg",
                            RoomTypeID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            PictureUrl = "/img/roomtypes/room-double-superrior.jpg",
                            RoomTypeID = 3,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            PictureUrl = "/img/roomtypes/room-triple.jpg",
                            RoomTypeID = 4,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            PictureUrl = "/img/roomtypes/room-triple-superrior.jpg",
                            RoomTypeID = 5,
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            PictureUrl = "/img/roomtypes/room-family.jpg",
                            RoomTypeID = 6,
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            PictureUrl = "/img/roomtypes/room-presidential-suite.jpg",
                            RoomTypeID = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "15 - 20 m² Single Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 1,
                            Price = 600m,
                            RoomTypeName = "Single Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda tek kişilik iki adet yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Description = "20 - 25 m² Double Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda iki kişilik bir adet yatak bulunmaktadır.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 1050m,
                            RoomTypeName = "Double Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda üç adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            Description = "25 - 30 m² Triple Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet tek kişilik, bir adet iki kişilik yatak bulunmaktadır.",
                            NumberOfBed = 2,
                            NumberOfPeople = 3,
                            Price = 1500m,
                            RoomTypeName = "Triple Superior Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 6,
                            Description = "30 - 35 m² Family Room’da ihtiyaç duyabileceğiniz her şey sizin için düşünülmüştür. Park, şehir ve dağ manzaralı odalar iş ve tatil seyahatleriniz için ideal bir seçenek. Kullanışlı, modern bir tasarıma sahip odalarda bir adet çift kişilik, iki adet tek kişilik yatak bulunmaktadır.",
                            NumberOfBed = 3,
                            NumberOfPeople = 4,
                            Price = 1900m,
                            RoomTypeName = "Family Room",
                            Status = 0
                        },
                        new
                        {
                            ID = 7,
                            Description = "Yatak odası, yemek yeme alanına sahip oturma salonu ve iki ayrı banyosuyla 85 m² olan geniş kullanım alanı, şehir ve dağ manzarası ile konforu sunuyor.Rahatlamak ve keyif almak için özel olarak tasarlanan jakuzili banyoda ruhunuzu ve bedeninizi dinlendirebilir, gününüzü keyifle noktalayabilirsiniz.",
                            NumberOfBed = 1,
                            NumberOfPeople = 2,
                            Price = 2500m,
                            RoomTypeName = "Presidential Suite",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenPaid")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BeenPaid = true,
                            EmployeeID = 1,
                            Month = "Şubat",
                            MonthlySalary = 5000m,
                            PaymentDate = new DateTime(2022, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            BeenPaid = true,
                            EmployeeID = 2,
                            Month = "Şubat",
                            MonthlySalary = 5500m,
                            PaymentDate = new DateTime(2022, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            BeenPaid = false,
                            EmployeeID = 1,
                            Month = "Mart",
                            MonthlySalary = 5000m,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            BeenPaid = false,
                            EmployeeID = 2,
                            Month = "Mart",
                            MonthlySalary = 5500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("ServicePacks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Bu pakette sabah kahvaltısı, öğle yemeği ve akşam yemekleri konaklama ücretine dahildir.",
                            PackName = "Tam Pansiyon",
                            PackPrice = 200m,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "Bu pakette konaklama süresince 3 öğün yemekler, 5 çayı ve atıştırmalıklarla gün boyunca içecekler (alkolsüz içeceklerle - yerli alkollü içecekler) konaklama ücretine dahildir. Otellerdeki aktiviteler bu konseptte dahil değildir.",
                            PackName = "Her Şey Dahil",
                            PackPrice = 500m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutusID")
                        .HasColumnType("int");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomePageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmtpPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SmtpPort")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AboutusID");

                    b.HasIndex("ContactID");

                    b.HasIndex("HomePageID");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AboutusID = 1,
                            ContactID = 1,
                            HomePageID = 1,
                            SmtpEmail = "the.mstfa@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "Mustafa.2525774",
                            SmtpPort = 587,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            ShiftName = "Gündüz",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ShiftName = "Akşam",
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            ShiftName = "Gece",
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StatusEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StatusStartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("StatusesOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.Property<int>("ExtraServiceID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ExtraServiceID", "RegistrationID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationType")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("ServicePackID");

                    b.ToTable("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveOverTime")
                        .HasColumnType("bit");

                    b.Property<int?>("Holiday")
                        .HasColumnType("int");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan?>("OverTimeHour")
                        .HasColumnType("time");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan>("TimesWorked")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalWorkTime")
                        .HasColumnType("time");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ShiftID");

                    b.ToTable("WorkSchedules");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2022, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = 1,
                            HaveOverTime = false,
                            Holiday = 2,
                            IsHoliday = true,
                            ShiftID = 1,
                            Status = 0,
                            TimesWorked = new TimeSpan(0, 8, 0, 0, 0),
                            TotalWorkTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 2,
                            Date = new DateTime(2022, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = 2,
                            HaveOverTime = false,
                            IsHoliday = false,
                            ShiftID = 1,
                            Status = 0,
                            TimesWorked = new TimeSpan(0, 8, 0, 0, 0),
                            TotalWorkTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c62f42df-2d75-4102-b281-a8637f2cb0a1",
                            ConcurrencyStamp = "ac36e9b4-1548-4ff9-9fc3-a0e1a335a972",
                            Name = "user",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bcf7061b-0a59-426a-9b49-f520e1b4849b",
                            ConcurrencyStamp = "e51e1c95-b8ac-4fb0-b0aa-cd9a557d7f03",
                            Name = "admin",
                            NormalizedName = "ADMİN"
                        },
                        new
                        {
                            Id = "3920b0ec-725e-4b34-ab67-27c7f816936d",
                            ConcurrencyStamp = "337b5e73-2405-43f4-814f-792051722995",
                            Name = "resepsiyon",
                            NormalizedName = "RESEPSİYON"
                        },
                        new
                        {
                            Id = "75d8b242-e230-4fe8-ad20-b8e818d97957",
                            ConcurrencyStamp = "eeeefe15-288e-4190-b9da-51e76563edd2",
                            Name = "insankaynaklari",
                            NormalizedName = "İNSANKAYNAKLARİ"
                        },
                        new
                        {
                            Id = "3a2aebe3-6100-4ece-b2be-8bfec2e2c329",
                            ConcurrencyStamp = "ce5248f9-e200-4db3-9d41-2a551a0c7ab1",
                            Name = "yardimcihizmetler",
                            NormalizedName = "YARDİMCİHİZMETLER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entities.Concrete.EmployeeShift", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("EmployeesShifts")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("EmployeesShifts")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Entities.Concrete.FacilityOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.RoomFacility", "RoomFacility")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomFacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("FacilityOfRooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.GuestRegistration", b =>
                {
                    b.HasOne("Entities.Concrete.Guest", "Guest")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany("GuestRegistrations")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.HomePageSlide", b =>
                {
                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("HomePageSlides")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.HotelService", b =>
                {
                    b.HasOne("Entities.Concrete.Setting", "Setting")
                        .WithMany("HotelServices")
                        .HasForeignKey("SettingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("Entities.Concrete.Income", b =>
                {
                    b.HasOne("Entities.Concrete.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("Entities.Concrete.Message", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Entities.Concrete.Picture", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Pictures")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");
                });

            modelBuilder.Entity("Entities.Concrete.ReceptionReservation", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("ReceptionReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("Registirations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("Registirations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.RoomPicture", b =>
                {
                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomPictures")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Entities.Concrete.Salary", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.HasOne("Entities.Concrete.Aboutus", "Aboutus")
                        .WithMany("Settings")
                        .HasForeignKey("AboutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Contact", "Contact")
                        .WithMany("Settings")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.HomePage", "HomePage")
                        .WithMany("Settings")
                        .HasForeignKey("HomePageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aboutus");

                    b.Navigation("Contact");

                    b.Navigation("HomePage");
                });

            modelBuilder.Entity("Entities.Concrete.StatusOfRoom", b =>
                {
                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("StatusOfRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Entities.Concrete.UseOfExtraService", b =>
                {
                    b.HasOne("Entities.Concrete.ExtraService", "ExtraService")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("ExtraServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Registration", "Registiration")
                        .WithMany("UseOfExtraServices")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Registiration");
                });

            modelBuilder.Entity("Entities.Concrete.WebReservation", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Room", "Room")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.RoomType", "RoomType")
                        .WithMany("WebReservations")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("Entities.Concrete.ServicePack", "ServicePack")
                        .WithMany("WebReservations")
                        .HasForeignKey("ServicePackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("ServicePack");
                });

            modelBuilder.Entity("Entities.Concrete.WorkSchedule", b =>
                {
                    b.HasOne("Entities.Concrete.Employee", "Employee")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Shift", "Shift")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Aboutus", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Concrete.Employee", b =>
                {
                    b.Navigation("EmployeesShifts");

                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("Entities.Concrete.ExtraService", b =>
                {
                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Guest", b =>
                {
                    b.Navigation("GuestRegistrations");
                });

            modelBuilder.Entity("Entities.Concrete.HomePage", b =>
                {
                    b.Navigation("HomePageSlides");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Entities.Concrete.Registration", b =>
                {
                    b.Navigation("GuestRegistrations");

                    b.Navigation("UseOfExtraServices");
                });

            modelBuilder.Entity("Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("StatusOfRooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.RoomFacility", b =>
                {
                    b.Navigation("FacilityOfRooms");
                });

            modelBuilder.Entity("Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("FacilityOfRooms");

                    b.Navigation("ReceptionReservations");

                    b.Navigation("RoomPictures");

                    b.Navigation("Rooms");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.ServicePack", b =>
                {
                    b.Navigation("ReceptionReservations");

                    b.Navigation("Registirations");

                    b.Navigation("WebReservations");
                });

            modelBuilder.Entity("Entities.Concrete.Setting", b =>
                {
                    b.Navigation("HotelServices");
                });

            modelBuilder.Entity("Entities.Concrete.Shift", b =>
                {
                    b.Navigation("EmployeesShifts");

                    b.Navigation("WorkSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
